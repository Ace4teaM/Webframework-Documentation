<?xml version="1.0" encoding="UTF-8"?>
<root>
  <lib title="Webframework" version="1.8.1">
    <object filename="\Application\Configuration.md" type="article" position="0" id="438d08d8529f4a4890b11cc47e731aee">
      <param name="name">Configuration</param>
      <param name="#">La configuration est un élément important de l’application, elle permet au développeur de modifier l’environnement d’exécution et le comportement de l’application sans modification du code.

Depuis la révision « 174 »  Webframework a introduit une gestion avancée des fichiers INI sur lequel s'appui ce système. Reportez-vous au chapitre &lt;Format de fichier INI avancé &gt; pour plus d’informations.

La configuration permet principalement :
    Définir les chemins d’accès aux librairies associées
    Définir les inclusions globales
    Définir les paramètres de connexion à la base de données
    Définir le dictionnaire de données
    Définir les paramètres de l’application

Arborescence des fichiers
------------------------------------

Pour faciliter l’intégration de configuration, Webframework recommande de sectionner la configuration d’une application en plusieurs fichiers:

| Donnée      | Description                                         |
|-------------|-----------------------------------------------------|
| config.ini  | Configuration locale de l'application               |
| all.ini     | Regroupe l'ensemble des fichiers de configuration   |
| fields.ini  | Champs et formats de données                        |
| options.ini | Définit les options spécifiques à l’application     |
| sql.ini     | Fichiers SQL (tables, fonctions, jeu d’essai, …)    |

Un exemple d’intégration est présent dans le répertoire "wfw/minimal/cfg" proposant une base générique d’application. 

###Champs et formats de données (fields.ini)

Stock le dictionnaire de données dans une unique section: [fields_formats].

Chaque champ est identifié par un nom et un format, exemple :

&gt; birth_date = date

Pour savoir quel sont les types supportés, reportez-vous à la section &lt;Format de champ&gt;.

L’utilisation d’un unique nom de section permet de fusionner plusieurs listes de champs et ainsi former un unique dictionnaire de données.

Il est impératif de prévenir tout conflit de noms et de types (voir convention de nommage).

La plupart des champs définit, sont un copié-collé des colonnes de table de la base de données. Il est donc aisé grâce à des logiciels de modélisation de maintenir un modèle de données cohérant et générer le dictionnaire de données. 

###Fichiers SQL (sql.ini)

Les fichiers SQL permettent aux applications hôtes d’inclure les dépendances de script pour configurer la base de données. Cette configuration inclue plusieurs sections :

[sql_tables]
&gt;Correspond généralement au fichier sql/tables.sql généré par le model de données. Ce fichier crée les tables, domaines et types SQL.

[sql_func]
&gt;Correspond généralement au fichier sql/func.sql maintenu par le développeur. Ce fichier crée les procédures stockées.

[sql_init]
&gt;Correspond généralement au fichier sql/ini.sql maintenu par le développeur. Ce fichier initialise divers modification sur les objets avant utilisation (insertions de données, modification de contraintes, etc…).

[sql_populate]
&gt;Correspond généralement au fichier sql/jeu_essai.sql maintenu par le développeur. Ce fichier insert un jeu d’essai global à la BDD permettant de réaliser des tests de fonctionnement.

[sql_remove]
&gt;Correspond généralement au fichier sql/remove.sql maintenu par le développeur. Ce fichier permet de supprimer l’ensemble des objets et insertions du module sans affecter le reste de la BDD.
</param>
    </object>
    <object filename="\Application\Fichier INI avancé.md" type="article" position="0" id="0777e665e5b54d0eb47e3932b8811a6c">
      <param name="name">Fichier INI avancé</param>
      <param name="#">Depuis **Webframework 1.8** une gestion avancée des fichiers .ini a été introduite. Cette version remplace l’utilisation de la fonction standard PHP: **parse_ini_file**.

Sources
-----------
&gt; **Webframework/wfw/php/ini_parse.php**

Usage
--------

###Constantes
La définition de constante permet d’éviter la redondance dans les définitions de chaines, et notamment les chemins d’accès.

&gt; @global nom="valeur"

Pour utiliser une constante entourez celle-ci des caractères ${ et } :

&gt; my_value =  "${nom}"

###Inclusions
La balise @include permet d’inclure un sous fichier de configuration.

&gt; @include "nom_du_fichier.ini"

Inclura le fichier « nom_du_fichier.ini » au fichier en cours.

Note: Les chemins d’accès sont relatifs. Lorsqu’un fichier inclue un autre fichier, c’est l’emplacement de celui-ci qui fait office de chemin de base pour l’inclusion.

###Résolution des doublons
Si dans un fichier vous définissez plusieurs fois une même section, le résultat sera une fusion des paramètres trouvés dans l’ordre de leurs définitions.

Les paramètres définit en doubles seront écrasés dans l’ordre de leurs définitions, c’est-à-dire du haut vers le bas.

| [my_section] |+| [my_section]       |=| [my_section]       |
| :-------     | | :----              | | :---               |
| foo="bar"    | | foo="not bar"      | | foo="not bar"      |
| bar="foo"    | | smile="happiness"  | | bar="foo"          |
|              | |                    | | smile="happiness"  |

</param>
    </object>
    <object filename="\Application\Modèle de données.md" type="article" position="0" id="2a4efe1a27cb413da8ed0510f4e14864">
      <param name="name">Modèle de données</param>
      <param name="#">Créer un modèle de données définit l'ensemble des champs utilisés par votre application.

Définition
----------
  * Un Identifiant
  * Une Description
  * Un Format

###Identifiant
Chaque champ est unique et possède un usage spécifique. Webframework en définit certains (voir Champs réservés par Webframework). Les modules comme toutes applications, en définissent aussi, pour plus d’informations reportez-vous à la documentation concernée.

###Format
Le format, test la validité d’une chaine de caractères. C’est une composante de sécurité importante car elle filtre les champs reçu par l’utilisateur avant leurs utilisations.

Par convention, votre application définit les formats associés à vos champs dans la section **[fields_formats]** du document **cfg/fileds.ini**, comme dans l’exemple suivant :

	[fields_formats] 
	firstname = name
	lastname = name 
	birthday = date 
	contact = mail 

Le contrôleur de l'application fait la relation avec la classe de base **cInput** correspondante. Ainsi le format **mail** utilise la classe **cInputMail**, le format **identifier** utilise la classe **cInputIdentifier**, etc… Vous pouvez donc aisément ajouter vos propres formats en définissant de nouvelles classes dérivées de **cInput**.

###Description
La description apparait dans les formulaires utilisateur et les résultats de procédures.

Chaque texte peut être écrit dans différents langages, dans le cas ou votre application doit être multi-langage. Le langage par défaut est définit par un paramètre de configuration (voir chapitre Application).

Les descriptions sont écrites au format XML dans le fichier **default.xml**.

    &lt;results lang="fr"&gt;
        &lt;fields&gt;
            &lt;contact&gt;Adresse eMail&lt;/contact&gt;
            &lt;firstname&gt;Prénom&lt;/firstname&gt;
            &lt;lastname&gt;Nom&lt;/lastname&gt;
            &lt;birthday&gt;Date de naissance&lt;/birthday&gt;
        &lt;/fields&gt;
    &lt;/results&gt;


Champs réservés
---------------
Webframework définit une partie du dictionnaire de données pour son fonctionnement de base. Il est donc déconseillé d’utiliser ces identifiants dans un contexte différent de celui définit ci-dessous.

Résultat de procédure :

| Identifiant | Description                   | Format     |
|-------------|-------------------------------|----------- |
| result      | Contexte de résultat          | Identifier |
| error       | Code de l’erreur              | Identifier |
| message     | Message de l’erreur           | Identifier |
| txt_result  | Texte du contexte de résultat | String     |
| txt_error   | Texte de l’erreur             | String     |
| txt_message | Texte du message de l’erreur  | String     |

Model-Vue-Contrôleur :

| Identifiant | Description                   | Format     |
|-------------|-------------------------------|----------- |
| app 	      | Nom de l’application 	      | Identifier |
| ctrl 	      | Nom du contrôleur 	          | Identifier |
| output      | Format de sortie du document  | Identifier |


Modélisation des données
------------------------
Il est vivement recommandé d’utiliser un logiciel spécialisé pour modéliser votre modèle de données.

Cela apporte plusieurs avantages :

1. Modélisation intuitive des entités
2. Exportation du modèle de données (scripts SQL)
3. Exportation du modèle orienté objet (classes PHP, C++, Java, etc…)
4. Maintenance facilitée
5. Gain de temps


PowerAMC
---------------
Les applications tierces de **Webframework** ont été construites avec le logiciel **PowerAMC **.

Si vous êtes familier de ce logiciel vous pourrez utiliser les extensions suivantes pour faciliter l’exportation de vos données :

Extension de langage pour PHP:
&gt; Webframework/documents/sybase/php-wfw.xol

Extension SGBD pour PostgreSQL-8
&gt; Webframework/documents/sybase/pgsql8-wfw.xdb

Reportez-vous au fichier **Webframework/documents/sybase/readme.md** pour savoir comment installer cette extension dans PowerAMC.
</param>
    </object>
    <object filename="\Application\Résultats de procédure.md" type="article" position="0" id="f27d231ae1a4473b9a7f6e81df7b350f">
      <param name="name">Résultats de procédure</param>
      <param name="#">Par convention, les développeurs ont l’habitude d'utiliser un code unique pour identifier des erreurs ou informations de retour de fonction.
Les résultat de procédures expliqué ici permette de structurer une erreur ou une information a travers les différents langages d'une API (SQL&gt;PHP&gt;HTML&gt;...)

Sources
-----------
&gt; **Webframework/wfw/php/result.php**

Définition
----------------------

&gt; 0 (zéro) indique un succès, les autres valeurs une erreur.

Cette méthode a l'inconvénient d'être uniquement relative à la fonction ou au programme qu'il exécute, masquant ainsi généralement les détail d'une erreur plus profonde et ajoutant ainsi de la difficulté au débogage.

Pour combler ces lacunes, Webframework représente les résultats de procédure de façon structuré:

| Donnée       | Description |
|--------------|----------------------------------------------|
| Code         | Fichier erroné, Connexion impossible, etc... |
| Contexte     | Succès, Échec, Erreur système, etc...        |
| Informations | Données associatives                         |

###Contexte
Définit dans quel contexte c’est produit l’erreur. Généralement définit par l’une des valeurs suivantes:

    ERR_OK     : La procédure est un succès
    ERR_FAILED : La procédure à échoué pour des raisons fonctionnelles (argument invalide, état incorrecte, manque de droits, etc…)
    ERR_SYSTEM : La procédure à échoué pour des raisons systèmes (problème matériel, etc…) indépendant de l’application 

###Code
Définit un identifiant précisant la cause de l’erreur, ce code est définit par l’utilisateur.

###Informations
Un tableau associatif précisant l’erreur.

Conventions
----------------------

####Codage des fonctions
* La valeur de retour est un booléen: true (succès) ou false (échec)
* La fonction stocke le résultat dans une variable a portée globale.

Le résultat d’une fonction à une porté globale:
- Il est consultable en dehors du bloque de la fonction
- Il n’existe qu’un seul code en cours à la fois

Cette méthode s’applique essentiellement aux applications Single-Thread.

Pourquoi utiliser cette convention ?
------------------------------------------------
###Le problème avec un code de retour numérique
* Les codes sont limités par la plage de valeur
* Les application utilisent des codes d’erreurs spécifiques
* Le manque de précision dans l’information
* Le risque de masquer un code de retour

###L’avantage du résultat de procédure
* Une chaîne ne pose pas de limitation de taille
* Les codes d’erreurs son facilement compréhensible et réutilisable par d’autres applications
* Des informations complémentaires sous forme d’un tableau associatif permet de détailler l’erreur
* La porté globale permet de ne pas perdre l’information entre deux fonctions


</param>
    </object>
    <object filename="\postgresql\func.sql" type="procedure" position="984" id="1f78fb43b1dc49988543828611989584">
      <param name="name">set_global</param>
      <param name="params">p_name in VARCHAR, p_value in VARCHAR</param>
      <param name="returntype">VARCHAR</param>
      <param name="param">[VARCHAR] p_name  : Nom de la variable</param>
      <param name="param">[VARCHAR] p_value : Valeur à définir</param>
      <param name="return">[VARCHAR] Valeur</param>
    </object>
    <object filename="\postgresql\func.sql" type="procedure" position="1475" id="8239ff23083c43db9957f3833fdc8c52">
      <param name="name">get_global</param>
      <param name="params">p_name in VARCHAR,p_def_value in VARCHAR /*default null*/</param>
      <param name="returntype">VARCHAR</param>
      <param name="param">[VARCHAR] p_name      : Nom de la variable</param>
      <param name="param">[VARCHAR] p_def_value : Valeur retourné si introuvable, NULL par défaut</param>
      <param name="return">[VARCHAR] Valeur</param>
    </object>
    <object filename="\postgresql\func.sql" type="procedure" position="2012" id="d9612be48c4a49bd870cf3aa1a869af8">
      <param name="name">del_global</param>
      <param name="params">p_name in VARCHAR</param>
      <param name="returntype">void</param>
      <param name="param">[VARCHAR] p_name : Nom de la variable</param>
    </object>
    <object filename="\postgresql\func.sql" type="procedure" position="4478" id="b855bdd5880f438488552a1646bf59d9">
      <param name="name">escape_accents</param>
      <param name="params"> 
	p_text varchar
</param>
      <param name="returntype">varchar</param>
      <param name="brief">Exclue les accents d'une chaine de caractères</param>
      <param name="param">p_text Texte à convertir</param>
      <param name="return">Texte sans accents</param>
      <param name="remarks">Les accents typiques de la langague francaise sont remplacés par des caractères simples. Ex: 'é' devient 'e', 'ç' devient 'c'</param>
    </object>
    <object filename="\postgresql\func.sql" type="procedure" position="4973" id="1ec5fb2f0c5e4382acd3e30b5e19085d">
      <param name="name">random_token</param>
      <param name="params">token_length int</param>
      <param name="returntype">text</param>
      <param name="return">[TEXT] Token généré</param>
      <param name="param">int token_length Taille du token</param>
    </object>
    <object filename="\postgresql\func.sql" type="procedure" position="5696" id="a254da7ca0fa4eeba8e335a5eec9f7cc">
      <param name="name">make_id</param>
      <param name="params">
        p_table_name varchar,
        p_id_name varchar
</param>
      <param name="returntype">RESULT</param>
    </object>
    <object filename="\postgresql\func.sql" type="procedure" position="6155" id="1a2825661aec4107a92ddb3720e22753">
      <param name="name">new_id</param>
      <param name="params">
        p_table_name varchar,
        p_id_name varchar
</param>
      <param name="returntype">INT</param>
    </object>
    <object filename="\array.php" type="function" position="1432" id="5f69a16a36c44c27a6924db14c3823af">
      <param name="name">array_to_tree</param>
      <param name="params">$simple_array</param>
      <param name="brief">Convertie un tableau simple en tableau d'arborescence</param>
      <param name="param">[in] array $simple_array Tableau à convertir </param>
      <param name="return">Tableau en arborescence</param>
      <param name="retval">array  Tableau en arborescence</param>
      <param name="remark">Chaque clé du tableau correspond à un chemin de noms séparé par des points (.)</param>
      <param name="par">Exemple</param>
      <param name="endcode">*              Sortie:</param>
      <param name="code">Array</param>
    </object>
    <object filename="\array.php" type="function" position="3124" id="17cf22a2b0414bcd8bb8d950ca86749d">
      <param name="name">tree_to_array</param>
      <param name="params">$tree_array</param>
      <param name="attention">Cette fonction n'est pas implémenté, elle retournera toujours NULL</param>
      <param name="brief">Convertie un tableau d'arborescence en tableau simple</param>
      <param name="param">[in] array $tree_array Tableau à convertir </param>
      <param name="return">Tableau</param>
      <param name="retval">array  Tableau associatif</param>
    </object>
    <object filename="\array.php" type="function" position="3473" id="faf33e52ea944f0fa8dc39456443a82e">
      <param name="name">array_length</param>
      <param name="params">$ar</param>
      <param name="brief">Obtient la taille d'un tableau</param>
      <param name="param">[in] array $ar Tableau à examiner</param>
      <param name="return">Taille du tableau</param>
      <param name="retval">int  Nombre d'élément(s) dans le tableau</param>
    </object>
    <object filename="\array.php" type="function" position="3754" id="909028d233a04adf815f804817f2bce4">
      <param name="name">array_cmp</param>
      <param name="params">$ar1,$ar2</param>
      <param name="brief">Compare deux tableaux</param>
      <param name="param">[in] array $ar1 Tableau à comparer</param>
      <param name="param">[in] array $ar2 Tableau à examiner</param>
      <param name="return">Différence entre les deux tableaux</param>
      <param name="retval">false une ou plusieur clés de \c $ar1 est introuvable dans \c $ar2</param>
      <param name="retval">true toutes les clés de \c $ar1 sont existantes dans \c $ar2</param>
    </object>
    <object filename="\array.php" type="function" position="4285" id="a1bf67a7985b43da85dbbe30e4f305c2">
      <param name="name">array_find</param>
      <param name="params">$ar1,$ar2</param>
      <param name="brief">Alias de la fonction \link array_cmp</param>
    </object>
    <object filename="\base.php" type="function" position="1884" id="2baccc52a6f743f78ad2c3082fe4121b">
      <param name="name">get_cur_script_dir</param>
      <param name="params">
      </param>
      <param name="brief">Retourne le chemin d'accès relatif au script actuel</param>
      <param name="return">Chemin d'accès</param>
    </object>
    <object filename="\base.php" type="function" position="2057" id="169d9a67158e44ba841ee6853b956c44">
      <param name="name">get_abs_script_dir</param>
      <param name="params">
      </param>
      <param name="brief">Retourne le chemin d'accès absolu au script actuel</param>
      <param name="return">Chemin d'accès</param>
    </object>
    <object filename="\base.php" type="function" position="2236" id="dfe7a4bceb51427ea2f48c7b73f10891">
      <param name="name">get_web_root</param>
      <param name="params">
      </param>
      <param name="brief">Retourne le chemin d'accès absolu au dossier web</param>
      <param name="return">Chemin d'accès</param>
    </object>
    <object filename="\base.php" type="function" position="2405" id="5078d329d5de44ae92908628687480bc">
      <param name="name">file_ext</param>
      <param name="params">$filename</param>
      <param name="brief">Obtient l'extension d'un nom de fichier</param>
      <param name="param">string $filename Nom de fichier</param>
      <param name="return">L'extension trouvé (convertie en minuscule)</param>
      <param name="remarks">Une chaine vide est retourné si aucune extension n'est trouvée</param>
      <param name="remarks">L'extension nom est retourné sans point "."</param>
    </object>
    <object filename="\base.php" type="function" position="2810" id="1cd51d4e08814c35b1f7e21fb6a51f96">
      <param name="name">set_fileext</param>
      <param name="params">$path, $ext</param>
      <param name="brief">Définit l'extension d'un nom de fichier</param>
      <param name="param">string $path Nom de fichier</param>
      <param name="param">string $ext La nouvelle extension (sans point '.')</param>
      <param name="return">Le nouveau nom de fichier</param>
    </object>
    <object filename="\base.php" type="function" position="3209" id="e9740abec7e14e668d0d2babf1b0ea81">
      <param name="name">path</param>
      <param name="params">$base</param>
      <param name="brief">Assemble un chemin d'accès</param>
      <param name="param">string $base Chemin de base</param>
      <param name="param">string ... Autres fragments de chemins</param>
      <param name="return">string Chemin complet</param>
      <param name="remarks">Le premier caractère de séparation est utilisé pour uniformiser la chaine (ex: '/srv/file\path' = '/srv/file/path'). Si aucun séparateur n'est trouvé, la constante 'SYSTEM_FILE_SEPARATOR' est utilisée.</param>
      <param name="par">Exemple</param>
      <param name="endcode">
      </param>
    </object>
    <object filename="\base.php" type="function" position="4913" id="6e1b37b3cf3e4c42bb9d0806d08d736b">
      <param name="name">resolve_path</param>
      <param name="params">$dir</param>
      <param name="brief">Resoud un chemin d'accès</param>
      <param name="param">string $dir Chemin d'accès relatif</param>
      <param name="return">Chemin d'accès absolu</param>
      <param name="retval">null Chemin introuvable</param>
      <param name="retval">false Chemin introuvable (avec resultat)</param>
      <param name="remarks">resolve_path recherche le fichier/dossier dans les chemins d'accès définit par PHP (voir get_include_path())</param>
    </object>
    <object filename="\base.php" type="function" position="6064" id="069a6a18c6fc46c7a3c6c29b9b661be7">
      <param name="name">include_path</param>
      <param name="params">$dir</param>
      <param name="brief">Inclue un dossier de fichiers PHP</param>
      <param name="param">string $dir Chemin d'accès</param>
      <param name="return">Liste des fichiers trouvés</param>
      <param name="retval">array Tableau des fichiers inclus (avec le chemin d'accès)</param>
      <param name="remarks">Inclue les fichiers portant l'extension '.php'</param>
    </object>
    <object filename="\base.php" type="function" position="7018" id="9b2e3825c269455593222d12957064ab">
      <param name="name">require_path</param>
      <param name="params">$dir</param>
      <param name="brief">Inclue un dossier de fichiers PHP</param>
      <param name="param">string $dir Chemin d'accès</param>
      <param name="return">Liste des fichiers trouvés</param>
      <param name="retval">array Tableau des fichiers inclus (avec le chemin d'accès)</param>
      <param name="remarks">Inclue les fichiers portant l'extension '.php'</param>
    </object>
    <object filename="\base.php" type="function" position="7972" id="0dbbe23a7e4f4c4092c8672d1263fc6e">
      <param name="name">uniq_filename</param>
      <param name="params">$base_name, $dir</param>
      <param name="param">$base_name Nom de base du fichier, si vide auto</param>
      <param name="param">$dir Chemin d'accès au dossier de création</param>
      <param name="return">Nom de fichier unique sans le chemin d'accès</param>
    </object>
    <object filename="\base.php" type="function" position="8450" id="45f5186ee8cc472186aff3396f526a3a">
      <param name="name">get_declared_classes_of</param>
      <param name="params">$baseName</param>
      <param name="brief">Liste les noms de classes heritées du type donné</param>
      <param name="param">string $baseName Nom de la classe de base</param>
      <param name="return">Types de classes trouvées</param>
      <param name="retval">array Tableau associatif des noms de classes trouvées</param>
    </object>
    <object filename="\base.php" type="function" position="9094" id="b24a93add0bd4f5eb2feb612be382290">
      <param name="name">byteToSize</param>
      <param name="params">$bytes_count</param>
      <param name="brief">Transforme un nombre d'octet en une taille avec suffix</param>
      <param name="param">int $bytes_count Nombre d'octets</param>
      <param name="return">Taille convertie en chaine</param>
      <param name="retval">string Taille en nombre suivit du suffix de type (ex: 1.3 Mo)</param>
    </object>
    <object filename="\base.php" type="function" position="9713" id="37a12a8c400347b0a42fe828518b2a0f">
      <param name="name">sizeToByte</param>
      <param name="params">$size,$intVal=false</param>
      <param name="brief">Transforme une taille avec suffix en nombre d'octet</param>
      <param name="param">string $size Taille en chaine</param>
      <param name="param">bool $intVal Force le retour en entier (voir remarques). 'false' par défaut</param>
      <param name="return">Taille en octets</param>
      <param name="retval">false La fonction a échouée (voir cResult::getLast pour plus d'informations)</param>
      <param name="retval">null  La fonction a échouée</param>
      <param name="remarks">'sizeToByte' retourne une valeur entière en utilisant la fonction 'intval', le plafond de cette valeur est limitée par l'architecture matériel (32-bits,64-bits,etc..)</param>
    </object>
    <object filename="\base.php" type="function" position="11637" id="8b79d578a0fa401aa3588b8ab2396648">
      <param name="name">empty_string</param>
      <param name="params">$str</param>
      <param name="brief">Test si une chaine est vide</param>
      <param name="param">string $str Chaine à tester</param>
      <param name="return">true, si la chaine n'est pas vide</param>
      <param name="retval">true La chaine contient des caractères autres que des caractères invisibles</param>
      <param name="retval">false La chaine ne contient pas de caractères visibles</param>
    </object>
    <object filename="\base.php" type="function" position="11998" id="44d19d79cb03408a920ee67cba1ba00b">
      <param name="name">strexplode</param>
      <param name="params">$str, $sep, $bTrim</param>
      <param name="brief">Eclate une chaine en tableau</param>
      <param name="param">string $str Chaine à éclater</param>
      <param name="param">string $sep Séparateur</param>
      <param name="param">bool $bTrim true, si les espaces doivent être Rognés</param>
      <param name="return">Tableau des éléments trouvés</param>
      <param name="remarks">Les éléments vides sont ignorés</param>
    </object>
    <object filename="\base.php" type="function" position="12595" id="2dfdeb17f7574eadaac616ac50119ac4">
      <param name="name">nvl</param>
      <param name="params">$value, $replacement</param>
      <param name="brief">Test si une valeur est vide ou nulle. Dans ce cas, retourne la valeur de remplacement</param>
      <param name="param">mixed $value Valeur à tester</param>
      <param name="return">Valeur de remplacement</param>
      <param name="remarks">La fonction empty() est utilisée pour tester la valeur</param>
    </object>
    <object filename="\base.php" type="function" position="12950" id="3861ddcfc7b34226bf1ca0c54e180876">
      <param name="name">error_get_last_str</param>
      <param name="params">
      </param>
      <param name="brief">Retourne la dernière erreur PHP (texte)</param>
      <param name="return">Texte de l'erreur</param>
    </object>
    <object filename="\base.php" type="function" position="13205" id="89e9806bd9c5497396e4aabb9f973750">
      <param name="name">cmp_max_strlen</param>
      <param name="params">$a, $b</param>
      <param name="brief">Callback de comparaison pour la fonction de tri 'uasort'</param>
      <param name="remarks">Tri du plus petit nom au plus grand nom</param>
    </object>
    <object filename="\base.php" type="function" position="13476" id="5ea7fe5f834847ca8c47bb3cd2b25c6d">
      <param name="name">cast</param>
      <param name="params">$destination, $sourceObject</param>
      <param name="brief">Convertie dynamiquement un type d'objet</param>
      <param name="param">string|object $destination Objet de destination</param>
      <param name="param">object $sourceObject Objet source</param>
      <param name="return">object Objet de destination</param>
    </object>
    <object filename="\cDataBasePostgres.php" type="class" position="1191" id="22929fc75e1648399df76314e543fae0">
      <param name="name">cDataBasePostgres</param>
      <param name="brief">Interface de connexion avec la base de données PostgreSQL</param>
    </object>
    <object filename="\cDataBasePostgres.php" type="class" position="6537" id="b4c45f03f9d34eea8f8918dcb1498f33">
      <param name="name">cDataBaseQueryPostgres</param>
      <param name="brief">Requête de données SQL pour la classe cDataBasePostgres</param>
    </object>
    <object filename="\cDataBasePostgres.php" type="function" position="7161" id="39c9a6f7d5f34b1f831244eaab4d9e73">
      <param name="name">cDataBaseQueryPostgres</param>
      <param name="params">$query, cDataBasePostgres $db</param>
      <param name="brief">Constructeur</param>
    </object>
    <object filename="\cDataBasePostgres.php" type="member" position="6785" id="84f68ba6663644c29ee12b6658bfa889">
      <param name="name">query</param>
      <param name="default">
      </param>
    </object>
    <object filename="\cDataBasePostgres.php" type="method" position="1859" id="38f86d8e7cb048ed92e713d8c1fff45d">
      <param name="name">__destruct</param>
      <param name="params">
      </param>
      <param name="brief">Libére la connexion</param>
    </object>
    <object filename="\cDataBasePostgres.php" type="method" position="1980" id="8d2295c432a5460aa1c7cbe33137c669">
      <param name="name">getServiceProviderName</param>
      <param name="params">
      </param>
      <param name="brief">Obtient le nom du fournisseur de service utilisé</param>
      <param name="return">string "PostgreSQL"</param>
    </object>
    <object filename="\cDataBasePostgres.php" type="method" position="2188" id="28a7f1b85c0449c9a72a5b64b2866fce">
      <param name="name">connect</param>
      <param name="params">$user = "postgres", $name = "postgres", $pwd = "admin", $server = "localhost", $port = 5432</param>
      <param name="brief">Etablie la connexion</param>
      <param name="param">string $user   Identifiant de connexion</param>
      <param name="param">string $name   Nom de la base de données</param>
      <param name="param">string $pwd    Mot-de-passe de connexion</param>
      <param name="param">string $server Adresse du serveur</param>
      <param name="param">string $port   Port du serveur</param>
      <param name="return">bool Etat de la connexion</param>
      <param name="retval">true La connexion est établie</param>
      <param name="retval">false la connexion à échouée</param>
    </object>
    <object filename="\cDataBasePostgres.php" type="method" position="3112" id="4e44d32de1ab41cd8696d4c1e58dc758">
      <param name="name">disconnect</param>
      <param name="params">
      </param>
      <param name="brief">Termine la connexion</param>
      <param name="return">void Rien</param>
    </object>
    <object filename="\cDataBasePostgres.php" type="method" position="3343" id="6cad66f1906c4936a1cb0a67c529643b">
      <param name="name">call</param>
      <param name="params">$schema, $func, $arg_list,&amp;$result</param>
      <param name="brief">Appel une fonction SQL</param>
      <param name="param">string  $schema    Nom du schéma (package) parent de la fonction</param>
      <param name="param">string  $func      Nom de la fonction</param>
      <param name="param">array   $arg_list  Tableau associatif des arguments de la fonction, null si aucun</param>
      <param name="return">bool Résultat de la requête</param>
      <param name="retval">true  La requête à réussie</param>
      <param name="retval">false La requête ne peut être executée, voir getResult() pour obtenir plus de détails</param>
      <param name="remarks">Pour extraire le résultat retourné par une fonction utilisez les methodes fetchValue ou fetchRow</param>
    </object>
    <object filename="\cDataBasePostgres.php" type="method" position="4772" id="3296e87a2b554dd5825379f9f7242a06">
      <param name="name">parseValue</param>
      <param name="params">$value</param>
      <param name="brief">Convertie un objet PHP en type SQL</param>
      <param name="param">mixed  $value  Objet à convertir</param>
      <param name="return">string Valeur comptatible avec le type SQL correspondant</param>
    </object>
    <object filename="\cDataBasePostgres.php" type="method" position="5423" id="7eca52746dc54e1d99f41f58c51d4f85">
      <param name="name">execute</param>
      <param name="params">$query,&amp;$result</param>
      <param name="brief">Execute une requete SQL</param>
      <param name="param">string          $query    Corps de la requête</param>
      <param name="param">iDatabaseQuery  $result   [out] Pointeur sur l'instance du résultat</param>
      <param name="return">bool Résultat de la requête</param>
      <param name="retval">true  La requête à réussie</param>
      <param name="retval">false La requête ne peut être executée, voir getResult() pour obtenir plus de détails</param>
      <param name="remarks">Pour extraire le résultat retourné, utilisez les methodes iDatabaseQuery::fetchValue ou iDatabaseQuery::fetchRow</param>
    </object>
    <object filename="\cDataBasePostgres.php" type="method" position="6340" id="7755025327e44bf093f27fa393d657ae">
      <param name="name">getConnectionObject</param>
      <param name="params">
      </param>
      <param name="brief">retourne la ressource de connexion à la base Postgres (retourné par pg_connect)</param>
    </object>
    <object filename="\cDataBasePostgres.php" type="method" position="7367" id="e8707debf6264ea4a75819d565192fd6">
      <param name="name">execute</param>
      <param name="params">
      </param>
      <param name="brief">Execute </param>
    </object>
    <object filename="\cDataBasePostgres.php" type="method" position="7766" id="107fc3fd37b149ad95de71b828d9853a">
      <param name="name">fetchValue</param>
      <param name="params">$column_name</param>
      <param name="brief">Extrait une valeur du résultat en cours</param>
      <param name="param">mixed   $column_name   Nom de la colonne à extraire</param>
      <param name="return">mixed Valeur de la colonne</param>
    </object>
    <object filename="\cDataBasePostgres.php" type="method" position="8248" id="1f99f615e40d48cc8f4bcb43eb5ac507">
      <param name="name">fetchRow</param>
      <param name="params">
      </param>
      <param name="brief">Extrait la prochaine ligne du résultat en cours</param>
      <param name="return">array Tableau associatif des champs</param>
      <param name="remarks">Le curseur de résultat est incrémenté</param>
    </object>
    <object filename="\cDataBasePostgres.php" type="method" position="8594" id="15817fcff7324f07a0c331ec4ad0ba52">
      <param name="name">rowCount</param>
      <param name="params">
      </param>
      <param name="brief">Obtient le nombre de ligne présente</param>
      <param name="return">int Nombre de lignes</param>
    </object>
    <object filename="\cDataBasePostgres.php" type="method" position="8781" id="0d1e44080dd145c8bc908e3ddbb8dde6">
      <param name="name">getQueryStr</param>
      <param name="params">
      </param>
      <param name="brief">Obtient la requête SQL</param>
      <param name="return">string Texte de la requête</param>
    </object>
    <object filename="\cDataBasePostgres.php" type="method" position="8951" id="67435daabfa44cc983d33c00f33114a9">
      <param name="name">getResultObject</param>
      <param name="params">
      </param>
      <param name="brief">Obtient l'objet de résultat</param>
    </object>
    <object filename="\cDataBasePostgres.php" type="method" position="9086" id="d2e6ebf66f6b404caf3602b4472fe6f5">
      <param name="name">setResultObject</param>
      <param name="params">$res</param>
      <param name="brief">Définit l'objet de résultat</param>
    </object>
    <object filename="\cDataBasePostgres.php" type="method" position="9230" id="9c34018397f741bfbb4286cd2fdce5af">
      <param name="name">seek</param>
      <param name="params">$pos,$origin=iDatabaseQuery::Origin</param>
      <param name="brief">Déplace le curseur de sélection</param>
      <param name="param">$pos Index de la position. L'index débute à 0 jusqu'à rowCount()-1</param>
      <param name="return">string Texte de la requête</param>
    </object>
    <object filename="\cDataBasePostgres.php" type="section" position="1315" id="f271c425d2c64076bdf3e8e20cd79358">
      <param name="description">Membres</param>
      <param name="class">cDataBasePostgres</param>
    </object>
    <object filename="\cDataBasePostgres.php" type="section" position="1684" id="e9aa1ca38da04b1b99054b149c43f257">
      <param name="description">Méthodes</param>
      <param name="class">cDataBasePostgres</param>
    </object>
    <object filename="\cDataBasePostgres.php" type="section" position="6669" id="aea8959f7717405e91bf7990c9a9bc31">
      <param name="description">Membres</param>
      <param name="class">cDataBaseQueryPostgres</param>
    </object>
    <object filename="\cDataBasePostgres.php" type="section" position="6977" id="2bf13e2e7d4041e08f22ea3f0ed0f5f8">
      <param name="description">Méthodes</param>
      <param name="class">cDataBaseQueryPostgres</param>
    </object>
    <object filename="\error.php" type="function" position="1042" id="0792eeb421be4dae9976e2f64571bede">
      <param name="name">proc_result</param>
      <param name="params">$err_code,$err_str=""</param>
      <param name="param">int    $err_code   Code de l'erreur</param>
      <param name="param">string $err_string Identifiant de l'erreur</param>
      <param name="return">bool true si le code d'erreur est égale à ERR_OK, sinon false</param>
    </object>
    <object filename="\error.php" type="function" position="1622" id="f9d79aa2e55b4de1a122f1e095b12e0a">
      <param name="name">last_err_str</param>
      <param name="params">
      </param>
      <param name="return">string Identifiant de l'erreur</param>
    </object>
    <object filename="\error.php" type="function" position="1834" id="42777f593d2f47cc8926a4f0c4fa26a8">
      <param name="name">last_err_code</param>
      <param name="params">
      </param>
      <param name="return">int Code numérique de l'erreur</param>
    </object>
    <object filename="\error.php" type="function" position="2039" id="b46a6fd3194e42719fa0a1d7612f8b60">
      <param name="name">result_check</param>
      <param name="params">$min_code=ERR_OK</param>
    </object>
    <object filename="\file.php" type="function" position="2942" id="6ce8e9c9e7ae44d1b397d4f496774fa2">
      <param name="name">file_find</param>
      <param name="params">$path, $name, $filetype, $filter</param>
      <param name="brief">Recherche un fichier spécifique</param>
      <param name="param">string $path : chemin d'acces de base</param>
      <param name="param">string $name : nom du fichier sans le chemin d'acces</param>
      <param name="param">string $filetype : Type de fichier recherché (correspondant à la fonction filetype()) </param>
      <param name="param">string $filter : Expression régulière pour filtrer les noms de dossiers</param>
      <param name="return">string Chemin d'accès vers le fichier trouvé. NULL si aucun</param>
    </object>
    <object filename="\file.php" type="function" position="4231" id="aca8cf5b6ae04df786d591473934136a">
      <param name="name">file_search</param>
      <param name="params">$path, $name, $filetype, $filter, &amp;$output</param>
      <param name="brief">Recherche des fichiers</param>
      <param name="param">string $path : Chemin d'acces de base</param>
      <param name="param">string $name : Expression régulière des noms de fichier acceptés</param>
      <param name="param">string $filetype : Type de fichier recherché (correspondant à la fonction filetype())</param>
      <param name="param">string $filter : Expression régulière pour filtrer les noms de dossiers</param>
      <param name="param">array &amp;$output : Tableau des fichiers trouvés (chemins complets)</param>
      <param name="return">bool TRUE</param>
    </object>
    <object filename="\ini_parse.php" type="function" position="2184" id="9b7ffdd4c07649018bf6fbc38672cc6f">
      <param name="name">parse_ini_file_ex</param>
      <param name="params">$filename,$att=INI_PARSE_UPPERCASE</param>
      <param name="brief">Parser avancée de fichier INI</param>
      <param name="param">string $filename Le nom du fichier de configuration à analyser</param>
      <param name="param">type $content Combinaison des masques suivants: INI_PARSE_UPPERCASE</param>
      <param name="return">array La configuration est retournée sous la forme d'un tableau associatif</param>
      <param name="retval">FALSE Une erreur est survenue</param>
      <param name="remarks">La constante ROOT_PATH doit être définit</param>
    </object>
    <object filename="\ini_parse.php" type="function" position="2841" id="61a100f4f70c43f69c5c7afbc230f762">
      <param name="name">resolve_ini_string_ex</param>
      <param name="params">$content,$dir=".",$const=array(</param>
      <param name="brief">Resoud les inclusions et constantes dans un fichier INI</param>
      <param name="param">type $content Contenu texte du fichier INI</param>
      <param name="param">type $dir     Dossier de base pour les inclusions</param>
      <param name="param">type $const   Tableau associatif des constantes existantes</param>
      <param name="return">string Contenu texte du fichier INI transformé</param>
    </object>
    <object filename="\ini_parse.php" type="function" position="4439" id="58d2988fcb86494eb34856a6a8fb5725">
      <param name="name">parse_ini_string_ex</param>
      <param name="params">$content,$dir=".",$att=INI_PARSE_UPPERCASE</param>
      <param name="brief">Charge la configuration d'un fichier INI</param>
      <param name="param">type $content Contenu texte du fichier INI</param>
      <param name="param">type $dir     Dossier d'inclusion</param>
      <param name="param">type $content Combinaison des masques suivants: INI_PARSE_UPPERCASE</param>
      <param name="return">array Tableau associatif des sections de valeurs</param>
      <param name="remarks">Lors d'une inclusion (@include), parse_ini_string_ex va rechercher le fichier par rapport au dossier relatif du script. Si celui-ci reste introuvable, $dir est utilisé comme chemin de réference.</param>
    </object>
    <object filename="\sql_catalog.php" type="member" position="279" id="5b57d7620b104c2cab4844d5bcd55cd3">
      <param name="name">server_adr</param>
      <param name="default">NULL</param>
    </object>
    <object filename="\sql_catalog.php" type="member" position="331" id="6eb1c52d3b7f4043b3d2cdd2295fd67d">
      <param name="name">server_usr</param>
      <param name="default">NULL</param>
    </object>
    <object filename="\sql_catalog.php" type="member" position="390" id="a4b8a03a7fc147e884312ffe1002c3cc">
      <param name="name">server_pwd</param>
      <param name="default">NULL</param>
    </object>
    <object filename="\sql_catalog.php" type="member" position="451" id="e4877119c71f4549bb8171a7d127321a">
      <param name="name">server_connect</param>
      <param name="default">NULL</param>
    </object>
    <object filename="\sql_catalog.php" type="member" position="510" id="acf775c78bef466db77d5aada5bd5314">
      <param name="name">guid</param>
      <param name="default">NULL</param>
    </object>
    <object filename="\xarg.php" type="function" position="317" id="7bbec0cf7a4343bd80bb1f09b8f9975c">
      <param name="name">xarg_encode_field</param>
      <param name="params">$title, $msg</param>
      <param name="brief">Encode un champ dans le format XARG</param>
      <param name="param">string $title Titre du paramétre (Format identifier recommandé)</param>
      <param name="param">string $title Valeur du paramétre</param>
      <param name="return">chaine au format XARG</param>
    </object>
    <object filename="\xarg.php" type="function" position="821" id="204e3bd6ad6c43648240cc4cca53cb30">
      <param name="name">xarg_encode_array</param>
      <param name="params">$array</param>
      <param name="brief">Encode les champs d'un tableau associatif dans le format XARG</param>
      <param name="param">string $array Tableau associatif</param>
      <param name="return">chaine au format XARG</param>
    </object>
    <object filename="\xarg.php" type="function" position="1141" id="8f6b3287c3de43d3b9886b3142a21d40">
      <param name="name">xarg_parse</param>
      <param name="params">$text, $bencoded</param>
      <param name="brief">Convertie une chaine au format XARG en tableau associatif</param>
      <param name="param">string $text     Corps du document XARG</param>
      <param name="param">string $bencoded true si la chaine est encodé au format d'une URI, sinon false</param>
      <param name="return">Tableau associatif des paramètres</param>
    </object>
    <object filename="\xdocument.php" type="class" position="1321" id="15137739a70040e1afc478d754c7c47b">
      <param name="name">XMLDocument</param>
      <param name="brief">Document XML</param>
      <param name="remarks">La classe XMLDocument est une extension de la classe DOMDocument</param>
    </object>
    <object filename="\xdocument.php" type="function" position="2362" id="f843776b8f9b4ccbbc98763c530a45d5">
      <param name="name">enumNodes</param>
      <param name="params">$node, $callback, $bNext</param>
      <param name="brief">Enumére les enfants d'un noeud XML</param>
      <param name="param">type $node Noeud de base</param>
      <param name="param">type $callback Fonction de rappel</param>
      <param name="param">boolean $bNext Si true, suit les noeuds suivant '$node'</param>
      <param name="return">Résultat retourné par la fonction de rappel '$callback'</param>
      <param name="remarks">La fonction de rappel bool Callback(Node node,String condition), tant que la fonction retourne true l'énumération continue.</param>
    </object>
    <object filename="\xdocument.php" type="function" position="4811" id="95406278c4e74a8fae2cc05c229efb6e">
      <param name="name">compareNode</param>
      <param name="params">$src, $dst</param>
      <param name="brief">Compare deux noeuds</param>
      <param name="param">XMLElement $src     Elément source</param>
      <param name="param">XMLElement $dst     Elément de destination</param>
      <param name="return">int Masque de bits définissant les differences entre les deux noeuds</param>
      <param name="retval">XMLDocument::SameNode Les deux noeuds sont identiques</param>
      <param name="endcode">
      </param>
    </object>
    <object filename="\xdocument.php" type="function" position="6548" id="744cd843e0e5419a83529ac68272c09a">
      <param name="name">mergeArguments</param>
      <param name="params">$select, $node, $merge_type</param>
      <param name="brief">Fusionne les arguments de deux éléments</param>
      <param name="param">XMLElement $select     Elément source</param>
      <param name="param">XMLElement $node       Elément de destination</param>
      <param name="param">string     $merge_type Type de fusion. Callback ou l'une des valeurs suivantes: "replace", "after", "before"</param>
      <param name="return">XMLElement Noeud modifié</param>
    </object>
    <object filename="\xdocument.php" type="function" position="22929" id="f2e2a72eee66408c90c1e88e32770eb8">
      <param name="name">createTextElement</param>
      <param name="params">$tagName,$value</param>
      <param name="brief">Crée un élément simple avec un texte en contenu</param>
      <param name="param">type $tagName Nom de la balise</param>
      <param name="param">type $value Text à insérer</param>
      <param name="return">DOMElement Element créé</param>
    </object>
    <object filename="\xdocument.php" type="function" position="23786" id="85fdc5118c9d47098a7fa479b6318d1f">
      <param name="name">appendAssocArray</param>
      <param name="params">$parentNode,$assocArray</param>
      <param name="brief">Ajoute un ensemble d'éléments depuis un tableau associatif</param>
      <param name="param">type $parentNode Elément recevant les éléments créés</param>
      <param name="param">type $assocArray Tableau associatif conenant les valeurs à ajouter</param>
      <param name="return">DOMElement L'Element parent</param>
    </object>
    <object filename="\xdocument.php" type="function" position="24289" id="fd08762835a746bc995c8419430aeddb">
      <param name="name">out</param>
      <param name="params">
      </param>
      <param name="brief">Ajoute un ensemble d'élément depuis un tableau associatif</param>
      <param name="param">type $parentNode Elément recevant les éléements créés</param>
      <param name="param">type $assocArray Tableau associatif contenant les valeurs à ajouter</param>
      <param name="return">DOMElement L'Element parent</param>
    </object>
    <object filename="\xdocument.php" type="function" position="24671" id="8ffeae54a1f342f291b83eb11b22d6c3">
      <param name="name">toArray</param>
      <param name="params">
      </param>
      <param name="brief">Converti les éléments du document en tableau associatif (non-recursif)</param>
      <param name="return">array Tableau associatif des éléments</param>
    </object>
    <object filename="\xdocument.php" type="method" position="3735" id="e2d5a700124444b593a1159c150bbac7">
      <param name="name">mergeNodesByTagName</param>
      <param name="params">$in, $out, $src, $dst</param>
      <param name="brief">Fusionne recursivement deux éléments</param>
      <param name="param">XMLElement $select     Elément source</param>
      <param name="param">XMLElement $node       Elément de destination</param>
      <param name="param">string     $merge_type Type de fusion. Callback ou l'une des valeurs suivantes: "replace", "after", "before"</param>
      <param name="return">XMLElement Noeud modifié</param>
    </object>
    <object filename="\xdocument.php" type="method" position="8001" id="4fc6f133cf6143fba37dec84e6fdc0c8">
      <param name="name">getNodeValue</param>
      <param name="params">$path, $bcreate_missing = FALSE</param>
      <param name="brief">Obtient la valeur d'un noeud</param>
      <param name="param">string $path             Chemin d'accès au noeud</param>
      <param name="param">bool   $bcreate_missing  Elément de destination</param>
      <param name="return">Valeur du noeud (DOMNode::nodeValue)</param>
      <param name="retval">-1 si introuvable</param>
      <param name="retval">NULL en cas d'erreur</param>
    </object>
    <object filename="\xdocument.php" type="method" position="8540" id="14764c1e7751400d97d51139b64a3e37">
      <param name="name">setNodeValue</param>
      <param name="params">$path, $value, $bcreate_missing = FALSE</param>
      <param name="brief">Definit la valeur d'un noeud</param>
      <param name="param">string $path             Chemin d'accès au noeud</param>
      <param name="param">string $value            Valeur du noeud</param>
      <param name="param">bool   $bcreate_missing  Elément de destination</param>
      <param name="return">$value</param>
      <param name="retval">NULL en cas d'erreur</param>
    </object>
    <object filename="\xdocument.php" type="method" position="9117" id="df7ab675cd00474fb834334f58c5bfd1">
      <param name="name">setValue</param>
      <param name="params">$node, $value</param>
      <param name="brief">Définit la valeur (texte) d'un élément</param>
      <param name="param">DOMElement $node  Element a modifier</param>
      <param name="param">string     $value Valeur à insérer</param>
      <param name="return">L'Element modifié</param>
      <param name="remarks">Le contenu du noeud est supprimé</param>
    </object>
    <object filename="\xdocument.php" type="method" position="9571" id="610e12054d0242cc9d91b57597507173">
      <param name="name">getAtt</param>
      <param name="params">$node, $name</param>
      <param name="brief">Obtient la valeur d'un attribut</param>
      <param name="param">DOMElement $node  Noeud de base</param>
      <param name="param">string     $name  Nom de l'attribut</param>
      <param name="return">Valeur de l'attribut</param>
      <param name="remarks">Une chaine vide est retournée si l'attribut est introuvable</param>
    </object>
    <object filename="\xdocument.php" type="method" position="10555" id="627f116372064abc8a89758f02509c99">
      <param name="name">all</param>
      <param name="params">$selector, $context = NULL</param>
      <param name="brief">Obtient plusieurs éléments du document</param>
      <param name="param">string $selector Sélecteur, de style CSS (voir Remarques)</param>
      <param name="param">DOMNode $context  Noeud de base, si NULL l'élément racine du document est choisit</param>
      <param name="return">Liste des noeuds trouvés (DOMNode) ou un tableau vide si introuvable</param>
      <param name="remarks">Le selecteur peut prendre la forme suivante ( &gt; TAGNAME [ATT_NAME=ATT_VALUE,...] )</param>
    </object>
    <object filename="\xdocument.php" type="method" position="11535" id="930c2f73bea241f0a03dc1cb53f99aeb">
      <param name="name">one</param>
      <param name="params">$selector, $context = NULL, $addCheck = NULL</param>
      <param name="brief">Obtient un élément du document</param>
      <param name="param">string $selector Sélecteur, de style CSS (voir Remarques)</param>
      <param name="param">DOMNode $context  Noeud de base, si NULL l'élément racine du document est choisit</param>
      <param name="param">function $addCheck Fonction de verification additionnel</param>
      <param name="return">Retourne le noeud trouvé (DOMNode), NULL si introuvable</param>
      <param name="remarks">Le selecteur peut prendre la forme suivante ( &gt; TAGNAME [ATT_NAME=ATT_VALUE,...] )</param>
    </object>
    <object filename="\xdocument.php" type="method" position="21407" id="ea4f5a3126084eb299e08cbc47d0ecc6">
      <param name="name">replaceNodeByContent</param>
      <param name="params">$node</param>
      <param name="param">DOMNode $node noeud à remplacer</param>
      <param name="return">Premier noeud enfant deplacé</param>
      <param name="retval">false L'élément est l'élément racine (il ne peut pas être remplacé</param>
    </object>
    <object filename="\xdocument.php" type="method" position="23342" id="7d0f3534301645819f949c5b14ecee53">
      <param name="name">parseValue</param>
      <param name="params">$value</param>
      <param name="brief">Convertie un objet PHP en type TEXT/XML</param>
      <param name="param">mixed  $value Objet à convertir</param>
      <param name="return">string Valeur texte</param>
    </object>
    <object filename="\xdocument.php" type="method" position="25196" id="da3c66176f90404d8f60da2e3b47963a">
      <param name="name">toXML</param>
      <param name="params">$node,$array</param>
      <param name="brief">Converti les éléments du document en tableau associatif (non-recursif)</param>
      <param name="return">array Tableau associatif des éléments</param>
    </object>
    <object filename="\xdocument.php" type="method" position="25815" id="ce362a09827e4f0eb81b0ed3fdefba03">
      <param name="name">toAssocXML</param>
      <param name="params">$node,$curKey,$array</param>
      <param name="brief">Converti les éléments du document en tableau associatif (non-recursif)</param>
      <param name="return">array Tableau associatif des éléments</param>
    </object>
    <object filename="\xdocument.php" type="section" position="1470" id="05504fa08dca4f51b769638a96561655">
      <param name="description">Constantes</param>
      <param name="class">XMLDocument</param>
    </object>
    <object filename="\xdocument.php" type="section" position="2106" id="96a67a29a27441f0816dd11af7bd4c84">
      <param name="description">Méthodes</param>
      <param name="class">XMLDocument</param>
    </object>
    <object filename="\xml_catalog.php" type="member" position="261" id="cdcd68a6e58446e59c3c8d0c22000196">
      <param name="name">doc</param>
      <param name="default">NULL</param>
    </object>
    <object filename="\xml_catalog.php" type="member" position="311" id="332b011cb21742169338cca3504add8f">
      <param name="name">guid</param>
      <param name="default">NULL</param>
    </object>
    <object filename="\xml_catalog.php" type="member" position="2775" id="682164cf8b154c1581e585cde923d770">
      <param name="name">catalog</param>
      <param name="default">NULL</param>
    </object>
    <object filename="\xml_catalog.php" type="member" position="2819" id="a19083e9b15641ad92dc82eee855fb5d">
      <param name="name">item_node</param>
      <param name="default">NULL</param>
    </object>
    <object filename="\xml_catalog.php" type="member" position="2865" id="3b9eba79a15a4069be17b3d471e8ad58">
      <param name="name">guid</param>
      <param name="default">NULL</param>
    </object>
    <object filename="\xml_default.php" type="class" position="1177" id="ab69cf98413c4aa6ac9c3dfc68c54cd9">
      <param name="name">cXMLDefault</param>
    </object>
    <object filename="\xml_default.php" type="member" position="2012" id="935ac8fa079b45c4842e626eb59fa438">
      <param name="name">doc</param>
      <param name="default">NULL</param>
    </object>
    <object filename="\xml_default.php" type="member" position="2082" id="bde2d9780450492286661aa8feb95914">
      <param name="name">fileName</param>
      <param name="default">NULL</param>
    </object>
    <object filename="\xml_default.php" type="method" position="2304" id="0ecde74a0ae04c07a9dfeb438d5290b0">
      <param name="name">Initialise</param>
      <param name="params">$doc</param>
      <param name="brief">Charge le document XML</param>
      <param name="param">$doc Chemin d'accès au fichier ou instance d'une classe XMLDocument</param>
      <param name="return">Résultat de procédure</param>
    </object>
    <object filename="\xml_default.php" type="method" position="3010" id="33bd924410c94a7cba96fa9e1bd5f251">
      <param name="name">save</param>
      <param name="params">
      </param>
      <param name="brief">Sauvegarde le document dans son fichier d'origine</param>
      <param name="return">Résultat de procédure</param>
    </object>
    <object filename="\xml_default.php" type="method" position="3428" id="bd75106a20ca4c8895932bfedc0773e3">
      <param name="name">getModuleConfigNode</param>
      <param name="params">$id</param>
      <param name="brief">Obtient un noeud de l'index des modules (obselete, utiliser getConfigNode)</param>
      <param name="param">$id Identificateur du module. Si null, retourne le premier noeud</param>
      <param name="return">[XMLElement] Noeud trouve, null si introuvable</param>
    </object>
    <object filename="\xml_default.php" type="method" position="4269" id="b4f2b850abda46f8a334c6805e6a7492">
      <param name="name">getConfigNode</param>
      <param name="params">$type, $id</param>
      <param name="brief">Obtient un noeud de la configuration</param>
      <param name="param">$type Nom de balise de l'element enfant</param>
      <param name="param">$id   Identificateur du module. Si null, retourne le premier noeud</param>
      <param name="return">[XMLElement] Noeud trouve, null si introuvable</param>
    </object>
    <object filename="\xml_default.php" type="method" position="5078" id="1f14c27051bb4b279b36ce1eecda939c">
      <param name="name">getValue</param>
      <param name="params">$nodeName</param>
      <param name="brief">Obtient la valeur d'un noeud</param>
      <param name="param">$nodeName Nom du noeud (nom de balise)</param>
      <param name="return">Texte du noeud. Une chaine vide est retourné si le noeud est introuvable</param>
    </object>
    <object filename="\xml_default.php" type="method" position="5480" id="f0e02fddd10441cca89048585c68ff29">
      <param name="name">getIndexValue</param>
      <param name="params">$type, $id</param>
      <param name="brief">Obtient la valeur d'un noeud de l'index</param>
      <param name="param">$type Type de noeud (nom de balise)</param>
      <param name="param">$id   Identificateur</param>
      <param name="return">Text du noeud trouve. Une chaine vide est retourné si le noeud est introuvable</param>
    </object>
    <object filename="\xml_default.php" type="method" position="5928" id="fac87a71cd0a4c8f8ba35831d2b33068">
      <param name="name">getIndexNode</param>
      <param name="params">$type, $id</param>
      <param name="brief">Retourne un élément de l'index</param>
      <param name="param">$type Type (nom de balise)</param>
      <param name="param">$id   Identifiant (attribut 'id')</param>
      <param name="return">XMLElement Référence sur l'élément XML correspondant</param>
      <param name="retval">null Élément introuvable</param>
    </object>
    <object filename="\xml_default.php" type="method" position="6592" id="0575d151a79b4f8c8ad195ac8b7bbfaa">
      <param name="name">addIndexNode</param>
      <param name="params">$type, $id</param>
      <param name="brief">Ajoute un noeud à l'index</param>
      <param name="param">$type : Type de noeud (nom de balise)</param>
      <param name="param">$id   : Identificateur</param>
      <param name="return">[XMLElement] Noeud inséré, null en cas d'erreur</param>
    </object>
    <object filename="\xml_default.php" type="method" position="7331" id="7c029160fc7c48b7a7c992262e548299">
      <param name="name">setIndex</param>
      <param name="params">$type, $id, $value</param>
      <param name="brief">Définit un noeud de l'index</param>
      <param name="param">string $type  Type de noeud (nom de balise)</param>
      <param name="param">string $id    Identificateur</param>
      <param name="param">string $value Valeur du noeud</param>
      <param name="return">DOMElement Noeud inséré, null en cas d'erreur</param>
      <param name="remarks">Si le noeud n'existe pas il est créé</param>
    </object>
    <object filename="\xml_default.php" type="method" position="7894" id="10564d2cf7244992b452ddc9b550bdae">
      <param name="name">getTreeNode</param>
      <param name="params">$page_id</param>
      <param name="brief">Obtient un noeud de l'arbre de navigation</param>
      <param name="param">$page_id   : Identificateur. Si null retourne le noeud parent de l'arbre 'site/tree'</param>
      <param name="return">[XMLElement] Noeud trouve, null si introuvable</param>
    </object>
    <object filename="\xml_default.php" type="method" position="8957" id="70e36bd1721442f9b09f1d3c098d379b">
      <param name="name">addTreeNode</param>
      <param name="params">$parent_id, $page_id</param>
      <param name="brief">Ajoute un noeud à l'arbre de navigation</param>
      <param name="param">$parent_id : identificateur de la page du parent. Si null, le neud est placé à la racine de l'arbre</param>
      <param name="param">$page_id   : identificateur de la page à inserer</param>
      <param name="return">[XMLElement] Noeud insere, null en cas d'erreur</param>
      <param name="remarks">Si le noeud existe dans l'arbre, il est déplacé</param>
    </object>
    <object filename="\xml_default.php" type="method" position="10430" id="dbb1c4256ea54f4cbb45bb8a8b520a28">
      <param name="name">getResultText</param>
      <param name="params">$type, $code, $lang="fr"</param>
      <param name="brief">Obtient le texte associé à un code de résultat</param>
      <param name="param">string $code Code de résultat désiré</param>
      <param name="param">string $lang Code du langage désiré</param>
      <param name="return">Traduction du code. Si le texte est introuvable, $code est retourné.</param>
    </object>
    <object filename="\xml_default.php" type="method" position="10995" id="1030830fc07f42c9ac0b5557703539b2">
      <param name="name">getFiledText</param>
      <param name="params">$id, &amp;$text, $lang="fr"</param>
      <param name="brief">Obtient le texte associé à une définition de champs</param>
      <param name="param">string $id Identificateur du champs</param>
      <param name="param">string $text Référence recevant le texte</param>
      <param name="param">string $lang Langage utilisé</param>
      <param name="return">Résultat de procédure</param>
    </object>
    <object filename="\xml_default.php" type="section" position="1239" id="86ae28e3d857469180aca0c029884fc9">
      <param name="description">Constantes</param>
      <param name="class">cXMLDefault</param>
    </object>
    <object filename="\xml_default.php" type="section" position="1844" id="0eed6fa0096c4b20b7f44d50e9203c89">
      <param name="description">Membres</param>
      <param name="class">cXMLDefault</param>
    </object>
    <object filename="\xml_default.php" type="section" position="2133" id="f3fa9dd3ee984eb488dc0ef1a5950cc3">
      <param name="description">Constantes</param>
      <param name="class">cXMLDefault</param>
    </object>
    <object filename="\templates\str_template.php" type="member" position="3447" id="8a9de3097f784608beddeaa0bc0dac7b">
      <param name="name">check_text_class</param>
      <param name="default">array()</param>
    </object>
    <object filename="\templates\str_template.php" type="member" position="3516" id="a1d2ba5f547a458893c046034d5c5a86">
      <param name="name">xml_files</param>
      <param name="default">array()</param>
    </object>
    <object filename="\templates\str_template.php" type="member" position="3584" id="d922a8e0beee4092b2682e541e0e9c4f">
      <param name="name">var_path</param>
      <param name="default">
      </param>
    </object>
    <object filename="\templates\str_template.php" type="member" position="3646" id="d853736d45484a3bbb5e5b6cfef5c059">
      <param name="name">arg</param>
      <param name="default">
      </param>
    </object>
    <object filename="\templates\str_template.php" type="member" position="3682" id="93be0350be7140dca2c2826414d7fa85">
      <param name="name">select</param>
      <param name="default">NULL</param>
    </object>
    <object filename="\templates\str_template.php" type="member" position="3730" id="cfe43eb8fb7e4c5b94dfaf1d8129aa45">
      <param name="name">text</param>
      <param name="default">NULL</param>
    </object>
    <object filename="\templates\template_markers.php" type="class" position="1149" id="9ba1995fa3c0487e8773a28bf49d3359">
      <param name="name">cTemplateMarker</param>
    </object>
    <object filename="\templates\template_markers.php" type="class" position="8797" id="575008b0d0a44d07bc58a6eb69256f83">
      <param name="name">cTemplateMarkerdefault</param>
    </object>
    <object filename="\templates\xml_template.php" type="class" position="4328" id="729086cf4bc54557a53a3aadaaf82783">
      <param name="name">cXMLTemplate</param>
      <param name="brief">Classe de template XML</param>
    </object>
    <object filename="\templates\xml_template.php" type="function" position="5986" id="d0f2e9b3b44c4be981373fcf9802a8b8">
      <param name="name">__construct</param>
      <param name="params">
      </param>
      <param name="brief">Constructeur</param>
    </object>
    <object filename="\templates\xml_template.php" type="function" position="28868" id="084490a5c998495cb264d33f65bb96d2">
      <param name="name">htmlentities_only</param>
      <param name="params">$myHTML</param>
      <param name="brief">Convertie les entités HTML seulement, les entités XML sont ignorées</param>
      <param name="param">string $myHTML Text à convertir</param>
      <param name="return">Text à convertie</param>
      <param name="remarks">Les entités (amp, lt, gt, quot, apos) ne sont pas converties</param>
    </object>
    <object filename="\templates\xml_template.php" type="infos" position="1367" id="379786754e4f4925b891f9c21059894c">
      <param name="title">Template XML</param>
      <param name="">
	- Ajouter l'espace de nommage "http://www.webframework.fr/last/xmlns/template" à l'en-tête du fichier XML
	- Le template agit par "transformation" applicable aux éléments et leurs enfants
	- Tous les fichiers chargés dynamiquement durant une transformation sont relatifs à l'URL du document [input]
	- Les éléments sont analysés comme suit: si une action est définit -&gt; sélection des données -&gt; traitement des arguments -&gt; transformation de l'élément

	## Actions
	SELECT   : Déplace le curseur de sélection. Si introuvable, l'élément est ignoré.
	EXIST    : Vérifie si une valeur existe dans la sélection, les arguments ou les paramètres. Si introuvable, l'élément est ignoré (le curseur de sélection est déplacé).
	ARRAY    : Transforme n fois un élément.
	MERGE    : Fusionne les attributs et le contenu texte de la source dans la destination.
	INCLUDE  : Inclue le contenu XML de la source dans la destination.
	IGNORE   : Ignore le contenu de l'élément concerné
	FORMAT   : Formate le contenu texte au format HTML
	EXP      : Test une expression réguliere sur la sélection

	## Éléments
	container : Utilisé pour contenir une action, 'container' est supprimé après génération (seul les enfants sont conservés)

	## Attributs
	* path      : chemin d'accès à la sélection.
		fichier+cible = [:FileName:[/xml_path]]
		absolue       = [/xml_path]
		relative      = [xml_path]
		noeud         = [identifier]
	* action    : identifiant de l'action à entreprendre sur l'élément.
	* condition : conditions dans une sélection SELECT ou ARRAY, une ou plusieurs des conditions ci-dessous:
		[attribut_name='value';] = condition d'egalite
	* exp       : expression réguliere utilisé avec l'action "EXP".

	## Marqueurs
	-{!Identifier}                   : insert un texte brut au document sans formatage XML (insére apres transformation du document)
	-{Identifier}                    : insert un texte passé en argument ou en sélection.
	-{Identifier|'ReplacementText'}  : insert un texte passé en argument ou en sélection, si introuvable insert le texte de remplacement.
	-{SectionId:Id}                  : insert un texte contenu dans l'index (default.xml): page, mail, uri, etc...
	-{SectionId:Id@Attribute}        : insert un attribut contenu dans l'index (default.xml): page, mail, uri, etc...
	-{:Page_Id}                      : insert un lien de page contenu dans l'index (default.xml). URI complète avec protocole.

	## Marqueurs prédéfinies
	-{__array_count__}               : dans une action ARRAY, retourne le compteur de boucle.
	-{__inner_text__}                : dans une action ARRAY ou SELECT, retourne le texte interne du noeud.
	-{__date_rfc822__}               : date actuelle au format RFC822.
	-{__date_w3c__}                  : date actuelle au format du W3C.
	-{__timpestamp__}                : timestamp UNIX en cours.
	-{__uri__}                       : nom de domaine spécifié dans "default.xml", vide si inexistant.
</param>
      <param name="">
      </param>
    </object>
    <object filename="\templates\xml_template.php" type="member" position="5008" id="d26fa5bafe9242ab955be20a557b8ac8">
      <param name="name">wfw_template_uri</param>
      <param name="default">"http://www.webframework.fr/last/xmlns/template"</param>
    </object>
    <object filename="\templates\xml_template.php" type="member" position="5142" id="797559e025cc4777afac9df1f4d9c094">
      <param name="name">check_text_class</param>
      <param name="default">NULL</param>
    </object>
    <object filename="\templates\xml_template.php" type="member" position="5215" id="52f237f8c96a4be1b637b971da79b337">
      <param name="name">xml_files</param>
      <param name="default">array()</param>
    </object>
    <object filename="\templates\xml_template.php" type="member" position="5290" id="32243c610430465c8e0296f4611072ef">
      <param name="name">var_path</param>
      <param name="default">
      </param>
    </object>
    <object filename="\templates\xml_template.php" type="member" position="5359" id="95b210dce1ce4c7d8d81a6897b235395">
      <param name="name">arg</param>
      <param name="default">
      </param>
    </object>
    <object filename="\templates\xml_template.php" type="member" position="5402" id="f9bedd512c3d4d64a427ffc661c3ae76">
      <param name="name">select</param>
      <param name="default">NULL</param>
    </object>
    <object filename="\templates\xml_template.php" type="member" position="5457" id="9cd7010927a940498462868e689afcf0">
      <param name="name">doc</param>
      <param name="default">NULL</param>
    </object>
    <object filename="\templates\xml_template.php" type="member" position="5519" id="e2a0139a5d4947bcbb5395bef85609d2">
      <param name="name">input_element</param>
      <param name="default">NULL</param>
    </object>
    <object filename="\templates\xml_template.php" type="member" position="5601" id="a33712dbc6014edb812ea8f05fcddaa6">
      <param name="name">resolve_html_entites</param>
      <param name="default">true</param>
    </object>
    <object filename="\templates\xml_template.php" type="member" position="5723" id="9fc5a4bc96fd4520a3ca8ee3c19f668b">
      <param name="name">transformed_event</param>
      <param name="default">NULL</param>
    </object>
    <object filename="\templates\xml_template.php" type="method" position="6118" id="d819205c9ca84439b704ffe3231b983e">
      <param name="name">setRootPath</param>
      <param name="params">$path</param>
      <param name="brief">Définit le chemin racine</param>
    </object>
    <object filename="\templates\xml_template.php" type="method" position="6258" id="4a9512de7ece43869cd9209463219484">
      <param name="name">Initialise</param>
      <param name="params">$input_file, $input_element, $select_file, $select_element, $arg</param>
      <param name="brief">Prépare un template à être transformé</param>
      <param name="param">string/XMLDocument $input_file Nom ou instance du document à charger</param>
      <param name="param">XMLElement $input_element Elément de départ à transformer. Si NULL, l'élément racine du document $input_file est selectionné.</param>
      <param name="param">type $select_file Nom ou instance du document à charger en selection</param>
      <param name="param">type $select_element Elément de selection par défaut. Si NULL, l'élément racine du document $select_file est selectionné.</param>
      <param name="param">type $arg Tableau associatif des attributs de selection</param>
      <param name="return">boolean Résultat de procédure</param>
    </object>
    <object filename="\templates\xml_template.php" type="method" position="9855" id="f4a20ed507974375b3753bd72dd1c8d8">
      <param name="name">Transform</param>
      <param name="params">
      </param>
      <param name="brief">Transforme le document</param>
      <param name="return">this Le template</param>
    </object>
    <object filename="\templates\xml_template.php" type="method" position="10224" id="52eac4bbe7214b8883e933af19f69e22">
      <param name="name">Output</param>
      <param name="params">
      </param>
      <param name="brief">Fabrique le texte XML</param>
      <param name="return">string Contenu du document</param>
    </object>
    <object filename="\templates\xml_template.php" type="method" position="10947" id="a2758e81cfed461db3189aaa485312fb">
      <param name="name">Make</param>
      <param name="params">
      </param>
      <param name="brief">Transforme puis fabrique le texte XML du document</param>
      <param name="return">string Contenu du document</param>
    </object>
    <object filename="\templates\xml_template.php" type="method" position="17615" id="3374acfcd3cd42b0a4d616042ef4210b">
      <param name="name">import_node_content</param>
      <param name="params">$input_doc, $dst_node, $src_node</param>
      <param name="brief">Importe le contenu d'un noeud dans un autre document</param>
      <param name="param">$input_doc Document recevant le noeud</param>
      <param name="param">$dst_node  Noeud de destination parent</param>
      <param name="param">$src_node  Noeud à importer</param>
    </object>
    <object filename="\templates\xml_template.php" type="method" position="18264" id="6d2d419e9f6649ddb8b9cf07e02d8a25">
      <param name="name">verify_node_condition</param>
      <param name="params">$select, $arg, $conditions</param>
      <param name="brief">Vérifie si une condition est vrai</param>
      <param name="deprecated">since version 1.7</param>
      <param name="param">$select     Noeud de la sélection active</param>
      <param name="param">$arg        Arguments en cours</param>
      <param name="param">$conditions Syntaxe de la condition</param>
      <param name="returns">TRUE si la condition est vrai. FALSE si la condition est fausse ou invalide</param>
    </object>
    <object filename="\templates\xml_template.php" type="method" position="21234" id="bfeccbebcecd4ffab11f44f4be293da8">
      <param name="name">check_node</param>
      <param name="params">$select, $node, &amp;$arg</param>
      <param name="brief">Transforme un noeuds, ses enfants et tout les noeuds suivants</param>
      <param name="param">$select Curseur sur le noeud en cours de sélection</param>
      <param name="param">$node Curseur sur le noeud en cours de transformation</param>
      <param name="param">$arg Pointeur sur le tableau associatif des arguments</param>
    </object>
    <object filename="\templates\xml_template.php" type="method" position="29683" id="fec50fa47eee4525b684ac97edef4868">
      <param name="name">load_xml_content</param>
      <param name="params">$name, $content</param>
      <param name="brief">Charge un contenu XML en séléction</param>
      <param name="param">string $name Nom du fichier (sans chemin)</param>
      <param name="param">string $content Contenu du document XML</param>
      <param name="return">Instance du document XML</param>
      <param name="retval">NULL Le chargement du contenu a échoué</param>
    </object>
    <object filename="\templates\xml_template.php" type="method" position="30957" id="6d3579be6ea94d93ae270a49b99699ab">
      <param name="name">load_xml_file</param>
      <param name="params">$name, $path = NULL</param>
      <param name="brief">Charge un fichier de selection</param>
      <param name="param">string $name Nom du fichier (sans chemin)</param>
      <param name="param">string $path Chemin d'accès au fichier</param>
      <param name="return">Instance du fichier XML passé en argument</param>
      <param name="retval">NULL Le chargement du fichier a échoué</param>
    </object>
    <object filename="\templates\xml_template.php" type="method" position="33412" id="92aa9bd5af664b00ae4ab9fb7426df2a">
      <param name="name">push_xml_file</param>
      <param name="params">$name, XMLDocument $file</param>
      <param name="brief">Assigne un fichier de selection</param>
      <param name="param">string $name Nom du fichier (sans chemin)</param>
      <param name="param">XMLDocument $file Instance du fichier XML</param>
      <param name="return">Instance du fichier XML passé en argument</param>
    </object>
    <object filename="\templates\xml_template.php" type="method" position="33826" id="51e57b7716a541428038da79c7be6902">
      <param name="name">get_xml_file</param>
      <param name="params">$name</param>
      <param name="brief">Obtient un fichier de selection</param>
      <param name="param">string $name Nom du fichier (sans chemin)</param>
      <param name="return">Instance du fichier XML</param>
      <param name="retval">NULL Fichier introuvable</param>
    </object>
    <object filename="\templates\xml_template.php" type="section" position="4389" id="b3b0b88a36604d3f9aa1824230583fb3">
      <param name="description">Constantes des erreurs</param>
      <param name="class">cXMLTemplate</param>
    </object>
    <object filename="\templates\xml_template.php" type="section" position="4838" id="e8a11ce5353543a3851fe3c0a74fdb32">
      <param name="description">Membres</param>
      <param name="class">cXMLTemplate</param>
    </object>
    <object filename="\templates\xml_template.php" type="section" position="5815" id="4a1fdd940a994bbe95f92be2de3ab089">
      <param name="description">Méthodes</param>
      <param name="class">cXMLTemplate</param>
    </object>
    <object filename="\system\windows\cSchTasksMgr.php" type="method" position="889" id="3737a2576d664ec19b307bc2d02bbd91">
      <param name="name">getById</param>
      <param name="params">int $id</param>
    </object>
    <object filename="\system\windows\cSchTasksMgr.php" type="method" position="1131" id="12bf6b7815de4bb18d5339e2c1faf3c6">
      <param name="name">get</param>
      <param name="params">$name</param>
    </object>
    <object filename="\system\windows\cSchTasksMgr.php" type="method" position="1365" id="57c0152d7e224e47a4dcd1c400e17495">
      <param name="name">set</param>
      <param name="params">cSysTask $task</param>
    </object>
    <object filename="\system\windows\cSchTasksMgr.php" type="method" position="1608" id="639d0880c0684f25b3f9f40941c8bc68">
      <param name="name">delete</param>
      <param name="params">$name</param>
    </object>
    <object filename="\system\windows\cSchTasksMgr.php" type="method" position="2529" id="4aeaa94b979346a486d1f1f140817ace">
      <param name="name">create</param>
      <param name="params">$name, DateTime $date, $cmd</param>
      <param name="param">$name Nom de la tâche. Si la tâche existe, elle sera remplaée</param>
      <param name="param">$date Date d'execution (temps système)</param>
      <param name="param">$cmd Ligne de commande à exécuter (spécifique au système)</param>
      <param name="return">Succès de la procédure</param>
      <param name="retval">false La procédure à échouée (voir cResult::getlast)</param>
      <param name="retval">true  La procédure à réussit</param>
      <param name="remarks">create utilise la global g_app pour obtenir le nom d'utilisateur (SCHTASKS=&gt;USER) et le mot-de-passe (SCHTASKS=&gt;PWD) utilisé pour créer la tâche</param>
    </object>
    <object filename="\system\windows\cSchTasksMgr.php" type="method" position="4411" id="943e9121222e4c34b2872dd9cb2ce58c">
      <param name="name">createRecursive</param>
      <param name="params">$name, $min, $cmd</param>
      <param name="param">$name  Nom de la tâche. Si la tâche existe, elle sera remplaée</param>
      <param name="param">$min   Délais de rappel en minutes</param>
      <param name="param">$cmd   Ligne de commande à exécuter (spécifique au système)</param>
      <param name="return">Succès de la procédure</param>
      <param name="retval">false La procédure à échouée (voir cResult::getlast)</param>
      <param name="retval">true  La procédure à réussit</param>
    </object>
    <object filename="\system\windows\cSchTasksMgr.php" type="method" position="5034" id="2e5b8d2a126f4aabac8a3f374725710a">
      <param name="name">createPHPRequest</param>
      <param name="params">$name, DateTime $date, $reqName, $reqName</param>
    </object>
    <object filename="\system\linux\cAnacronTasksMgr.php" type="method" position="568" id="3d9d4654baa2476bb1c3daf27ab303f4">
      <param name="name">getById</param>
      <param name="params">int $id</param>
    </object>
    <object filename="\system\linux\cAnacronTasksMgr.php" type="method" position="810" id="a982a4c98abe401d912f390c65d6fcf6">
      <param name="name">get</param>
      <param name="params">$name</param>
    </object>
    <object filename="\system\linux\cAnacronTasksMgr.php" type="method" position="1044" id="175bc7b55fc64f629e5b063997a61bff">
      <param name="name">set</param>
      <param name="params">cSysTask $task</param>
    </object>
    <object filename="\system\linux\cAnacronTasksMgr.php" type="method" position="1287" id="28f7a0fec8c140afa278f73570d7b480">
      <param name="name">delete</param>
      <param name="params">$name</param>
    </object>
    <object filename="\system\linux\cAnacronTasksMgr.php" type="method" position="1526" id="7d18f33decd442a4b61c9f8ac0577e34">
      <param name="name">create</param>
      <param name="params">$name, DateTime $date, $cmd</param>
      <param name="param">$name Nom de la tâche. Si la tâche existe, elle sera remplacée</param>
      <param name="param">$date Date d'execution (temps système)</param>
      <param name="param">$cmd Ligne de commande à exécuter (spécifique au système)</param>
      <param name="return">Succès de la procédure</param>
      <param name="retval">false La procédure à échouée (voir cResult::getlast)</param>
      <param name="retval">true  La procédure à réussit</param>
      <param name="remarks">create utilise la global g_app pour obtenir le nom d'utilisateur (SCHTASKS=&gt;USER) et le mot-de-passe (SCHTASKS=&gt;PWD) utilisé pour créer la tâche</param>
    </object>
    <object filename="\system\linux\cAnacronTasksMgr.php" type="method" position="2297" id="1021c387d9684a2ea1484e435acbdc56">
      <param name="name">createRecursive</param>
      <param name="params">$name, $min, $cmd</param>
      <param name="param">$name  Nom de la tâche. Si la tâche existe, elle sera remplaée</param>
      <param name="param">$min   Délais de rappel en minutes</param>
      <param name="param">$cmd   Ligne de commande à exécuter (spécifique au système)</param>
      <param name="return">Succès de la procédure</param>
      <param name="retval">false La procédure à échouée (voir cResult::getlast)</param>
      <param name="retval">true  La procédure à réussit</param>
    </object>
    <object filename="\system\linux\cAnacronTasksMgr.php" type="method" position="5151" id="7f6f11f441894ffab28f4fa892b358c4">
      <param name="name">createPHPRequest</param>
      <param name="params">$name, DateTime $date, $reqName, $reqName</param>
    </object>
    <object filename="\system\linux\cCronTasksMgr.php" type="method" position="565" id="ab6e139a994043feb2a11f399d12ab5f">
      <param name="name">getById</param>
      <param name="params">int $id</param>
    </object>
    <object filename="\system\linux\cCronTasksMgr.php" type="method" position="807" id="472d9c28f93a4e8ca388c47cc7267afc">
      <param name="name">get</param>
      <param name="params">$name</param>
    </object>
    <object filename="\system\linux\cCronTasksMgr.php" type="method" position="1041" id="423d05849244445ea542fe6e17d86d6b">
      <param name="name">set</param>
      <param name="params">cSysTask $task</param>
    </object>
    <object filename="\system\linux\cCronTasksMgr.php" type="method" position="1284" id="2577c7bdd18a4848a59e5f53447c2c3e">
      <param name="name">delete</param>
      <param name="params">$name</param>
    </object>
    <object filename="\system\linux\cCronTasksMgr.php" type="method" position="1523" id="ff56951ceb0a4c3b8ce4746f03c742d0">
      <param name="name">create</param>
      <param name="params">$name, DateTime $date, $cmd</param>
      <param name="param">$name Nom de la tâche. Si la tâche existe, elle sera remplaée</param>
      <param name="param">$date Date d'execution (temps système)</param>
      <param name="param">$cmd Ligne de commande à exécuter (spécifique au système)</param>
      <param name="return">Succès de la procédure</param>
      <param name="retval">false La procédure à échouée (voir cResult::getlast)</param>
      <param name="retval">true  La procédure à réussit</param>
      <param name="remarks">create utilise la global g_app pour obtenir le nom d'utilisateur (SCHTASKS=&gt;USER) et le mot-de-passe (SCHTASKS=&gt;PWD) utilisé pour créer la tâche</param>
    </object>
    <object filename="\system\linux\cCronTasksMgr.php" type="method" position="3695" id="6e37cfa8865349089d5cc390119b1dfa">
      <param name="name">createRecursive</param>
      <param name="params">$name, $min, $cmd</param>
      <param name="param">$name  Nom de la tâche. Si la tâche existe, elle sera remplaée</param>
      <param name="param">$min   Délais de rappel en minutes</param>
      <param name="param">$cmd   Ligne de commande à exécuter (spécifique au système)</param>
      <param name="return">Succès de la procédure</param>
      <param name="retval">false La procédure à échouée (voir cResult::getlast)</param>
      <param name="retval">true  La procédure à réussit</param>
    </object>
    <object filename="\system\linux\cCronTasksMgr.php" type="method" position="4318" id="2bc1bd2385634b74a73163c91b24d1ae">
      <param name="name">createPHPRequest</param>
      <param name="params">$name, DateTime $date, $reqName, $reqName</param>
    </object>
    <object filename="\inputs\bool.php" type="class" position="1282" id="22a73887db934cd2ad55a4304b263f74">
      <param name="name">cInputBool</param>
      <param name="brief">Test une valeur booleen</param>
    </object>
    <object filename="\inputs\bool.php" type="method" position="1535" id="9a53b9545a7c468ba8162a1d747715cf">
      <param name="name">isValid</param>
      <param name="params">$value</param>
      <param name="brief">Test la validité d'une chaine</param>
      <param name="return">[RESULT] Résultat du test </param>
    </object>
    <object filename="\inputs\bool.php" type="method" position="2071" id="91984c1039814376befae156a9b5bbe2">
      <param name="name">regExp</param>
      <param name="params">
      </param>
      <param name="brief">Obtient l'expression régulière </param>
      <param name="return">[string] Expression régulière </param>
    </object>
    <object filename="\inputs\bool.php" type="method" position="2257" id="673a4772948d4ad5847521d5cbd6a1e8">
      <param name="name">getMaxLength</param>
      <param name="params">
      </param>
      <param name="brief">Obtient la longueur maximale possible de la chaine </param>
      <param name="return">[int] Longueur maximale de la chaine </param>
    </object>
    <object filename="\inputs\bool.php" type="method" position="2448" id="bf2ec39bf4c04f5b9caacf9464984bb3">
      <param name="name">toObject</param>
      <param name="params">$value</param>
      <param name="brief">Convertie la chaine en objet PHP</param>
      <param name="return">[bool] valeur</param>
    </object>
    <object filename="\inputs\bool.php" type="method" position="2801" id="516aadb4b4c943a1b5784f1e8d02d209">
      <param name="name">toBool</param>
      <param name="params">$value</param>
      <param name="brief">Convertie la chaine en booléen</param>
      <param name="return">[bool] valeur</param>
    </object>
    <object filename="\inputs\bool.php" type="method" position="3063" id="ae69e6b1d6f94102b91e9665c0fde67c">
      <param name="name">toString</param>
      <param name="params">$value</param>
      <param name="brief">Convertie la chaine en booléen</param>
      <param name="param">$value [string] Valeur </param>
      <param name="return">[bool] valeur</param>
    </object>
    <object filename="\inputs\bool.php" type="section" position="1359" id="9015645bed44419c83f857f03651cabb">
      <param name="description">Méthodes héritées</param>
      <param name="class">cInputBool</param>
    </object>
    <object filename="\inputs\bool.php" type="section" position="2621" id="9035d4a3ba744b64a1f70f1b7de1d5a2">
      <param name="description">Méthodes spécifiques</param>
      <param name="class">cInputBool</param>
    </object>
    <object filename="\inputs\date.php" type="class" position="1228" id="88741712643a4845a05e22dacd49f04f">
      <param name="name">cInputDate</param>
      <param name="brief">Test une date</param>
    </object>
    <object filename="\inputs\date.php" type="section" position="1295" id="0426d9cab4ae40079d88cd411bd39e43">
      <param name="description">Méthodes</param>
      <param name="class">cInputDate</param>
    </object>
    <object filename="\inputs\datetime.php" type="class" position="1228" id="72f6935c1ff8439ca9ca0c590810bed8">
      <param name="name">cInputDateTime</param>
      <param name="brief">Test une date + temps</param>
    </object>
    <object filename="\inputs\datetime.php" type="section" position="1307" id="542684b6a47849d2954adfd1790cfe9a">
      <param name="description">Méthodes</param>
      <param name="class">cInputDateTime</param>
    </object>
    <object filename="\inputs\evalstring.php" type="class" position="1331" id="3da480d59fd84479bcf10ee2cf559196">
      <param name="name">cInputEvalString</param>
      <param name="brief">Test une chaine executable</param>
      <param name="remarks">La chaine ne doit pas avoir de caractères succeptible de modifier des variables ou appeler des fonctions</param>
    </object>
    <object filename="\inputs\evalstring.php" type="section" position="1534" id="2e38cfba5a404af1ac151df2f3fa0643">
      <param name="description">Méthodes</param>
      <param name="class">cInputEvalString</param>
    </object>
    <object filename="\inputs\factor.php" type="class" position="1228" id="cae29a4b593947648658ef1440f3c087">
      <param name="name">cInputFactor</param>
      <param name="brief">Test un facteur de 0 à 1 </param>
    </object>
    <object filename="\inputs\factor.php" type="section" position="1309" id="d5598cc129fc4057b22d8b4351e39ee2">
      <param name="description">Méthodes</param>
      <param name="class">cInputFactor</param>
    </object>
    <object filename="\inputs\filename.php" type="class" position="1256" id="49854f144942418391e28976469a6df5">
      <param name="name">cInputWindowsFileName</param>
      <param name="brief">Test un nom de fichier Windows</param>
    </object>
    <object filename="\inputs\filename.php" type="class" position="2488" id="7eea1696d20d44c8a76c4ae524c623b7">
      <param name="name">cInputUNIXFileName</param>
      <param name="brief">Test un nom de fichier UNIX</param>
    </object>
    <object filename="\inputs\filename.php" type="section" position="1351" id="a0163b9d818d4ed3beef9ea9951323c1">
      <param name="description">Méthodes</param>
      <param name="class">cInputWindowsFileName</param>
    </object>
    <object filename="\inputs\filename.php" type="section" position="2577" id="24c5fc12fb424232857e04e977d72859">
      <param name="description">Méthodes</param>
      <param name="class">cInputUNIXFileName</param>
    </object>
    <object filename="\inputs\float.php" type="class" position="1228" id="542b11bb65e94bca8b8bd96b1a650078">
      <param name="name">cInputFloat</param>
      <param name="brief">Test un nombre a virgule</param>
    </object>
    <object filename="\inputs\float.php" type="section" position="1307" id="95bc0186796b4be38cefee7087c6d38b">
      <param name="description">Méthodes</param>
      <param name="class">cInputFloat</param>
    </object>
    <object filename="\inputs\identifier.php" type="class" position="1256" id="5eab97a73fb04fff8d99d3299e584e59">
      <param name="name">cInputIdentifier</param>
      <param name="brief">Test un ientificateur ASCII</param>
    </object>
    <object filename="\inputs\identifier.php" type="section" position="1343" id="8b79e91c8e7f4447a5cf54bd0e421f40">
      <param name="description">Méthodes</param>
      <param name="class">cInputIdentifier</param>
    </object>
    <object filename="\inputs\integer.php" type="class" position="1255" id="71b29290745c4df4a8a039e7c96582d9">
      <param name="name">cInputInteger</param>
      <param name="brief">Test un entier numérique 32bits signée</param>
    </object>
    <object filename="\inputs\integer.php" type="section" position="1350" id="b90ab28c4ceb4591a5d87890ab254457">
      <param name="description">Méthodes</param>
      <param name="class">cInputInteger</param>
    </object>
    <object filename="\inputs\ip.php" type="class" position="1228" id="e3872700767d4da69e79916a1fd39297">
      <param name="name">cInputIPv</param>
      <param name="brief">Test un adresse IP v4</param>
    </object>
    <object filename="\inputs\ip.php" type="section" position="1303" id="1a0aaf4fd520478fa261315c1f110b54">
      <param name="description">Méthodes</param>
      <param name="class">cInputIPv4</param>
    </object>
    <object filename="\inputs\mail.php" type="class" position="1256" id="2adcce9ca1c74970b606257c0e78b18d">
      <param name="name">cInputMail</param>
      <param name="brief">Test une Adresse eMail RFC-2822 ( non-certifié)</param>
      <param name="remarks">RFC-2822 ( non-certifié)</param>
    </object>
    <object filename="\inputs\mail.php" type="section" position="1394" id="c6257f86399240d4b0094523f30e0da0">
      <param name="description">Méthodes</param>
      <param name="class">cInputMail</param>
    </object>
    <object filename="\inputs\mime.php" type="class" position="1228" id="52afe22509164225b03cfc46bb2480e4">
      <param name="name">cInputMime</param>
      <param name="brief">Test un type MIME</param>
    </object>
    <object filename="\inputs\mime.php" type="section" position="1299" id="54f224054ffd4ddca7d2f94734e84c9a">
      <param name="description">Méthodes</param>
      <param name="class">cInputName</param>
    </object>
    <object filename="\inputs\name.php" type="class" position="1256" id="2a0ba80f7c16495593e4836a9349e8cf">
      <param name="name">cInputName</param>
      <param name="brief">Test un Nom ASCII</param>
      <param name="remarks">Ce type est un peut moin restrictif qu'un identificateur. Il est généralement utilisé pour nommé une application</param>
    </object>
    <object filename="\inputs\name.php" type="section" position="1452" id="3f736943e1e445039dcbd3291101b79e">
      <param name="description">Méthodes</param>
      <param name="class">cInputName</param>
    </object>
    <object filename="\inputs\numeric.php" type="class" position="1298" id="0ff184a10c7d4fe2a2394a3723e6e6f0">
      <param name="name">cInputNumeric</param>
      <param name="brief">Test un nombre</param>
      <param name="remarks">Accepte les nombres entier ou à virgule </param>
    </object>
    <object filename="\inputs\numeric.php" type="section" position="1422" id="87155f6d1d4a4d1c8eae96442973846d">
      <param name="description">Méthodes</param>
      <param name="class">cInputNumeric</param>
    </object>
    <object filename="\inputs\password.php" type="class" position="1256" id="1b1f2f0e459a42e58b8ddff124065aca">
      <param name="name">cInputPassword</param>
      <param name="brief">Test un Mot de passe ASCII</param>
    </object>
    <object filename="\inputs\password.php" type="section" position="1340" id="f457236b78d34f07a0da4032638b4bbc">
      <param name="description">Constantes</param>
      <param name="class">cInputPassword</param>
    </object>
    <object filename="\inputs\password.php" type="section" position="1548" id="2f262e99d9f5401e87d7007c46b3a11a">
      <param name="description">Méthodes</param>
      <param name="class">cInputPassword</param>
    </object>
    <object filename="\inputs\string.php" type="class" position="1228" id="29618bac130e426c8863f0b9986704e2">
      <param name="name">cInputString</param>
      <param name="brief">Test une Chaine de caractères </param>
      <param name="remarks">Une Chaine ne contient pas de caractères de fin de ligne, retour chariot ou double-quote</param>
    </object>
    <object filename="\inputs\string.php" type="section" position="1415" id="7221bc64d0de4f9188b6ce4a211dd3b2">
      <param name="description">Méthodes</param>
      <param name="class">cInputString</param>
    </object>
    <object filename="\inputs\text.php" type="class" position="1228" id="a38fccd3754c456a846523a87569061e">
      <param name="name">cInputText</param>
      <param name="brief">Test une chaine de caractères </param>
    </object>
    <object filename="\inputs\text.php" type="section" position="1312" id="3379b45d0ebc442c905ca752a0bfe0e4">
      <param name="description">Méthodes</param>
      <param name="class">cInputText</param>
    </object>
    <object filename="\inputs\url.php" type="class" position="1228" id="3e67a2cf57444d6d919274b31f3acdfd">
      <param name="name">cInputUrl</param>
      <param name="brief">Test une URL</param>
      <param name="todo">Classe non implémentée</param>
    </object>
    <object filename="\inputs\url.php" type="section" position="1325" id="db4813ead43f4b8c8127b9b56bbc2ab8">
      <param name="description">Méthodes</param>
      <param name="class">cInputUrl</param>
    </object>
    <object filename="\class\bases\cApplication.php" type="class" position="1594" id="6478979b265e4ec3ac7d47cf629b8b9b">
      <param name="name">cApplication</param>
      <param name="brief">Interface principale de l'application </param>
      <param name="remarks">La classe Application propose une implémentation minimale de l'interface iApplication requise par la librairie.</param>
    </object>
    <object filename="\class\bases\cApplication.php" type="member" position="5612" id="394becd6855d4dacb66f14298e3ae4e3">
      <param name="name">role</param>
      <param name="default">
      </param>
    </object>
    <object filename="\class\bases\cApplication.php" type="member" position="5679" id="ebd3a6dc824d4992955fdb9366091a40">
      <param name="name">db</param>
      <param name="default">
      </param>
    </object>
    <object filename="\class\bases\cApplication.php" type="method" position="5917" id="477e4e3748b24ba3a2f900bf561a7075">
      <param name="name">cApplication</param>
      <param name="params">$root_path,$config</param>
      <param name="brief">Constructeur</param>
    </object>
    <object filename="\class\bases\cApplication.php" type="method" position="11113" id="78fd7057843249fcaed2d48b4b0c9327">
      <param name="name">determinateRoles</param>
      <param name="params">
      </param>
      <param name="brief">Détermine le rôle de l'utilisateur en cours</param>
    </object>
    <object filename="\class\bases\cApplication.php" type="method" position="11328" id="bdf3322b962d4b4ebbdd9a2dd55ab305">
      <param name="name">setRole</param>
      <param name="params">$role</param>
      <param name="brief">Définit le(s) rôle(s) en cours</param>
      <param name="return">int Rôle passé en paramétre</param>
    </object>
    <object filename="\class\bases\cApplication.php" type="method" position="11515" id="097c27841077437db5210b3f4e915a6a">
      <param name="name">getRole</param>
      <param name="params">
      </param>
      <param name="brief">Obtient le(s) rôle(s) en cours</param>
      <param name="return">Masque de bits définissant les rôles</param>
    </object>
    <object filename="\class\bases\cApplication.php" type="method" position="11698" id="f315284f9a2c48fcadadaf82c73ec079">
      <param name="name">determinateLangage</param>
      <param name="params">
      </param>
      <param name="brief">Détermine le langage en cours</param>
    </object>
    <object filename="\class\bases\cApplication.php" type="method" position="12163" id="ec25c9ac456b4accb6d8eb018df95a51">
      <param name="name">setLangage</param>
      <param name="params">$lang</param>
      <param name="brief">Définit le langage en cours</param>
      <param name="return">string Code du langage, ex: "FR"</param>
    </object>
    <object filename="\class\bases\cApplication.php" type="method" position="12394" id="90c0f4ee78224ef9be5be10c4a999c9b">
      <param name="name">getLangage</param>
      <param name="params">
      </param>
      <param name="brief">Obtient le langage en cours</param>
      <param name="return">string Code du langage, ex: "FR"</param>
    </object>
    <object filename="\class\bases\cApplication.php" type="method" position="12602" id="a095e7e90d6746dd9c1dd2651bd4b8c6">
      <param name="name">getAttributes</param>
      <param name="params">
      </param>
      <param name="brief">Retourne les attributs globaux</param>
      <param name="return">array Tableau associatif des attributs globaux (utilisé entre autre pour fabriquer les templates)</param>
    </object>
    <object filename="\class\bases\cApplication.php" type="method" position="12867" id="576e8f9b29f344b7b3bc4fda5a62900a">
      <param name="name">getAttributesXML</param>
      <param name="params">
      </param>
      <param name="brief">Retourne le document XML des attributs globaux</param>
      <param name="return">XMLDocument Le document XML</param>
    </object>
    <object filename="\class\bases\cApplication.php" type="method" position="13081" id="4e2ece0477904a0fb76d13528ab4e305">
      <param name="name">getTaskMgr</param>
      <param name="params">&amp;$iface</param>
      <param name="brief">Obtient le gestionnaire de tache par défaut</param>
      <param name="return">Résultat de la procédure</param>
      <param name="retval">true La fonction à réussit, $iface contient un pointeur vers une interface iTaskMgr initialisée</param>
      <param name="retval">false La fonction à échouée, voir cResult::getLast() pour plus d'informations</param>
    </object>
    <object filename="\class\bases\cApplication.php" type="method" position="13734" id="044840f55d3a4da1898c75cfb2f0726e">
      <param name="name">getDB</param>
      <param name="params">&amp;$db_iface</param>
      <param name="brief">Obtient la connexion à la base de données par défaut</param>
      <param name="return">Résultat de la procédure</param>
      <param name="retval">true La fonction à réussit, $db_iface contient un pointeur vers une interface iDataBase initialisée</param>
      <param name="retval">false La fonction à échouée, voir cResult::getLast() pour plus d'informations</param>
    </object>
    <object filename="\class\bases\cApplication.php" type="method" position="15099" id="761d9d40c46d46e5b05967ee6ee0015d">
      <param name="name">getDefaultFile</param>
      <param name="params">&amp;$iface</param>
      <param name="brief">Obtient le fichier default</param>
      <param name="var">$iface cXMLDefault</param>
      <param name="param">$iface Pointeur recevant l'instance de la classe cXMLDefault</param>
      <param name="return">Résultat de la procédure</param>
      <param name="retval">true La fonction à réussit, $iface contient un pointeur vers une classe cXMLDefault initialisée</param>
      <param name="retval">false La fonction à échouée, voir cResult::getLast() pour plus d'informations</param>
    </object>
    <object filename="\class\bases\cApplication.php" type="method" position="16287" id="75f76fc5aa484297a659a7c0999c7c9c">
      <param name="name">getURI</param>
      <param name="params">$id</param>
      <param name="todo">A implémenter</param>
    </object>
    <object filename="\class\bases\cApplication.php" type="method" position="16505" id="8190e2c3480d4a2abd01f9cd87d9a7cb">
      <param name="name">getHostName</param>
      <param name="params">&amp;$hostname</param>
      <param name="return">Résultat de la procédure</param>
      <param name="retval">true La fonction à réussit, $hostname contient le nom de l'hôte (ex: localhost)</param>
      <param name="retval">false La fonction à échouée, voir cResult::getLast() pour plus d'informations</param>
    </object>
    <object filename="\class\bases\cApplication.php" type="method" position="17537" id="dcf5a30749bd44b38eceb323732ed5fa">
      <param name="name">getBaseURI</param>
      <param name="params">
      </param>
      <param name="return">L'URI avec le chemin d'accès (ex: foo.com/bar)</param>
    </object>
    <object filename="\class\bases\cApplication.php" type="method" position="18427" id="96652715b27840e1816735194b1fbfec">
      <param name="name">getRootPath</param>
      <param name="params">
      </param>
      <param name="brief">Obtient le chemin d'accès vers l'application</param>
      <param name="return">string Chemin absolue vers la racine de l'application</param>
    </object>
    <object filename="\class\bases\cApplication.php" type="method" position="18654" id="3dc2c239cf5b40a48c88a672a3def7d3">
      <param name="name">getTmpPath</param>
      <param name="params">
      </param>
      <param name="brief">Obtient le chemin d'accès vers l'application</param>
      <param name="return">string Chemin absolue vers la racine de l'application</param>
    </object>
    <object filename="\class\bases\cApplication.php" type="method" position="18998" id="005dc430137044ed9df9ea3e2075ac32">
      <param name="name">getLibPath</param>
      <param name="params">$name="wfw_local",$relatif=false</param>
      <param name="brief">Obtient un chemin d'accès depuis la configuration locale</param>
      <param name="param">string $name Identifiant de la librairie</param>
      <param name="param">bool $relatif Si true retourne le chemin relatif, sinon le chemin absolue</param>
      <param name="return">Chemin vers le dossier désiré</param>
      <param name="retval">string Chemin d'accès (sans slash de fin)</param>
      <param name="retval">false  Chemin introuvable dans la configuration</param>
    </object>
    <object filename="\class\bases\cApplication.php" type="method" position="19815" id="55c7bf62d89f4e7885c41363dae43d37">
      <param name="name">getCfgSection</param>
      <param name="params">$name</param>
      <param name="brief">Obtient les parametres d'une section du fichier de configuration</param>
      <param name="param">$section_name Nom de la section</param>
      <param name="return">Paramètres de configuration</param>
      <param name="retval">array Liste des paramètres</param>
      <param name="retval">null La section n'existe pas</param>
    </object>
    <object filename="\class\bases\cApplication.php" type="method" position="20249" id="d6c7978f28ba4fad8fb312e5398c29dc">
      <param name="name">getCfgValue</param>
      <param name="params">$section_name,$item_name</param>
      <param name="brief">Obtient les parametres d'une section du fichier de configuration</param>
      <param name="param">$section_name Nom de la section</param>
      <param name="param">$item_name Nom de l'item</param>
      <param name="return">Paramètres de configuration</param>
      <param name="retval">array Liste des paramètres</param>
      <param name="retval">null La section n'existe pas</param>
    </object>
    <object filename="\class\bases\cApplication.php" type="method" position="20824" id="646c594671ba4be1ab558d5043c0e9cc">
      <param name="name">setCfgValue</param>
      <param name="params">$section_name,$item_name,$value</param>
      <param name="brief">Définit un parametre de configuration</param>
      <param name="param">$section_name Nom de la section</param>
      <param name="param">$item_name Nom de l'item</param>
      <param name="param">$value Valeur du paramètre</param>
      <param name="return">Valeur du paramètre</param>
      <param name="remark">La valeur n'est conservée que durant l'execution du script</param>
    </object>
    <object filename="\class\bases\cApplication.php" type="method" position="21382" id="ae0b7b2742584a20b8fb87d80f07fdf2">
      <param name="name">getCfg</param>
      <param name="params">
      </param>
      <param name="brief">Obtient les paramètres de configuration</param>
      <param name="return">Paramètres de configuration</param>
      <param name="retval">array Liste des paramètres</param>
    </object>
    <object filename="\class\bases\cApplication.php" type="method" position="21608" id="d68fb81c8aeb47fcabd9a4ba755a0c9f">
      <param name="name">makeHTMLView</param>
      <param name="params">$filename,$attributes</param>
      <param name="brief">Fabrique une vue HTML</param>
      <param name="param">$filename Chemin d'accès au fichier template (relatif à la racine du site)</param>
      <param name="param">$attributes Tableau associatif des champs en entrée (voir cHTMLTemplate::transform)</param>
      <param name="return">string Contenu du template transformé</param>
    </object>
    <object filename="\class\bases\cApplication.php" type="method" position="22308" id="099921434e204f8b91f315a52fd3bab4">
      <param name="name">showHTMLView</param>
      <param name="params">$filename,$attributes</param>
      <param name="brief">Fabrique puis affiche une vue HTML dans la sortie standard</param>
      <param name="param">$filename Chemin d'accès au fichier template (relatif à la racine du site)</param>
      <param name="param">$attributes Tableau associatif des champs en entrée (voir cHTMLTemplate::transform)</param>
    </object>
    <object filename="\class\bases\cApplication.php" type="method" position="22781" id="48139a5b1a2643429cdb7e103bc99047">
      <param name="name">onMakeXMLTemplate</param>
      <param name="params">&amp;$template,&amp;$select,&amp;$attributes</param>
      <param name="brief">Evenement appellé par la méthode makeXMLView</param>
    </object>
    <object filename="\class\bases\cApplication.php" type="method" position="22945" id="bca966c93a424555a5092c96dcde8b58">
      <param name="name">makeXMLView</param>
      <param name="params">$filename,$attributes,$template_file=NULL</param>
      <param name="brief">Fabrique une vue XML/XHTML</param>
      <param name="param">$filename Chemin d'accès au fichier template (relatif à la racine du site)</param>
      <param name="param">$attributes Tableau associatif des champs en entrée (voir cXMLTemplate::Initialise)</param>
      <param name="param">$template_file Optionnel, Nom et chemin du fichier template à utiliser. Si NULL, le champ &lt;application:main_template&gt; de la configuration est utilisé</param>
      <param name="return">string Contenu du template transformé</param>
    </object>
    <object filename="\class\bases\cApplication.php" type="method" position="23642" id="e47c28ccec1a48a784901c34337da117">
      <param name="name">createXMLView</param>
      <param name="params">$filename,$attributes,$template_file=NULL</param>
      <param name="brief">Fabrique un template de vue XML/XHTML</param>
      <param name="param">$filename Chemin d'accès au fichier template (relatif à la racine du site) ou instance d'une classe XMLDocument</param>
      <param name="param">$attributes Tableau associatif des champs en entrée (voir cXMLTemplate::Initialise)</param>
      <param name="param">$template_file Optionnel, Nom et chemin du fichier template à utiliser. Si NULL, le champ &lt;application:main_template&gt; de la configuration est utilisé</param>
      <param name="return">cXMLTemplate Template</param>
    </object>
    <object filename="\class\bases\cApplication.php" type="method" position="25560" id="dee65ea5afff4d0c9aa35f4c133c0826">
      <param name="name">showXMLView</param>
      <param name="params">$filename,$attributes,$template_file=NULL</param>
      <param name="brief">Fabrique et affiche une vue XML/XHTML dans la sortie standard</param>
      <param name="param">$filename Chemin d'accès au fichier template (relatif à la racine du site)</param>
      <param name="param">$attributes Tableau associatif des champs en entrée (voir cXMLTemplate::Initialise)</param>
      <param name="param">$template_file Optionnel, Nom et chemin du fichier template à utiliser. Si NULL, le champ &lt;application:main_template&gt; de la configuration est utilisé</param>
      <param name="return">string Contenu du template transformé</param>
    </object>
    <object filename="\class\bases\cApplication.php" type="method" position="26243" id="bf46538598ed489796e642b57e2e72d3">
      <param name="name">cacheFilePath</param>
      <param name="params">$extension=NULL,$tmp_filename=NULL</param>
      <param name="brief">Retourne le chemin vers un fichier en cache</param>
      <param name="param">$extension Extension du fichier (si généré)</param>
      <param name="param">$tmp_filename Nom du fichier en cache</param>
      <param name="return">string Chemin d'accès absolue au fichier template</param>
    </object>
    <object filename="\class\bases\cApplication.php" type="method" position="26998" id="fcd0234a95d24054953289b12e80c165">
      <param name="name">makeFormView</param>
      <param name="params">$att,$fields,$opt_fields,$values,$template_file=NULL,$tmp_filename=NULL,$xml_template_file=NULL</param>
      <param name="brief">Fabrique une vue de formulaire</param>
      <param name="param">$fields Tableau associatif (identifiant/type) des champs obligatoires</param>
      <param name="param">$fields Tableau associatif (identifiant/type) des champs optionnels</param>
      <param name="param">$values Tableau associatif des valeurs des champs</param>
      <param name="param">$template_file Chemin d'accès au fichier template. Si NULL, la valeur est obtenu par le paramétre de configuration "application=&gt;form_template"</param>
      <param name="param">$tmp_filename Nom du fichier temporaire en cache. Si NULL, le nom de fichier est généré</param>
      <param name="return">string Contenu du template transformé</param>
      <param name="retval">false Une erreur est survenue, voir: cResult::getLast().</param>
    </object>
    <object filename="\class\bases\cApplication.php" type="method" position="31309" id="ff17fb77113d46cb879f041ded4ee3b3">
      <param name="name">processLastError</param>
      <param name="params">
      </param>
      <param name="brief">Traitement a appliquer en cas d'erreur</param>
    </object>
    <object filename="\class\bases\cApplication.php" type="method" position="33575" id="c187dddb38944ef5b46d397a44a9d78b">
      <param name="name">translateResult</param>
      <param name="params">$result</param>
      <param name="param">string $result Instance de la classe cResult</param>
      <param name="return">Tableau associatif contenant les champs traduits</param>
    </object>
    <object filename="\class\bases\cApplication.php" type="method" position="34908" id="2eca38f40b9a44e0b1728065925f7c13">
      <param name="name">fieldType</param>
      <param name="params">$id</param>
      <param name="param">string $result Instance de la classe cResult</param>
      <param name="return">Tableau associatif contenant les champs traduits</param>
    </object>
    <object filename="\class\bases\cApplication.php" type="method" position="37140" id="60661ebcba7847248d145cb0a4955b74">
      <param name="name">makeCtrlURI</param>
      <param name="params">$app_name,$ctrl,$add_params</param>
      <param name="brief">Fabrique l'URL d'un contrôleur</param>
      <param name="param">string $app_name    Nom de l'application, "application" si locale</param>
      <param name="param">string $ctrl        Nom du contrôleur</param>
      <param name="param">string $add_params  Chaine contenant les paramètres supplémentaires à passer à l'URL (encodé)</param>
    </object>
    <object filename="\class\bases\cApplication.php" type="method" position="37617" id="5c86af74a7a1411aa7c506aa9aa26b08">
      <param name="name">log</param>
      <param name="params">$message</param>
      <param name="brief">Ajoute un message au log</param>
      <param name="param">string $message Message</param>
    </object>
    <object filename="\class\bases\cApplication.php" type="method" position="38342" id="dcefef5c3f7247888f454c23d300f56c">
      <param name="name">callCtrl</param>
      <param name="params">$ctrl,$app,$att,&amp;$class,$role=cApplication::AnyRole</param>
      <param name="brief">Execute un controleur</param>
      <param name="param">string $ctrl Nom du controleur</param>
      <param name="param">string $app Nom de l'application</param>
      <param name="param">array  $att Tableau associatif des paramètres</param>
      <param name="param">cApplicationCtrl $class Pointeur recevant l'instance du contrôleur</param>
      <param name="param">int    $role Rôle d'execution. AnyRole par défaut</param>
      <param name="return">boolean Résultat de procédure</param>
    </object>
    <object filename="\class\bases\cApplication.php" type="method" position="42002" id="fe29ebb13bf347a78e075c7233479b3c">
      <param name="name">execCtrl</param>
      <param name="params">$ctrl,$app,$role=cApplication::AnyRole</param>
      <param name="brief">Initialise et execute un controleur dans la sortie standard</param>
      <param name="param">string $ctrl Nom du controleur</param>
      <param name="param">string $app  Nom de l'application</param>
      <param name="param">int    $role Rôle d'execution. AnyRole par défaut</param>
      <param name="return">boolean Résultat de procédure</param>
    </object>
    <object filename="\class\bases\cApplication.php" type="method" position="43812" id="1068b37110cb4e1ba160fb60a329cedf">
      <param name="name">queryToXML</param>
      <param name="params">$query,&amp;$doc,$node</param>
      <param name="brief">Execute une requête SQL et converti le résultat en éléments XML</param>
      <param name="param">string $query Corps de la requête</param>
      <param name="param">string $doc   Document XML recevant les éléments</param>
      <param name="param">int    $node  Noeud parent recevant les éléments</param>
      <param name="return">boolean Résultat de procédure</param>
      <param name="retval">false Une erreur est survenue</param>
    </object>
    <object filename="\class\bases\cApplication.php" type="method" position="45852" id="6cd3501739534e209d04eb332fd3d776">
      <param name="name">queryResultToXML</param>
      <param name="params">$result,&amp;$doc,$node</param>
      <param name="brief">Execute une requête SQL et converti le résultat en éléments XML</param>
      <param name="param">string $query Corps de la requête</param>
      <param name="param">string $doc   Document XML recevant les éléments</param>
      <param name="param">int    $node  Noeud parent recevant les éléments</param>
      <param name="return">boolean Résultat de procédure</param>
      <param name="retval">false Une erreur est survenue</param>
    </object>
    <object filename="\class\bases\cApplication.php" type="section" position="1820" id="5304929c556245dd82026f1c5edda9db">
      <param name="description">Constantes des erreurs</param>
      <param name="class">cApplication</param>
    </object>
    <object filename="\class\bases\cApplication.php" type="section" position="4614" id="e275406ad6bb4ac4a82a00a2f62059d2">
      <param name="description">Constantes des Options</param>
      <param name="class">cApplication</param>
    </object>
    <object filename="\class\bases\cApplication.php" type="section" position="4898" id="86db5aa69db24e22bd186b5327004ad1">
      <param name="description">Constantes des Roles</param>
      <param name="class">cApplication</param>
    </object>
    <object filename="\class\bases\cApplication.php" type="section" position="5253" id="4ae339eba86541e3ad8802c8a721d16a">
      <param name="description">Membres</param>
      <param name="class">cApplication</param>
    </object>
    <object filename="\class\bases\cApplication.php" type="section" position="5746" id="0ad11af009004ee5a205f252f4a85bff">
      <param name="description">Méthodes</param>
      <param name="class">cApplication</param>
    </object>
    <object filename="\class\bases\cApplication.php" type="section" position="26569" id="3a248ee6dcec4bdca7a1a6f939d8bca5">
      <param name="description">chemin d'accès au fichier cache</param>
    </object>
    <object filename="\class\bases\cApplication.php" type="section" position="28463" id="df14a70244a0441a8f74433a96a301b5">
      <param name="description">chemin d'accès au fichier cache</param>
    </object>
    <object filename="\class\bases\cApplication.php" type="section" position="31008" id="2fa99166938043898364deebb8892dd3">
      <param name="description">fabrique le template final</param>
    </object>
    <object filename="\class\bases\cApplicationCtrl.php" type="class" position="1148" id="df31ba7d1fe043db8e161bf9a8f79b49">
      <param name="name">cApplicationCtrl</param>
      <param name="brief">Classe de base d'un controleur</param>
    </object>
    <object filename="\class\bases\cApplicationCtrl.php" type="member" position="1395" id="2dfe0497bd184d46be0d9ed2a89d5df5">
      <param name="name">fields</param>
      <param name="default">null</param>
    </object>
    <object filename="\class\bases\cApplicationCtrl.php" type="member" position="1466" id="5549e031711745e988eb5435e839476a">
      <param name="name">op_fields</param>
      <param name="default">null</param>
    </object>
    <object filename="\class\bases\cApplicationCtrl.php" type="member" position="1536" id="5f5e1198320e4df9aeaaa7d3b9fc17de">
      <param name="name">out_fields</param>
      <param name="default">null</param>
    </object>
    <object filename="\class\bases\cApplicationCtrl.php" type="member" position="1605" id="1b4b3a864e674cebad601346a828f48d">
      <param name="name">att</param>
      <param name="default">array()</param>
    </object>
    <object filename="\class\bases\cApplicationCtrl.php" type="member" position="1702" id="592baa7f7a34450291cfeb21dc28e479">
      <param name="name">role</param>
      <param name="default">null</param>
    </object>
    <object filename="\class\bases\cApplicationCtrl.php" type="method" position="1956" id="1003b64d857e47468694f673af217baa">
      <param name="name">getRequiredField</param>
      <param name="params">
      </param>
      <param name="brief">Champs requis</param>
      <param name="return">Champs requis pour l'execution du contrôleur</param>
      <param name="retval">[array] Liste des champs (tableau associatif)</param>
      <param name="retval">[null] Aucun champs</param>
    </object>
    <object filename="\class\bases\cApplicationCtrl.php" type="method" position="2238" id="1a4c4e2338a744748500ccf39fcf16ef">
      <param name="name">getOptionalField</param>
      <param name="params">
      </param>
      <param name="brief">Champs optionnels</param>
      <param name="return">Champs optionnels à l'execution du contrôleur</param>
      <param name="retval">[array] Liste des champs (tableau associatif)</param>
      <param name="retval">[null] Aucun champs</param>
    </object>
    <object filename="\class\bases\cApplicationCtrl.php" type="method" position="2528" id="43f341bee82142e19ab32b7c57d13dae">
      <param name="name">getReturnedField</param>
      <param name="params">
      </param>
      <param name="brief">Champs retournés</param>
      <param name="return">Champs retournés à l'execution du contrôleur</param>
      <param name="retval">[array] Liste des champs (tableau associatif)</param>
      <param name="retval">[null] Aucun champs</param>
    </object>
    <object filename="\class\bases\cApplicationCtrl.php" type="method" position="2817" id="17a12699cd06483cb147e0942515556c">
      <param name="name">acceptedRole</param>
      <param name="params">
      </param>
      <param name="brief">Retourne les rôles acceptés par le contrôleur</param>
      <param name="return">int Masque de bits des rôles possibles</param>
      <param name="remarks">Les rôles prédéfinits sont définit dans la classe \c cApplication</param>
      <param name="remarks">Si le contrôleur est exécuté avec un rôle different de celui retourné, la procédure échoue.</param>
    </object>
    <object filename="\class\bases\cApplicationCtrl.php" type="method" position="3223" id="72e2c60634b74aff836dadf0849e21de">
      <param name="name">hasRole</param>
      <param name="params">
      </param>
      <param name="brief">Retourne le type de rôle assigné pour l'execution</param>
      <param name="return">int Masque de bits des rôles possibles</param>
      <param name="remarks">Les rôles prédéfinits sont définit dans la classe cApplication</param>
      <param name="remarks">Cette propriété est initialisée par la méthode cApplication::callCtrl</param>
    </object>
    <object filename="\class\bases\cApplicationCtrl.php" type="method" position="3593" id="b2efa0ebfae849f4b9eeca40b46455c3">
      <param name="name">cApplicationCtrl</param>
      <param name="params">
      </param>
      <param name="brief">Point d(entree du controleur</param>
      <param name="param">iApplication $app       Instance de l'application</param>
      <param name="param">string       $app_path  Chemin d'accés à l'application qui à définit le controleur</param>
      <param name="param">StdClass     $p         Paramétres d'entrée</param>
      <param name="return">bool Résutat de procédure</param>
    </object>
    <object filename="\class\bases\cApplicationCtrl.php" type="method" position="3996" id="3016eac1dda343f28201c6b71649d9ba">
      <param name="name">main</param>
      <param name="params">iApplication $app, $app_path, $p</param>
      <param name="brief">Point d'entree du controleur</param>
      <param name="param">iApplication $app       Instance de l'application</param>
      <param name="param">string       $app_path  Chemin d'accés à l'application qui à définit le controleur</param>
      <param name="param">StdClass     $p         Paramétres d'entrée</param>
      <param name="return">bool Résutat de procédure</param>
    </object>
    <object filename="\class\bases\cApplicationCtrl.php" type="method" position="4415" id="8179b863a98e4152b84fb68d5bc3ac84">
      <param name="name">output</param>
      <param name="params">iApplication $app, $format, $att, $result</param>
      <param name="brief">Génére la sortie du controleur</param>
      <param name="param">iApplication $app       Instance de l'application</param>
      <param name="param">string       $format    Format de sortie attendue (type MIME)</param>
      <param name="param">StdClass     $att       Attribut de résultat</param>
      <param name="return">string Données en sortie</param>
      <param name="retval">false La génération à échoué, l'application attend un résultat de procédure</param>
    </object>
    <object filename="\class\bases\cApplicationCtrl.php" type="section" position="1222" id="c77f1241b3854203a81a036f64860604">
      <param name="description">Membres</param>
      <param name="class">cApplicationCtrl</param>
    </object>
    <object filename="\class\bases\cApplicationCtrl.php" type="section" position="1778" id="3b345574d4bc4a9eab5f6d34c4f12579">
      <param name="description">Méthodes</param>
      <param name="class">cApplicationCtrl</param>
    </object>
    <object filename="\class\bases\cEvent.php" type="class" position="6" id="14ec4de74e054b5d91eccd910e610922">
      <param name="name">cEvent</param>
      <param name="brief">Classe d'événement</param>
    </object>
    <object filename="\class\bases\cEvent.php" type="member" position="157" id="fef74ce3a52f40bab446c94a5e9bdaae">
      <param name="name">listner</param>
      <param name="default">array()</param>
    </object>
    <object filename="\class\bases\cEvent.php" type="section" position="58" id="ab15ca3bed0f480e82a61222e9fdbde6">
      <param name="description">Membres</param>
      <param name="class">cEvent</param>
    </object>
    <object filename="\class\bases\cEvent.php" type="section" position="256" id="4b939e4616fb4c1a97165c3a376ec40f">
      <param name="description">Méthodes</param>
      <param name="class">cEvent</param>
    </object>
    <object filename="\class\bases\cInputFields.php" type="class" position="1148" id="2965c42828704547821455a78f1eadff">
      <param name="name">cInputFields</param>
      <param name="brief">Fonctions utiles à la vérification des champs</param>
    </object>
    <object filename="\class\bases\cInputFields.php" type="section" position="1234" id="f4624a68eec24a6d87f89042ad8b55dd">
      <param name="description">Constantes des codes d'erreurs</param>
      <param name="class">cInputFields</param>
    </object>
    <object filename="\class\bases\cInputFields.php" type="section" position="1682" id="fcc07739abb440c3aa26810475b98217">
      <param name="description">Méthodes</param>
      <param name="class">cInputFields</param>
    </object>
    <object filename="\class\bases\cResult.php" type="class" position="1148" id="c2e8716e4dc74e37aea27abe4ea23ef4">
      <param name="name">cResult</param>
      <param name="brief">Résultat de procédure</param>
    </object>
    <object filename="\class\bases\cResult.php" type="function" position="5869" id="364ecac9e12d4bba8a3402b834e9413f">
      <param name="name">RESULT_INST</param>
      <param name="params">$result</param>
      <param name="brief">Initialise le résultat en cours</param>
      <param name="param">$result [cResult] Instance d'un autre résultat</param>
      <param name="return">bool true si $code == cResult::Ok, sinon false</param>
    </object>
    <object filename="\class\bases\cResult.php" type="function" position="6203" id="279b69213ea644bc8eb6f9e6aeca3542">
      <param name="name">RESULT</param>
      <param name="params">$code,$info="",$att=array(</param>
      <param name="brief">Initialise le résultat en cours</param>
      <param name="param">$code [string] Contexte de l'erreur. Généralement une des constantes suivantes: [cResult::Ok, cResult::Failed, cResult::System]</param>
      <param name="param">$info [string] Code de l'erreur</param>
      <param name="param">$att  [array]  Tableau associatif des attributs supplémentaires</param>
      <param name="return">bool true si $code == cResult::Ok, sinon false</param>
    </object>
    <object filename="\class\bases\cResult.php" type="function" position="6743" id="7dfa2e386d4744e4bf4cd588fe236126">
      <param name="name">RESULT_PUSH_CALLSTACK</param>
      <param name="params">
      </param>
      <param name="brief">Ajoute la pile d'appel au resultat</param>
      <param name="return">bool true</param>
    </object>
    <object filename="\class\bases\cResult.php" type="function" position="7050" id="87fb9bb7f5a54bc0b25157aff2128f83">
      <param name="name">RESULT_OK</param>
      <param name="params">
      </param>
      <param name="brief">Initialise le résultat en cours avec le code cResult::Ok</param>
      <param name="return">bool true</param>
    </object>
    <object filename="\class\bases\cResult.php" type="function" position="7220" id="7222bbb4fcdc4576a9a25747e97096d4">
      <param name="name">RESULT_PUSH</param>
      <param name="params">$name,$value</param>
      <param name="brief">Ajoute un attribut au résultat en cours</param>
      <param name="param">$name  [string] Nom de l'attribut</param>
      <param name="param">$value [string] Valeur de l'attribut </param>
      <param name="return">string Valeur du paramètre</param>
    </object>
    <object filename="\class\bases\cResult.php" type="member" position="2215" id="147d29c2f83146eb958b3442f32a8bfd">
      <param name="name">last_code</param>
      <param name="default">
      </param>
    </object>
    <object filename="\class\bases\cResult.php" type="member" position="2288" id="ed733c83143d4f048257e27c0c03dc49">
      <param name="name">last_info</param>
      <param name="default">
      </param>
    </object>
    <object filename="\class\bases\cResult.php" type="member" position="2352" id="89e8866970ec42309c340b505a88cba5">
      <param name="name">last_att</param>
      <param name="default">
      </param>
    </object>
    <object filename="\class\bases\cResult.php" type="member" position="2441" id="e5f51d3418c6435e89138bded75cd08d">
      <param name="name">code</param>
      <param name="default">
      </param>
    </object>
    <object filename="\class\bases\cResult.php" type="member" position="2492" id="0b48e24712ff4e17838ec80fc7e23531">
      <param name="name">info</param>
      <param name="default">
      </param>
    </object>
    <object filename="\class\bases\cResult.php" type="member" position="2534" id="c9814f1a63cc4151a5a10f724ca2c03b">
      <param name="name">att</param>
      <param name="default">
      </param>
    </object>
    <object filename="\class\bases\cResult.php" type="method" position="2770" id="f8532cc0206a42b8b78539a7bc2dc3c2">
      <param name="name">cResult</param>
      <param name="params">$code, $info, $att=array(</param>
      <param name="brief">Constructeur de la classe  </param>
      <param name="param">$code  [int] Code de l'erreur</param>
      <param name="param">$info  [string] Identifiant décrivant plus en détail le résultat</param>
      <param name="remarks">Voir cResult pour plus de détails sur les codes d'erreurs</param>
    </object>
    <object filename="\class\bases\cResult.php" type="method" position="3214" id="14e256a2b42d4da4b17d46638a484ff5">
      <param name="name">toArray</param>
      <param name="params">
      </param>
      <param name="brief">Convertie en tableau  </param>
      <param name="return">[array] Tableau contenant les éléments de résultat</param>
    </object>
    <object filename="\class\bases\cResult.php" type="method" position="3542" id="9d2056eab2fa4372928bea8eae2f5958">
      <param name="name">last</param>
      <param name="params">$code, $info, $att=array(</param>
      <param name="brief">Initialise la dernière erreur</param>
      <param name="param">$code  [int] Code de l'erreur</param>
      <param name="param">$info  [string] Identifiant décrivant plus en détail le résultat</param>
      <param name="remarks">Voir cResult pour plus de détails sur les codes d'erreurs</param>
    </object>
    <object filename="\class\bases\cResult.php" type="method" position="4057" id="ede574661cba44f7a74413792f050f56">
      <param name="name">getLast</param>
      <param name="params">
      </param>
      <param name="brief">Obtient une instance de la dernière erreur</param>
      <param name="return">Instance de cResult initialisée avec les paramétres de la dernière erreur</param>
    </object>
    <object filename="\class\bases\cResult.php" type="method" position="4394" id="8ff6f5bed3e346c2b1574f5bb3e87bd5">
      <param name="name">addAtt</param>
      <param name="params">$name,$value</param>
      <param name="brief">Ajoute un attribut</param>
      <param name="return">Valeur de l'attribut, NULL si introuvable</param>
    </object>
    <object filename="\class\bases\cResult.php" type="method" position="4643" id="b30fbeff074b4d51a554df7d4b5e8c32">
      <param name="name">getAtt</param>
      <param name="params">$name</param>
      <param name="brief">Obtient un attribut</param>
      <param name="return">Valeur de l'attribut, NULL si introuvable</param>
    </object>
    <object filename="\class\bases\cResult.php" type="method" position="4895" id="63150be3ecd34750b0def269fe9790ba">
      <param name="name">getAttList</param>
      <param name="params">
      </param>
      <param name="brief">Obtient la liste des attributs</param>
      <param name="return">Tableau des attributs</param>
    </object>
    <object filename="\class\bases\cResult.php" type="method" position="5061" id="8cc1fb2dc6824b7281079c11817984b1">
      <param name="name">getErrorContext</param>
      <param name="params">
      </param>
      <param name="brief">Obtient le contexte de l'erreur (ERR_OK,ERR_FAILED,...)</param>
      <param name="return">Identifiant du contexte</param>
    </object>
    <object filename="\class\bases\cResult.php" type="method" position="5260" id="b74c7e5d68ad4987b94d638365bb3834">
      <param name="name">getErrorCode</param>
      <param name="params">
      </param>
      <param name="brief">Obtient le code de l'erreur</param>
      <param name="return">Identifiant du code</param>
    </object>
    <object filename="\class\bases\cResult.php" type="method" position="5424" id="3a32964f66f54342bf06e9b5502ac2f5">
      <param name="name">isOK</param>
      <param name="params">
      </param>
      <param name="brief">Test le résultat</param>
      <param name="return">bool Etat du succès</param>
      <param name="retval">true Le résultat est un succès (==0)</param>
      <param name="retval">false Le résultat est un échec (!=0)</param>
    </object>
    <object filename="\class\bases\cResult.php" type="section" position="1205" id="8937838cd6484760ac6390c50adc6765">
      <param name="description">Constantes des contextes d'erreurs</param>
      <param name="class">cResult</param>
    </object>
    <object filename="\class\bases\cResult.php" type="section" position="1669" id="ea276d8e6b9a49a5af345069e59cba9c">
      <param name="description">Constantes des codes d'erreurs</param>
      <param name="class">cResult</param>
    </object>
    <object filename="\class\bases\cResult.php" type="section" position="2051" id="98d92e75907241e7a1f010bac923c6df">
      <param name="description">Membres</param>
      <param name="class">cResult</param>
    </object>
    <object filename="\class\bases\cResult.php" type="section" position="2601" id="fc168bbb486346d28baebd5bb7ecb0c6">
      <param name="description">Méthodes</param>
      <param name="class">cResult</param>
    </object>
    <object filename="\class\bases\cResult.php" type="section" position="5707" id="faff29a32fbe4dbc9cf1c54cfc38cc74">
      <param name="description">Fonctions de résultat</param>
      <param name="class">cResult</param>
    </object>
    <object filename="\class\bases\cResult.php" type="section" position="5810" id="7720067ed9814cda9425f0898fcd5712">
      <param name="description">/**</param>
    </object>
    <object filename="\class\bases\iDatabase.php" type="method" position="1525" id="c519ff0e2026421d99acc506e49186b1">
      <param name="name">getServiceProviderName</param>
      <param name="params">
      </param>
      <param name="brief">Obtient le nom du service utilisé</param>
      <param name="return">string Nom du fournisseur de service (ex: MySQL, PostgreSQL, etc...)</param>
    </object>
    <object filename="\class\bases\iDatabase.php" type="method" position="1732" id="bd117a27f4604498a96b60c45acc3a75">
      <param name="name">connect</param>
      <param name="params">$user, $name, $pwd, $server, $port</param>
      <param name="brief">Etablie la connexion</param>
      <param name="param">string $user   Identifiant de connexion</param>
      <param name="param">string $name   Nom de la base de données</param>
      <param name="param">string $pwd    Mot-de-passe de connexion</param>
      <param name="param">string $server Adresse du serveur</param>
      <param name="param">string $port   Port du serveur</param>
      <param name="return">bool Etat de la connexion</param>
      <param name="retval">true La connexion est établie</param>
      <param name="retval">false la connexion à échouée</param>
    </object>
    <object filename="\class\bases\iDatabase.php" type="method" position="2252" id="3864a56dbe7e4fcd883f8c9c6960d949">
      <param name="name">disconnect</param>
      <param name="params">
      </param>
      <param name="brief">Termine la connexion</param>
      <param name="return">void Rien</param>
    </object>
    <object filename="\class\bases\iDatabase.php" type="method" position="2363" id="b6f395ffa6fe44a3b6251fb5479b120d">
      <param name="name">call</param>
      <param name="params">$schema, $func, $arg_list,&amp;$result</param>
      <param name="brief">Appel une fonction SQL</param>
      <param name="param">string  $schema    Nom du schéma (package) parent de la fonction</param>
      <param name="param">string  $func      Nom de la fonction</param>
      <param name="param">array   $arg_list  Tableau associatif des arguments de la fonction, null si aucun</param>
      <param name="return">bool Résultat de la requête</param>
      <param name="retval">true  La requête à réussie</param>
      <param name="retval">false La requête ne peut être executée, voir getResult() pour obtenir plus de détails</param>
      <param name="remarks">Pour extraire le résultat retourné par une fonction utilisez les methodes fetchValue ou fetchRow</param>
    </object>
    <object filename="\class\bases\iDatabase.php" type="method" position="3032" id="3aa52fe62d9f4e72881bf7d40b84186a">
      <param name="name">execute</param>
      <param name="params">$query,&amp;$result</param>
      <param name="brief">Execute une requete SQL</param>
      <param name="param">string          $query    Corps de la requête</param>
      <param name="param">iDatabaseQuery  $result   [out] Pointeur sur l'instance du résultat</param>
      <param name="return">bool Résultat de la requête</param>
      <param name="retval">true  La requête à réussie</param>
      <param name="retval">false La requête ne peut être executée, voir getResult() pour obtenir plus de détails</param>
      <param name="remarks">Pour extraire le résultat retourné, utilisez les methodes iDatabaseQuery::fetchValue ou iDatabaseQuery::fetchRow</param>
    </object>
    <object filename="\class\bases\iDatabase.php" type="method" position="3620" id="3894650be09842a08ccb255077893588">
      <param name="name">parseValue</param>
      <param name="params">$value</param>
      <param name="brief">Convertie un objet PHP en type SQL</param>
      <param name="param">mixed  $value  Objet à convertir</param>
      <param name="return">string Valeur comptatible avec le type SQL correspondant</param>
    </object>
    <object filename="\class\bases\iDatabase.php" type="method" position="4575" id="497b078255a64ffdb49193dd2f63bf6b">
      <param name="name">fetchValue</param>
      <param name="params">$column_name</param>
      <param name="brief">Extrait une valeur du résultat en cours</param>
      <param name="param">mixed   $column_name   Nom de la colonne à extraire</param>
      <param name="return">mixed Valeur de la colonne</param>
    </object>
    <object filename="\class\bases\iDatabase.php" type="method" position="4805" id="7f461c47c4764da3b3b5eca30489e4c7">
      <param name="name">fetchRow</param>
      <param name="params">
      </param>
      <param name="brief">Extrait la prochaine ligne du résultat en cours</param>
      <param name="return">array Tableau associatif des champs</param>
      <param name="remarks">Le curseur de résultat est incrémenté</param>
    </object>
    <object filename="\class\bases\iDatabase.php" type="method" position="5021" id="05b41c68330c458da8a42a10741fb78b">
      <param name="name">rowCount</param>
      <param name="params">
      </param>
      <param name="brief">Obtient le nombre de ligne présente</param>
      <param name="return">int Nombre de lignes</param>
    </object>
    <object filename="\class\bases\iDatabase.php" type="method" position="5156" id="01cebc40cd464e5b94b4f4adb16c1fd9">
      <param name="name">getQueryStr</param>
      <param name="params">
      </param>
      <param name="brief">Obtient la requête SQL</param>
      <param name="return">string Texte de la requête</param>
    </object>
    <object filename="\class\bases\iDatabase.php" type="method" position="5287" id="177ee51969f7440786de5fc5173688c2">
      <param name="name">seek</param>
      <param name="params">$pos,$origin=iDatabaseQuery::Origin</param>
      <param name="brief">Déplace le curseur de sélection</param>
      <param name="param">$pos Index de la position. L'index débute à 0 jusqu'à rowCount()-1</param>
      <param name="return">string Texte de la requête</param>
    </object>
    <object filename="\class\bases\iDatabase.php" type="section" position="1354" id="ab3329d8bd424fd69eec63c1a89e9dba">
      <param name="description">Méthodes</param>
      <param name="class">iDatabase</param>
    </object>
    <object filename="\class\bases\iDatabase.php" type="section" position="4403" id="39f1b110061c431a80253b64e99f29bf">
      <param name="description">Méthodes</param>
      <param name="class">iDatabaseQuery</param>
    </object>
    <object filename="\class\bases\iFileSys.php" type="method" position="182" id="7aeef74aa11541b1a1381331789c5bfc">
      <param name="name">createSymbolicFile</param>
      <param name="params">String $src_filename,String $dst_filename</param>
    </object>
    <object filename="\class\bases\iFileSys.php" type="method" position="316" id="bf61f51c7fd54d63af3968a5d754b46a">
      <param name="name">removeFile</param>
      <param name="params">String $filename</param>
    </object>
    <object filename="\class\bases\iFileSys.php" type="method" position="397" id="32ba5b43a1844cac9c093abb6aa5027f">
      <param name="name">createFile</param>
      <param name="params">String $filename</param>
    </object>
    <object filename="\class\bases\iFileSys.php" type="method" position="474" id="6d7194f11ff241d2999bf0e414e7401e">
      <param name="name">createTempFile</param>
      <param name="params">String $filename</param>
    </object>
    <object filename="\class\bases\input.php" type="class" position="1230" id="6e7e96a69a6143b7bfa9d5afa0cd04f6">
      <param name="name">cInput</param>
      <param name="brief">Classe de contrôle de champ </param>
    </object>
    <object filename="\class\bases\input.php" type="method" position="1941" id="3105aaa1235c4989a51fcd288a6f4286">
      <param name="name">isValid</param>
      <param name="params">$value</param>
      <param name="brief">Vérifie la validité du format d'un champ</param>
      <param name="return">Résultat de la procédure</param>
      <param name="retval">false Le format est invalide (voir cResult::getLast() pour plus d'informations)</param>
      <param name="retval">true  Le format est valide</param>
    </object>
    <object filename="\class\bases\input.php" type="method" position="2266" id="26d09130a02b4b81a1c00083e6e24911">
      <param name="name">toHTML</param>
      <param name="params">$id, $value</param>
      <param name="brief">Convertie le champ en script HTML (obselete)</param>
      <param name="param">$id Identifiant de la balise HTML</param>
      <param name="param">$value Valeur du champ à insérer</param>
      <param name="return">Texte du script HTML</param>
    </object>
    <object filename="\class\bases\input.php" type="method" position="2548" id="3ab2ab237a0345038c4a27398214ff5f">
      <param name="name">getMaxLength</param>
      <param name="params">
      </param>
      <param name="brief">Obtient la taille maximale possible pour ce champ</param>
      <param name="return">Taille maximale en nombre de caractères. Si 0, illimitée</param>
    </object>
    <object filename="\class\bases\input.php" type="method" position="2769" id="cc22d43d1826433aa7428b6869b353f3">
      <param name="name">toObject</param>
      <param name="params">$value</param>
      <param name="brief">Convertie une chaine en objet PHP</param>
      <param name="return">Objet ou chaine</param>
    </object>
    <object filename="\class\bases\input.php" type="method" position="2939" id="67e59b7e5e184c6dbf1fe373c264a441">
      <param name="name">regExp</param>
      <param name="params">
      </param>
      <param name="brief">Retourne l'expression régulière associée à ce champ</param>
      <param name="return">Chaine</param>
    </object>
    <object filename="\class\bases\input.php" type="section" position="1293" id="d4a710c08d53418c8d542bfd0a1b69a7">
      <param name="description">Constantes des erreurs</param>
      <param name="class">cInput</param>
    </object>
    <object filename="\class\bases\input.php" type="section" position="1777" id="7fe059714bdc4fa9b3ce3632ee5abee7">
      <param name="description">Méthodes</param>
      <param name="class">cInput</param>
    </object>
    <object filename="\class\bases\iTask.php" type="method" position="165" id="f0ee5aee93e149309f2ca807d1ff1c68">
      <param name="name">get</param>
      <param name="params"> $name</param>
    </object>
    <object filename="\class\bases\iTask.php" type="method" position="247" id="cecd4c9a58524fc18442bbff28ba32b6">
      <param name="name">set</param>
      <param name="params">cSysTask $task</param>
    </object>
    <object filename="\class\bases\iTask.php" type="method" position="336" id="f4111c34f880423b80318d1032e67e87">
      <param name="name">delete</param>
      <param name="params">$name</param>
    </object>
    <object filename="\class\bases\iTask.php" type="method" position="418" id="8f5e7366b84f44eabc7029649d349421">
      <param name="name">create</param>
      <param name="params"> $name,DateTime $date, $cmd</param>
    </object>
    <object filename="\class\bases\iTask.php" type="method" position="517" id="5f7a8f871c0c40a396654c33d53c58c6">
      <param name="name">createRecursive</param>
      <param name="params">$name, $min, $cmd</param>
    </object>
    <object filename="\class\bases\iTask.php" type="method" position="632" id="b478b56eca8642eb82fe849d191e4e6b">
      <param name="name">createPHPRequest</param>
      <param name="params">$name,DateTime $date,$reqName,$reqArg</param>
    </object>
    <object filename="\class\bases\request.php" type="class" position="1148" id="4d150ecf9a4e41469de05d50ff850cf8">
      <param name="name">cHTTPRequest</param>
      <param name="brief">Classe de traitement des requêtes HTTP</param>
    </object>
    <object filename="\class\bases\request.php" type="section" position="1227" id="c95ca7ebef1b4fb5ac65c07aa0614f2d">
      <param name="description">Membres</param>
      <param name="class">cHTTPRequest</param>
    </object>
    <object filename="\class\bases\request.php" type="section" position="1445" id="50ab23255560420d9ddea1653da4728a">
      <param name="description">Méthodes</param>
      <param name="class">cHTTPRequest</param>
    </object>
    <object filename="\class\bases\socket.php" type="class" position="1148" id="92b036aa33e04a3ba32b496e38cbe5b0">
      <param name="name">cSocket</param>
      <param name="brief">Socket de connexion </param>
    </object>
    <object filename="\class\bases\socket.php" type="class" position="3853" id="4d9106cb16ad4325a9c4345636e0541c">
      <param name="name">cSMTP</param>
      <param name="brief">Socket de connexion à un serveur SMTP</param>
    </object>
    <object filename="\class\bases\socket.php" type="class" position="4651" id="27ead395f8c24cd2bbdb44460e7f988a">
      <param name="name">cHTTP</param>
      <param name="brief">Socket de connexion à un serveur HTTP</param>
    </object>
    <object filename="\class\bases\socket.php" type="method" position="1849" id="e7749c67361e4a1c9726b3c5be58d583">
      <param name="name">Open</param>
      <param name="params">$url, $port, $timeout = 30</param>
      <param name="brief">Ouvre une connexion avec le serveur</param>
      <param name="param">string $url Adresse du serveur</param>
      <param name="param">int $port Numéro de port du serveur</param>
      <param name="param">int $timeout Temps d'attente avant abandon (secondes)</param>
      <param name="return">bool Résultat de la procédure (voir cResult::getLast() pour plus de détails)</param>
      <param name="remarks">N'oubliez pas de fermer la connexion avec la méthode Close() une fois les opérations terminées</param>
    </object>
    <object filename="\class\bases\socket.php" type="method" position="3032" id="8c9180b7aa1247b39dc2af5253cb0aa6">
      <param name="name">Puts</param>
      <param name="params">$str</param>
      <param name="brief">Ecrit une chaine et retourne la réponse</param>
      <param name="param">string $str Message à envoyer</param>
      <param name="return">string Message en réponse</param>
    </object>
    <object filename="\class\bases\socket.php" type="method" position="3298" id="82b62a378c8e49f98dc2303fd47b92da">
      <param name="name">Put</param>
      <param name="params">$str</param>
      <param name="brief">N/A</param>
    </object>
    <object filename="\class\bases\socket.php" type="method" position="3704" id="9d70f841835f424fb45556175f07df20">
      <param name="name">Close</param>
      <param name="params">
      </param>
      <param name="brief">Termine la connexion</param>
    </object>
    <object filename="\class\bases\socket.php" type="section" position="1204" id="b582211ae3014f43a27020026c961df5">
      <param name="description">Constantes des erreurs</param>
      <param name="class">cSocket</param>
    </object>
    <object filename="\class\bases\socket.php" type="section" position="1459" id="9dcaaacac0fd4a60a8e9a06c1fb5d227">
      <param name="description">Membres</param>
      <param name="class">cSocket</param>
    </object>
    <object filename="\class\bases\socket.php" type="section" position="1684" id="2904b80b7c8849158393814a771ea329">
      <param name="description">Méthodes</param>
      <param name="class">cSocket</param>
    </object>
    <object filename="\class\bases\socket.php" type="section" position="3940" id="8d842baea9e049bd9d2f7c67d44a1726">
      <param name="description">Méthodes</param>
      <param name="class">cSMTP</param>
    </object>
    <object filename="\class\bases\socket.php" type="section" position="4738" id="56579c766d4b4904a1cf37b1f0fee190">
      <param name="description">Méthodes</param>
      <param name="class">cHTTP</param>
    </object>
    <object filename="\config.php" type="controler" position="1149" id="a67a9c9b377a4b8387224d90a40a06be">
      <param name="description">Configuration</param>
      <param name="name">wfw_config_ctrl</param>
      <param name="Role">Tous</param>
      <param name="UC">config</param>
      <param name="Module">wfw</param>
      <param name="Remarque">Retourne les champs de configuration</param>
    </object>
    <object filename="\datafetch.php" type="controler" position="1149" id="b3eca38661a24d6a94e25d37427c6e09">
      <param name="description">Retourne les données d'une table</param>
      <param name="name">wfw_datafetch_ctrl</param>
      <param name="fields">table_name : Nom de la table SQL</param>
      <param name="Role">Tous</param>
      <param name="UC">DataFetch</param>
      <param name="Module">wfw</param>
      <param name="Output">"text/xml"</param>
      <param name="Champs">table_name : Nom de la table SQL</param>
    </object>
    <object filename="\datamodel.php" type="controler" position="1154" id="64e0540069464c36a1473576a0179084">
      <param name="description">Retourne le dictionnaire du modèle de données</param>
      <param name="name">wfw_datamodel_ctrl</param>
      <param name="fields">lang : Langage pour les textes</param>
      <param name="fields">
      </param>
      <param name="Role">Tous</param>
      <param name="UC">DataModel</param>
      <param name="Module">wfw</param>
      <param name="Output">"text/xml"</param>
      <param name="Champs">lang : Langage pour les textes</param>
    </object>
    <object filename="\defaults.php" type="controler" position="1144" id="f1f2c72f5d064011a499c47e93e41c09">
      <param name="description">Fusionne les fichiers defaults de tous les modules puis retourne le contenu</param>
      <param name="name">wfw_defaults_ctrl</param>
      <param name="Role">Tous</param>
      <param name="UC">Defaults</param>
      <param name="Module">wfw</param>
      <param name="Output">"text/xml"</param>
    </object>
    <object filename="\explorer.php" type="controler" position="1153" id="4a0f20d479ce49c9a0f7ad6e40eb18b2">
      <param name="description">Explore le disque de données</param>
      <param name="name">wfw_explorer_ctrl</param>
      <param name="fields">path : Chemin d'accès local</param>
      <param name="fields">
      </param>
      <param name="Role">Admin</param>
      <param name="UC">Explorer</param>
      <param name="Module">wfw</param>
      <param name="Output">"text/html"</param>
      <param name="Champs">path : Chemin d'accès local</param>
    </object>
    <object filename="\home.php" type="controler" position="1172" id="dfbf34d2f0cf4b8a9892eb339c10400d">
      <param name="description">Affiche la page d'accueil</param>
      <param name="name">wfw_home_ctrl</param>
      <param name="Role">Tous</param>
      <param name="UC">Home</param>
      <param name="Module">wfw</param>
      <param name="Output">"text/html"</param>
    </object>
    <object filename="\include.php" type="controler" position="1172" id="44d668656269400ab7acf1595f07f123">
      <param name="description">Concaténe le contenu de plusieurs scripts d'inclusion</param>
      <param name="name">wfw_include_ctrl</param>
      <param name="fields">script_type  : Type de script. Une des valeurs suivants: "jquery", "yui", "extjs", "bootstrap", "javascript"</param>
      <param name="fields">
      </param>
      <param name="Role">Tous</param>
      <param name="UC">Include</param>
      <param name="Module">wfw</param>
      <param name="Output">"text/javascript", "text/css"</param>
      <param name="Champs">script_type  : Type de script. Une des valeurs suivants: "jquery", "yui", "extjs", "bootstrap", "javascript"</param>
    </object>
    <object filename="\maketask.php" type="controler" position="1149" id="0e1d13fc7f934d458122d4ecd48bd2ef">
      <param name="description">Initialise une tâche système</param>
      <param name="name">wfw_maketask_ctrl</param>
      <param name="fields">task_name  : Nom de la tâche</param>
      <param name="fields">task_date  : Date d'exécution</param>
      <param name="fields">task_cmd   : Commande système</param>
      <param name="fields">
      </param>
      <param name="Role">Admin</param>
      <param name="UC">MakeTask</param>
      <param name="Module">wfw</param>
      <param name="Champs">task_name  : Nom de la tâche</param>
    </object>
    <object filename="\maketaskrecursive.php" type="controler" position="1149" id="8879bb4912d54ca088f1fc74df664d5f">
      <param name="description">Initialise une tâche système (recursive)</param>
      <param name="name">wfw_maketaskrecursive_ctrl</param>
      <param name="fields">task_name  : Nom de la tâche</param>
      <param name="fields">task_delay : Déalis d'exécution en minutes</param>
      <param name="fields">task_cmd   : Commande système</param>
      <param name="fields">
      </param>
      <param name="Role">Admin</param>
      <param name="UC">MakeTaskRecursive</param>
      <param name="Module">wfw</param>
      <param name="Champs">task_name  : Nom de la tâche</param>
    </object>
    <object filename="\tasklist.php" type="controler" position="1149" id="c56522c66ba14b17a132702573a91669">
      <param name="description">Liste les tâches système</param>
      <param name="name">wfw_tasklist_ctrl</param>
    </object>
    <object filename="\xml_template.php" type="template_action" position="38901" id="dbe5b00d61714e0e9cccd034b6217f89">
      <param name="description">Duplique et transforme en boucle les noeuds enfants</param>
      <param name="name">each</param>
    </object>
    <object filename="\xml_template.php" type="template_action" position="40562" id="540ee61e7b654e56a737464294fa1656">
      <param name="description">Duplique et transforme en boucle le noeud en correspondance avec chaque selection trouve</param>
      <param name="name">array</param>
    </object>
    <object filename="\xml_template.php" type="template_action" position="42138" id="388d27234fbf4d149f2643e151914a21">
      <param name="description">Déplace le curseur de sélection sur un ou plusieurs éléments</param>
      <param name="name">all</param>
      <param name="exemple">&lt;li template:action="all" template:selector="books &gt; "&gt; Book #-{__array_count__} is -{__inner_text__}&lt;/li&gt;</param>
      <param name="exemple">
      </param>
      <param name="template_argument">__array_count__ = Index de l'élément en cours (débute à 1)</param>
      <param name="template_argument">__inner_text__  = Valeur de l'élément sélectionné (texte)</param>
      <param name="template_argument">__tag_name__    = Nom de la balise sélectionnée</param>
      <param name="template_attribute">action   = "all"</param>
      <param name="template_attribute">selector = Sélecteur CSS vers les éléments cibles</param>
      <param name="template_transform">Si l'action ne peut pas être appliquée, l'élément et ses enfants sont supprimés.</param>
      <param name="template_transform">L'Élément est dupliqué autant de fois qu'il y a de transformation à éffectuées (méthode cXMLTemplate::check_node)</param>
    </object>
    <object filename="\xml_template.php" type="template_action" position="44146" id="876a12e738124002a7d31cdbfd28e3f2">
      <param name="description">Déplace le curseur de sélection sur un élément</param>
      <param name="name">one</param>
      <param name="exemple">&lt;li template:action="one" template:selector="books &gt; "&gt;First Book is -{__inner_text__}&lt;/li&gt;</param>
      <param name="exemple">
      </param>
      <param name="template_argument">__inner_text__  = Valeur de l'élément sélectionné (texte)</param>
      <param name="template_argument">__tag_name__    = Nom de la balise séléctionnée</param>
      <param name="template_attribute">action   = "one"</param>
      <param name="template_attribute">selector = Sélecteur CSS vers l'élément cible</param>
      <param name="template_transform">Si l'action ne peut pas être appliquée, l'élément et ses enfants sont supprimés.</param>
      <param name="template_transform">L'Élément est transformé (méthode cXMLTemplate::check_node)</param>
    </object>
    <object filename="\xml_template.php" type="template_action" position="45857" id="cef1d1ca45904da6aaab1c80368b9c56">
      <param name="description">Test une expression reguliere sur la selection</param>
      <param name="name">exp</param>
    </object>
    <object filename="\xml_template.php" type="template_action" position="48271" id="c2c10a9a5f9a41c9a1819acf8bd98a7d">
      <param name="description">Evalue une expression du langage</param>
      <param name="name">eval</param>
    </object>
    <object filename="\xml_template.php" type="template_action" position="49459" id="15e3bc9a3732457fb51f3489a7c70b14">
      <param name="description">Déplace le curseur de sélection sur l'élément choisi</param>
      <param name="name">select</param>
      <param name="exemple">&lt;div template:action="select" template:path="/root/element"&gt; Si l'élément 'book' est sélectionné&lt;/div&gt;</param>
      <param name="exemple">
      </param>
      <param name="template_argument">__inner_text__ = Valeur de l'élément sélectionné (texte)</param>
      <param name="template_attribute">action = "select"</param>
      <param name="template_attribute">path   = Chemin d'accès à l'élément cible</param>
      <param name="template_transform">Si l'action ne peut pas être appliquée, l'éléments et ses enfants sont supprimés.</param>
      <param name="template_transform">Sinon l'élément est transformé (méthode cXMLTemplate::check_node)</param>
    </object>
    <object filename="\xml_template.php" type="template_action" position="51053" id="417c231492524ed0b19d19e7b9e36736">
      <param name="description">Test l’existence d'un argument</param>
      <param name="name">exists</param>
      <param name="exemple">&lt;div template:action="exists" template:name="my_arg"&gt; Si 'my_arg' existe&lt;/div&gt;
     &lt;div template:action="exists" template:name="!my_arg"&gt; Si 'my_arg' n'existe pas&lt;/div&gt;</param>
      <param name="exemple">
      </param>
      <param name="template_attribute">action = "exists"</param>
      <param name="template_attribute">name   = Nom de l'argument</param>
      <param name="template_transform">Si l'action ne peut pas être appliquée, l'éléments et ses enfants sont supprimés.</param>
      <param name="template_transform">Sinon l'élément est transformé (méthode cXMLTemplate::check_node)</param>
    </object>
    <object filename="\xml_template.php" type="template_action" position="53391" id="fe4e5349c5c24dc9a313ce27c33884f6">
      <param name="description">Fusionne le contenu XML de la sélection dans le nœud en cours</param>
      <param name="name">merge</param>
      <param name="template_attribute">action = "merge"</param>
      <param name="template_attribute">path   = Chemin d'accès à l'élément cible</param>
      <param name="template_attribute">
      </param>
    </object>
    <object filename="\xml_template.php" type="template_action" position="54584" id="667bd212fb6d48d9b0974983b42dc1ab">
      <param name="description">Inclue contenu XML de la sélection dans le nœud en cours.</param>
      <param name="name">include</param>
      <param name="template_attribute">action = "include"</param>
      <param name="template_attribute">path   = Chemin d'accès à l'élément cible.</param>
      <param name="template_attribute">option = Une combinaison des valeurs suivantes:</param>
      <param name="template_attribute">- "include_att"  = Inclue les attributs</param>
      <param name="template_attribute">- "content_only" = Inclue uniquement le contenu du noeud</param>
      <param name="template_attribute">
      </param>
    </object>
    <object filename="\xml_template.php" type="template_action" position="56787" id="89d2ec272bf641148ad3f4860ada5074">
      <param name="description">Fabrique un sous contenu dans la destination</param>
      <param name="name">make</param>
      <param name="template_attribute">action = "make"</param>
      <param name="template_attribute">path   = selection en cours.</param>
      <param name="template_attribute">import = chemin d'acces a l'element cible.</param>
      <param name="template_attribute">
      </param>
    </object>
    <object filename="\xml_template.php" type="template_action" position="59153" id="25dd653713764ba993b8cf9c59b51b34">
      <param name="description">Inclue du contenu XML dans la destination</param>
      <param name="name">ignore</param>
      <param name="template_attribute">action = "ignore"</param>
      <param name="template_attribute">path   = chemin d'acces a l'element cible.</param>
      <param name="template_attribute">
      </param>
    </object>
    <object filename="\xml_template.php" type="template_action" position="59519" id="f69844a92519467795e186ce15f29d17">
      <param name="description">Formate un texte brut en texte HTML</param>
      <param name="name">format</param>
      <param name="template_attribute">action = "format"</param>
      <param name="template_attribute">transform = si true, les elements enfants sont transformés par checkNode()</param>
      <param name="template_attribute">preset = type de formatage ("script", "text"). Si non définit tous les formatages sont éffectués</param>
      <param name="template_attribute">
      </param>
    </object>
    <object filename="\func.sql" type="procedure" position="138" id="723ea9e749e04f048c330f35fcd08218">
      <param name="name">user_check_authentication</param>
      <param name="params">
       p_user_id user_account.user_account_id%type,
       p_user_pwd user_account.user_pwd%type
</param>
      <param name="returntype">RESULT</param>
    </object>
    <object filename="\func.sql" type="procedure" position="921" id="8c99c9dc3a9f428a843fd7ef89db9e94">
      <param name="name">user_account_exists</param>
      <param name="params">
       p_user_id user_account.user_account_id%type
</param>
      <param name="returntype">RESULT</param>
    </object>
    <object filename="\func.sql" type="procedure" position="1613" id="ee94c048613a46e89cef0402a3930b83">
      <param name="name">user_is_free_account</param>
      <param name="params">
       p_user_id user_account.user_account_id%type,
       p_user_mail user_account.user_mail%type
</param>
      <param name="returntype">RESULT</param>
    </object>
    <object filename="\func.sql" type="procedure" position="2643" id="8c89061a1aff49f194508bbadeb13783">
      <param name="name">user_delete_account</param>
      <param name="params">
    p_user_id user_account.user_account_id%type
</param>
      <param name="returntype">RESULT</param>
      <param name="remark">Les sessions automatiques sont automatiquements supprimées (on_disconnect_user)</param>
    </object>
    <object filename="\func.sql" type="procedure" position="3520" id="32a9099fc45d479081e7f5a420c8fb9f">
      <param name="name">user_create_account</param>
      <param name="params">
       p_user_id user_account.user_account_id%type,
       p_user_pwd user_account.user_pwd%type,
       p_client_id user_account.client_id%type,
       p_user_mail user_account.user_mail%type
</param>
      <param name="returntype">RESULT</param>
      <param name="return">[RESULT] Un des résultats suivant:</param>
      <param name="return">'ERR_OK     : USER_CREATED'   -&gt; L'Utilisateur à été créé avec succès</param>
      <param name="return">'ERR_FAILED : USER_EXISTS'    -&gt; L'Utilisateur existe déjà</param>
      <param name="return">'ERR_SYSTEM : NOT_SPECIFIED'  -&gt; Une erreur système est survenue</param>
    </object>
    <object filename="\func.sql" type="procedure" position="4957" id="ceaac5208c804bb4a81b15f2feedc987">
      <param name="name">user_register_account</param>
      <param name="params">
       p_user_id user_account.user_account_id%type,
       p_user_mail user_account.user_mail%type
</param>
      <param name="returntype">RESULT</param>
      <param name="return">[RESULT] Un des résultats suivant:</param>
      <param name="return">'ERR_OK     : USER_CREATED'   -&gt; L'Utilisateur à été créé avec succès</param>
      <param name="return">'ERR_FAILED : USER_EXISTS'    -&gt; L'Utilisateur existe déjà</param>
      <param name="return">'ERR_SYSTEM : NOT_SPECIFIED'  -&gt; Une erreur système est survenue</param>
    </object>
    <object filename="\func.sql" type="procedure" position="6885" id="657f8397f7dc4f2899dc774c80bd397d">
      <param name="name">user_activate_account</param>
      <param name="params">
       p_user_id user_account.user_account_id%type,
       p_user_pwd user_account.user_pwd%type,
       p_user_mail user_account.user_mail%type,
       p_user_token user_registration.user_token%type
</param>
      <param name="returntype">RESULT</param>
    </object>
    <object filename="\func.sql" type="procedure" position="8947" id="54fb05458ece4d55974dcb014b3cf1a6">
      <param name="name">user_create_session</param>
      <param name="params">
       p_session_id user_session.user_session_id%type,
       p_local_path user_session.local_path%type
</param>
      <param name="returntype">BOOLEAN</param>
      <param name="return">[BOOL] TRUE si la user_session à été créée.</param>
    </object>
    <object filename="\func.sql" type="procedure" position="9546" id="cab5552df788499896c9e4a81c6d2b83">
      <param name="name">user_connect_to_session</param>
      <param name="params">
       p_user_id user_account.user_account_id%type,
       p_client_ip user_connection.client_ip%type,
       p_session_id user_session.user_session_id%type,
       p_life_time user_connection.life_time%type/* default 10000*/
       </param>
      <param name="returntype">BOOLEAN</param>
      <param name="param">p_user_id    : Identifiant de l'utilisateur</param>
      <param name="param">p_client_ip  : IP du client (IPv4)</param>
      <param name="param">p_session_id : Identifiant de Session</param>
      <param name="param">p_life_time  : Temps de vie de la connexion (en secondes)</param>
      <param name="remark">Si une connexion existe deja pour cette IP, elle est remplacée</param>
    </object>
    <object filename="\func.sql" type="procedure" position="10820" id="a43fb2ad34ef48f6bd945319e61a4560">
      <param name="name">user_connect</param>
      <param name="params">
       p_user_id    user_account.user_account_id%type,
       p_client_ip  user_connection.client_ip%type,
       p_data_path  varchar,
       p_life_time  user_connection.life_time%type/* default 10000*/
       </param>
      <param name="returntype">RESULT</param>
      <param name="param">p_user_id    : Identifiant de l'utilisateur</param>
      <param name="param">p_client_ip  : IP du client (IPv4)</param>
      <param name="param">p_data_path  : Chemin d'accès aux données utilisateurs</param>
      <param name="param">p_life_time  : temps de vie de la connexion (en secondes)</param>
      <param name="remark">Si la connexion existe deja pour cette IP, elle est actualisée.</param>
      <param name="remark">La session est créée automatiquement</param>
      <param name="return">[VARCHAR2] Identifiant de la user_session active.</param>
    </object>
    <object filename="\func.sql" type="procedure" position="13895" id="bcceb39b3330483e91f0c2e7ab53bd96">
      <param name="name">user_disconnect_all</param>
      <param name="params">
      </param>
      <param name="returntype">RESULT</param>
      <param name="param">p_b_session : Si true, termine toutes les sessions</param>
    </object>
    <object filename="\func.sql" type="procedure" position="14449" id="91b1899ad3f348528d30b6da857a9045">
      <param name="name">user_disconnect_all_client</param>
      <param name="params">
       p_b_session in boolean/* default true*/
       </param>
      <param name="returntype">RESULT</param>
      <param name="remark">Les sessions sont supprimées.</param>
    </object>
    <object filename="\func.sql" type="procedure" position="15170" id="99007905820e43ddab5e9c3e7eaefb37">
      <param name="name">user_delete_session</param>
      <param name="params">
       p_session_id user_session.user_session_id%type,
       p_force in boolean/* default true*/
       </param>
      <param name="returntype">VOID</param>
      <param name="param">p_session_id : identificateur de la user_session a terminer</param>
      <param name="param">p_b_session  : Force la fermeture des connexions si la user_session est encore utilisée</param>
    </object>
    <object filename="\func.sql" type="procedure" position="15979" id="540ffd6a32cf43caac8bcdcd2cc54883">
      <param name="name">user_disconnect_account</param>
      <param name="params">
       p_user_id    user_account.user_account_id%type
       </param>
      <param name="returntype">RESULT</param>
      <param name="param">p_user_id    : Identifiant de l'utilisateur</param>
      <param name="remark">Si la session est de type automatique et non utilisée, elle sera detruite.</param>
    </object>
    <object filename="\func.sql" type="procedure" position="18233" id="748dc3bb2b514057a9b4dcbb2d5fb924">
      <param name="name">on_disconnect_user</param>
      <param name="params">
      /*p_session_id  user_session.user_session_id%type,
       p_b_force     boolean default true
      */ </param>
      <param name="returntype">TRIGGER</param>
    </object>
    <object filename="\func.sql" type="procedure" position="19152" id="10c1810523754f89bcd4bde586311028">
      <param name="name">user_close_unused_session</param>
      <param name="params">
       p_b_auto_only boolean/* default true*/
</param>
      <param name="returntype">VOID</param>
    </object>
    <object filename="\func.sql" type="procedure" position="19733" id="8762ee85e736402a861de28115870355">
      <param name="name">user_make_identity</param>
      <param name="params">
       p_user_account_id    user_account.user_account_id%type,
       p_first_name         user_identity.first_name%type,
       p_last_name          user_identity.last_name%type,
       p_birth_day          user_identity.birth_day%type,
       p_sex                user_identity.sex%type
       </param>
      <param name="returntype">RESULT</param>
      <param name="param">p_user_account_id    : Identifiant de l'utilisateur</param>
      <param name="param">...</param>
      <param name="remark">Si aucune entrée de la table USER_IDENTITY existe, elle est créée</param>
    </object>
    <object filename="\func.sql" type="procedure" position="21902" id="36c3f225e9984373b897237b32adcc74">
      <param name="name">user_make_address</param>
      <param name="params">
       p_user_account_id user_account.user_account_id%type,
       p_zip_code user_address.zip_code%type,
       p_city_name user_address.city_name%type,
       p_street_name user_address.street_name%type,
       p_street_number user_address.street_number%type,
       p_country_name user_address.country_name%type,
       p_street_prefix user_address.street_prefix%type,
       p_building_number user_address.building_number%type,
       p_apt_number user_address.apt_number%type
       </param>
      <param name="returntype">RESULT</param>
      <param name="param">p_user_account_id    : Identifiant de l'utilisateur</param>
      <param name="param">...</param>
      <param name="remark">Si aucune entrée de la table USER_ADDRESS existe, elle est créée</param>
    </object>
    <object filename="\func.sql" type="procedure" position="24837" id="b19a98eb9b5a41739ceba5fda420566c">
      <param name="name">user_check_connection</param>
      <param name="params">
       p_user_connection_id    user_connection.user_connection_id%type,
       p_client_ip             user_connection.client_ip%type
       </param>
      <param name="returntype">RESULT</param>
      <param name="param">p_user_connection_id  : Identifiant de connexion</param>
      <param name="param">p_client_ip           : Adresse IP du client</param>
    </object>
    <object filename="\User.php" type="class" position="2532" id="abfca108133b47f98538f464c8f009d6">
      <param name="name">UserModule</param>
      <param name="brief">Module utilisateur </param>
    </object>
    <object filename="\User.php" type="method" position="3031" id="353550f927dd455ca73e4e30d10d07c5">
      <param name="name">load</param>
      <param name="params">$local_path</param>
      <param name="brief">Initialise le module</param>
      <param name="param">$local_path Chemin d'accès local vers ce dossier</param>
    </object>
    <object filename="\User.php" type="method" position="5483" id="2993eef53d51400a8d52ba8b5a0787ec">
      <param name="name">createAccount</param>
      <param name="params">$uid, $pwd, $client_id, $mail</param>
      <param name="brief">Cree un nouvel utilisateur</param>
      <param name="param">type $name</param>
      <param name="param">type $attributes</param>
      <param name="param">type $template_file</param>
    </object>
    <object filename="\User.php" type="method" position="5836" id="308012de1b914e20abf3a36ba751a393">
      <param name="name">deleteAccount</param>
      <param name="params">$uid</param>
      <param name="brief">Supprime un utilisateur existant</param>
    </object>
    <object filename="\User.php" type="method" position="6047" id="a0c8cdf63a4f4d248eb93ec5243c5ee7">
      <param name="name">connectUser</param>
      <param name="params">$uid, $client_ip, $local_path, $life_time</param>
      <param name="brief">Connect un utilisateur</param>
      <param name="param">type $uid         Nom d'utilisateur</param>
      <param name="param">type $client_ip   IP du client. Si NULL, $_SERVER["..."] est utilisé</param>
      <param name="param">type $local_path  Chemin d'accées local pour le paratage de données</param>
      <param name="param">type $life_time   Durée de vide de la session en secondes</param>
    </object>
    <object filename="\User.php" type="method" position="6608" id="0e659565f71f494aafe61f1538ce73f7">
      <param name="name">disconnectUser</param>
      <param name="params">$uid</param>
      <param name="brief">Déconnecte un utilisateur</param>
    </object>
    <object filename="\User.php" type="method" position="6817" id="a4526fa830464790a3f385d19d8df092">
      <param name="name">disconnect</param>
      <param name="params">$cid</param>
      <param name="brief">Déconnecte une connexion</param>
    </object>
    <object filename="\User.php" type="method" position="7013" id="4c85e03997814f4b9c2f44dc1074b769">
      <param name="name">disconnectAll</param>
      <param name="params">
      </param>
      <param name="brief">Déconnecte un utilisateur</param>
    </object>
    <object filename="\User.php" type="method" position="7207" id="0257e9eb654b4fd2ada0575edd75d6c1">
      <param name="name">activateAccount</param>
      <param name="params">$uid, $pwd, $mail, $token</param>
      <param name="brief">Crée un nouvel utilisateur</param>
      <param name="param">type $name</param>
      <param name="param">type $attributes</param>
      <param name="param">type $template_file</param>
    </object>
    <object filename="\User.php" type="method" position="7556" id="8ed776fdf79c477ea0dc4b777c73b0d9">
      <param name="name">registerAccount</param>
      <param name="params">$uid, $mail</param>
      <param name="brief">Inscrit un nouvel utilisateur</param>
      <param name="param">type $uid Identifiant</param>
      <param name="param">type $mail Adresse Mail</param>
    </object>
    <object filename="\User.php" type="method" position="7864" id="f5e5483e8f4c49d18a78eef8e8084204">
      <param name="name">getRegisterByMail</param>
      <param name="params">&amp;$inst,$user_mail,$db=null</param>
      <param name="brief">Get single entry by mail</param>
      <param name="param">$inst UserRegistration instance pointer to initialize</param>
      <param name="param">$id Primary unique identifier of entry to retreive</param>
      <param name="param">$db iDataBase derived instance</param>
    </object>
    <object filename="\User.php" type="method" position="8706" id="28c50911bd404b1e97f8853087eec4e6">
      <param name="name">accountExists</param>
      <param name="params">$uid, $mail</param>
      <param name="brief">Vérifie si un utilisateur existe utilisateur</param>
      <param name="param">type $uid Identifiant</param>
      <param name="param">type $mail Adresse Mail</param>
    </object>
    <object filename="\User.php" type="method" position="9025" id="31e31d82b2ac4aab9dba1955746b715d">
      <param name="name">makeIdentity</param>
      <param name="params">$user_connection_id, $first_name, $last_name, DateTime $birth_day, $sex</param>
      <param name="brief">Cree un nouvel utilisateur</param>
      <param name="param">type $name</param>
      <param name="param">type $attributes</param>
      <param name="param">type $template_file</param>
    </object>
    <object filename="\User.php" type="method" position="9451" id="e41f145998d24db58b573ad92b66b48f">
      <param name="name">getIdentity</param>
      <param name="params">$user_account,&amp;$identity</param>
      <param name="brief">Obtient l'identité lie à un compte utilisateur</param>
      <param name="param">mixed       $user_account Identifiant/Instance du compte (UserAccount)</param>
      <param name="param">UserAddress $identity     Pointeur recevant l'identité (UserIdentity)</param>
    </object>
    <object filename="\User.php" type="method" position="10566" id="8131565a8158482399b890ac1bf4dec5">
      <param name="name">getUserName</param>
      <param name="params">$user_account</param>
      <param name="brief">Obtient Le nom d'un utilisateur</param>
      <param name="param">mixed       $user_account Identifiant/Instance du compte (UserAccount)</param>
      <param name="return">User name</param>
    </object>
    <object filename="\User.php" type="method" position="11649" id="230d13dbb67447f4b3d147f99de1e2bd">
      <param name="name">getAddress</param>
      <param name="params">$user_account,&amp;$address</param>
      <param name="brief">Obtient l'adresse lie à un compte utilisateur</param>
      <param name="param">mixed       $user_account Identifiant/Instance du compte (UserAccount)</param>
      <param name="param">UserAddress $address      Pointeur recevant l'adresse (UserAddress)</param>
    </object>
    <object filename="\User.php" type="method" position="12838" id="def0278013124982aa734f57eb21d789">
      <param name="name">makeAddress</param>
      <param name="params">$user_account_id, $zip_code, $city_name, $street_name, $street_number, $street_number, $country_name, $street_prefix, $building_number, $apt_number</param>
      <param name="brief">Fabrique une adresse</param>
      <param name="param">mixed       $src Element source, un des types suivants: UserAccount, UserConnection, UserIdentity</param>
      <param name="param">UserAddress $adr Adresse à initialiser </param>
    </object>
    <object filename="\User.php" type="method" position="13484" id="2671acc045da4850a90fbb1deee3cede">
      <param name="name">checkAuthentication</param>
      <param name="params">$uid, $pwd</param>
      <param name="brief">Vérifie l'autentification d'un tilisateur</param>
      <param name="param">type $uid Nom d'utilisateur</param>
      <param name="param">type $pwd Mot de passe</param>
    </object>
    <object filename="\User.php" type="method" position="13815" id="9056c23523c74094bf69725f6be4d197">
      <param name="name">checkConnection</param>
      <param name="params">$cid,$ip</param>
      <param name="brief">Vérifie et maintient une connexion utilisateur</param>
      <param name="param">type $cid Identifiant de connexion</param>
      <param name="param">type $ip Adresse IP du client, utilisez $_SERVER["REMOTE_ADDR"]</param>
      <param name="return">bool Résultat de procédure</param>
    </object>
    <object filename="\User.php" type="method" position="14716" id="e8e57b6665714546aa5ac4e45520b8fe">
      <param name="name">disconnectTaskName</param>
      <param name="params">$uid</param>
      <param name="brief">Génére le nom pour la tâche de déconnection d'un utilisateur</param>
      <param name="param">type $uid Nom d'utilisateur</param>
      <param name="return">string Nom de la tâche système</param>
    </object>
    <object filename="\User.php" type="method" position="15038" id="a53f83cb07134737bf9f928ba95dab82">
      <param name="name">disconnectTaskCmd</param>
      <param name="params">$uid</param>
      <param name="brief">Génére la commande pour la tâche de déconnection d'un utilisateur</param>
      <param name="param">type $uid Nom d'utilisateur</param>
      <param name="return">string Commande de la tâche système</param>
    </object>
    <object filename="\User.php" type="method" position="15533" id="c6b1ce1672554bbb9c3f51581a43be8e">
      <param name="name">getCurrent</param>
      <param name="params">&amp;$user</param>
      <param name="brief">Obtient l'utilisateur connecté</param>
      <param name="param">UserAccount $user Reçoi l'instance du compte utilisateur connecté</param>
      <param name="return">bool Résultat de procédure</param>
    </object>
    <object filename="\User.php" type="method" position="16687" id="f788f4ccc568430c9dc34ab415b3d70e">
      <param name="name">getByMail</param>
      <param name="params">$user_mail,&amp;$user_account</param>
      <param name="brief">Obtient un compte utilisateur lié à une adresse mail</param>
      <param name="param">string      $user_mail    Adresse mail</param>
      <param name="param">UserAccount $user_account Pointeur recevant l'instance du compte (UserAccount)</param>
      <param name="return">bool Résultat de procédure</param>
    </object>
    <object filename="\User.php" type="section" position="2613" id="b51b797a373f42c2a47e1a40c7bad317">
      <param name="description">Constantes des erreurs</param>
      <param name="class">UserModule</param>
    </object>
    <object filename="\User.php" type="section" position="2859" id="a2c8997d67d54fdba8cddc2e2117e984">
      <param name="description">Méthodes</param>
      <param name="class">UserModule</param>
    </object>
    <object filename="\UserAccount.php" type="class" position="1243" id="bb89f4c43ce04d259fe2aed16940fc24">
      <param name="name">UserAccount</param>
      <param name="author">AceTeaM</param>
    </object>
    <object filename="\UserAccount.php" type="method" position="1717" id="21b51dffe43e4a3c84663209be56a5b7">
      <param name="name">toXML</param>
      <param name="params">&amp;$inst,$doc</param>
      <param name="brief">Convert existing instance to XML element</param>
      <param name="param">$inst Entity instance (UserAccount)</param>
      <param name="param">$doc Parent document</param>
      <param name="return">New element node</param>
    </object>
    <object filename="\UserAccount.php" type="method" position="5389" id="8f4e7edb3d1448d2b6f270aabf885511">
      <param name="name">nameToCode</param>
      <param name="params">$name</param>
      <param name="brief">Convert name to code </param>
    </object>
    <object filename="\UserAccount.php" type="method" position="5757" id="6810a7c6db954f6c81a789f327ce3546">
      <param name="name">getByRelation</param>
      <param name="params">&amp;$inst,$obj,$db=null</param>
      <param name="brief">Get entry by id's relation table</param>
      <param name="param">$inst UserAccount instance pointer to initialize</param>
      <param name="param">$obj An another entry class object instance</param>
      <param name="param">$db iDataBase derived instance</param>
    </object>
    <object filename="\UserAddress.php" type="class" position="1243" id="ca8630edb5db4a1cb64f614a2c2978fd">
      <param name="name">UserAddress</param>
      <param name="author">AceTeaM</param>
    </object>
    <object filename="\UserAddress.php" type="method" position="2059" id="0213fecf405344eabbebf536ca7b1469">
      <param name="name">toXML</param>
      <param name="params">&amp;$inst,$doc</param>
      <param name="brief">Convert existing instance to XML element</param>
      <param name="param">$inst Entity instance (UserAddress)</param>
      <param name="param">$doc Parent document</param>
      <param name="return">New element node</param>
    </object>
    <object filename="\UserAddress.php" type="method" position="6881" id="2d808189a6b845be8ffd558cb0610b39">
      <param name="name">nameToCode</param>
      <param name="params">$name</param>
      <param name="brief">Convert name to code </param>
    </object>
    <object filename="\UserAddress.php" type="method" position="7249" id="6a6651861cb448a9bd2494374f55ee6e">
      <param name="name">getByRelation</param>
      <param name="params">&amp;$inst,$obj,$db=null</param>
      <param name="brief">Get entry by id's relation table</param>
      <param name="param">$inst UserAddress instance pointer to initialize</param>
      <param name="param">$obj An another entry class object instance</param>
      <param name="param">$db iDataBase derived instance</param>
    </object>
    <object filename="\UserConnection.php" type="class" position="1243" id="c612ff891fc148299e0a4d77c44cd7bb">
      <param name="name">UserConnection</param>
      <param name="author">AceTeaM</param>
    </object>
    <object filename="\UserConnection.php" type="method" position="1792" id="59a130795b69428b88aa0f7d1b792928">
      <param name="name">toXML</param>
      <param name="params">&amp;$inst,$doc</param>
      <param name="brief">Convert existing instance to XML element</param>
      <param name="param">$inst Entity instance (UserConnection)</param>
      <param name="param">$doc Parent document</param>
      <param name="return">New element node</param>
    </object>
    <object filename="\UserConnection.php" type="method" position="5748" id="5b96566328324cf6a235703ad57479d3">
      <param name="name">nameToCode</param>
      <param name="params">$name</param>
      <param name="brief">Convert name to code </param>
    </object>
    <object filename="\UserConnection.php" type="method" position="6116" id="6d9a9be5353f412f9d468da6b2647b9a">
      <param name="name">getByRelation</param>
      <param name="params">&amp;$inst,$obj,$db=null</param>
      <param name="brief">Get entry by id's relation table</param>
      <param name="param">$inst UserConnection instance pointer to initialize</param>
      <param name="param">$obj An another entry class object instance</param>
      <param name="param">$db iDataBase derived instance</param>
    </object>
    <object filename="\UserIdentity.php" type="class" position="1243" id="b16c5406c29f4184b357662cbeae5a93">
      <param name="name">UserIdentity</param>
      <param name="author">AceTeaM</param>
    </object>
    <object filename="\UserIdentity.php" type="method" position="1778" id="b4586bff3f1a4ee4b61714793e91e546">
      <param name="name">toXML</param>
      <param name="params">&amp;$inst,$doc</param>
      <param name="brief">Convert existing instance to XML element</param>
      <param name="param">$inst Entity instance (UserIdentity)</param>
      <param name="param">$doc Parent document</param>
      <param name="return">New element node</param>
    </object>
    <object filename="\UserIdentity.php" type="method" position="5655" id="fdb10d14ff554465a52783efdb511335">
      <param name="name">nameToCode</param>
      <param name="params">$name</param>
      <param name="brief">Convert name to code </param>
    </object>
    <object filename="\UserIdentity.php" type="method" position="6023" id="468e871d3f4a421ab0750b72f3697ba2">
      <param name="name">getByRelation</param>
      <param name="params">&amp;$inst,$obj,$db=null</param>
      <param name="brief">Get entry by id's relation table</param>
      <param name="param">$inst UserIdentity instance pointer to initialize</param>
      <param name="param">$obj An another entry class object instance</param>
      <param name="param">$db iDataBase derived instance</param>
    </object>
    <object filename="\UserRegistration.php" type="class" position="1243" id="967fb214acee4367b2d870658f5b3df5">
      <param name="name">UserRegistration</param>
      <param name="author">AceTeaM</param>
    </object>
    <object filename="\UserRegistration.php" type="method" position="1734" id="4e1cb2d56cae43bbaef23f164057147f">
      <param name="name">toXML</param>
      <param name="params">&amp;$inst,$doc</param>
      <param name="brief">Convert existing instance to XML element</param>
      <param name="param">$inst Entity instance (UserRegistration)</param>
      <param name="param">$doc Parent document</param>
      <param name="return">New element node</param>
    </object>
    <object filename="\UserRegistration.php" type="method" position="5506" id="e6251a6794384e17b6221a80a538d52f">
      <param name="name">nameToCode</param>
      <param name="params">$name</param>
      <param name="brief">Convert name to code </param>
    </object>
    <object filename="\UserRegistration.php" type="method" position="5874" id="5e69876541a54defa9580eb22ade65d4">
      <param name="name">getByRelation</param>
      <param name="params">&amp;$inst,$obj,$db=null</param>
      <param name="brief">Get entry by id's relation table</param>
      <param name="param">$inst UserRegistration instance pointer to initialize</param>
      <param name="param">$obj An another entry class object instance</param>
      <param name="param">$db iDataBase derived instance</param>
    </object>
    <object filename="\UserSession.php" type="class" position="1243" id="4e857be2aa8c41c18fd49c23ee918212">
      <param name="name">UserSession</param>
      <param name="author">AceTeaM</param>
    </object>
    <object filename="\UserSession.php" type="method" position="1589" id="d9eaf32a874e4336a7d943f842cff46e">
      <param name="name">toXML</param>
      <param name="params">&amp;$inst,$doc</param>
      <param name="brief">Convert existing instance to XML element</param>
      <param name="param">$inst Entity instance (UserSession)</param>
      <param name="param">$doc Parent document</param>
      <param name="return">New element node</param>
    </object>
    <object filename="\UserSession.php" type="method" position="4861" id="34acdccc6568409e820fdc07a5060743">
      <param name="name">nameToCode</param>
      <param name="params">$name</param>
      <param name="brief">Convert name to code </param>
    </object>
    <object filename="\UserSession.php" type="method" position="5229" id="56d3dbd256b442bf98d02923b909d530">
      <param name="name">getByRelation</param>
      <param name="params">&amp;$inst,$obj,$db=null</param>
      <param name="brief">Get entry by id's relation table</param>
      <param name="param">$inst UserSession instance pointer to initialize</param>
      <param name="param">$obj An another entry class object instance</param>
      <param name="param">$db iDataBase derived instance</param>
    </object>
    <object filename="\activate.php" type="controler" position="1177" id="9355320247054ad8878426bb3a0f4945">
      <param name="description">Active un compte utilisateur</param>
      <param name="name">user_module_activate_ctrl</param>
      <param name="fields">user_account_id : Identifiant de l'utilisateur (renseigné à l'inscription)</param>
      <param name="fields">user_pwd        : Mot-de-passe</param>
      <param name="fields">user_mail       : Adresse éléctronique (renseigné à l'inscription)</param>
      <param name="fields">token           : Clé d'activation</param>
      <param name="fields">
      </param>
      <param name="Role">Tous</param>
      <param name="UC">Activate</param>
      <param name="Module">user</param>
      <param name="Output">"text/xml"</param>
      <param name="Champs">user_account_id : Identifiant de l'utilisateur (renseigné à l'inscription)</param>
      <param name="token">Clé d'activation</param>
    </object>
    <object filename="\address.php" type="controler" position="1172" id="c79f32cd63bd47d7aaa77efae966818b">
      <param name="description">Renseigne l'adresse d'identité</param>
      <param name="name">user_module_address_ctrl</param>
      <param name="fields">user_account_id : Identifiant de l'utilisateur</param>
      <param name="fields">zip_code        : Code postal</param>
      <param name="fields">city_name       : Ville</param>
      <param name="fields">street_name     : Rue</param>
      <param name="fields">street_number   : Numéro</param>
      <param name="fields">country_name    : Pays</param>
      <param name="fields">
      </param>
      <param name="Role">Tous</param>
      <param name="UC">Address</param>
      <param name="Module">user</param>
      <param name="Output">"text/xml"</param>
      <param name="Champs">user_account_id : Identifiant de l'utilisateur</param>
    </object>
    <object filename="\check.php" type="controler" position="1177" id="306b0988e0754f82972aec03b50a9131">
      <param name="description">Maintient la connexion d'un utilisateur</param>
      <param name="name">user_module_check_ctrl</param>
      <param name="fields">user_account_id : Identifiant de l'utilisateur</param>
      <param name="fields">Remarques:</param>
      <param name="fields">Actualiser une connexion permet de maintenir l’expiration d’une session utilisateur et d’obtenir des informations sur la connexion en cours</param>
      <param name="fields">
      </param>
      <param name="remark">Actualiser une connexion permet de maintenir l’expiration d’une session utilisateur et d’obtenir des informations sur la connexion en cours</param>
      <param name="remark">
      </param>
      <param name="Role">Tous</param>
      <param name="UC">Check</param>
      <param name="Module">user</param>
      <param name="Output">"text/xml"</param>
      <param name="Champs">user_account_id : Identifiant de l'utilisateur</param>
      <param name="Remarques">Actualiser une connexion permet de maintenir l’expiration d’une session utilisateur et d’obtenir des informations sur la connexion en cours</param>
    </object>
    <object filename="\connect.php" type="controler" position="1182" id="181378e6a7524f60b5db0079e2069f4e">
      <param name="description">Connexion d'un utilisateur</param>
      <param name="name">user_module_connect_ctrl</param>
      <param name="fields">user_account_id : Identifiant de l'utilisateur</param>
      <param name="fields">user_pwd        : Mot-de-passe de l'utilisateur</param>
      <param name="Role">Tous</param>
      <param name="UC">Connect</param>
      <param name="Module">user</param>
      <param name="Champs">user_account_id : Identifiant de l'utilisateur</param>
    </object>
    <object filename="\create.php" type="controler" position="1177" id="15520140c6ae47a3a48bd0fa9b4235c2">
      <param name="description">Crée un compte utilisateur</param>
      <param name="name">user_module_create_ctrl</param>
      <param name="fields">user_account_id : Identifiant de l'utilisateur</param>
      <param name="fields">user_pwd        : Mot-de-passe</param>
      <param name="fields">user_mail       : Adresse éléctronique</param>
      <param name="fields">
      </param>
      <param name="Role">Admin</param>
      <param name="UC">Create</param>
      <param name="Module">user</param>
      <param name="Output">"text/xml"</param>
      <param name="Champs">user_account_id : Identifiant de l'utilisateur</param>
    </object>
    <object filename="\delete.php" type="controler" position="1177" id="d2df6ee03eeb43e09d04564b7775c9ea">
      <param name="description">ReSupprime un compte utilisateur</param>
      <param name="name">user_module_delete_ctrl</param>
      <param name="fields">user_account_id : Identifiant de l'utilisateur</param>
      <param name="fields">
      </param>
      <param name="Role">Admin</param>
      <param name="UC">Delete</param>
      <param name="Module">user</param>
      <param name="Output">"text/xml"</param>
      <param name="Champs">user_account_id : Identifiant de l'utilisateur</param>
    </object>
    <object filename="\disconnect.php" type="controler" position="1177" id="ed7561fdd49b4d3284fb495d6dac07a0">
      <param name="description">Déconnecte l'utilisateur en cours</param>
      <param name="name">user_module_disconnect_ctrl</param>
      <param name="fields">user_account_id : Identifiant de l'utilisateur</param>
      <param name="fields">
      </param>
      <param name="Role">Tous</param>
      <param name="UC">Disconnect</param>
      <param name="Module">user</param>
      <param name="Champs">user_account_id : Identifiant de l'utilisateur</param>
    </object>
    <object filename="\disconnect_all.php" type="controler" position="1177" id="be93c1ecbeb148b5b38b5a80fb33e452">
      <param name="description">Déconnect un utilisateur</param>
      <param name="name">user_module_disconnect_all_ctrl</param>
      <param name="Role">Tous</param>
      <param name="UC">Disconnect_All</param>
      <param name="Module">user</param>
      <param name="Output">"text/xml"</param>
    </object>
    <object filename="\disconnect_user.php" type="controler" position="1177" id="ab6bd16094c644428561f86f38857254">
      <param name="description">Déconnect un utilisateur</param>
      <param name="name">user_module_disconnect_user_ctrl</param>
      <param name="fields">user_account_id : Identifiant de l'utilisateur</param>
      <param name="fields">
      </param>
      <param name="Role">Tous</param>
      <param name="UC">Disconnect_User</param>
      <param name="Module">user</param>
      <param name="Output">"text/xml"</param>
      <param name="Champs">user_account_id : Identifiant de l'utilisateur</param>
    </object>
    <object filename="\get_address.php" type="controler" position="1177" id="dde21deb8c164e33842e4b80367bc682">
      <param name="description">Obtient l'adresse d'un utilisateur</param>
      <param name="name">user_module_get_address_ctrl</param>
      <param name="fields">user_account_id : Identifiant de l'utilisateur</param>
      <param name="fields">
      </param>
      <param name="Role">Tous</param>
      <param name="UC">Get_Address</param>
      <param name="Module">user</param>
      <param name="Output">"text/xml"</param>
      <param name="Champs">user_account_id : Identifiant de l'utilisateur</param>
    </object>
    <object filename="\get_identity.php" type="controler" position="1177" id="5ce8ed897aba458b8d52b22bd73a997b">
      <param name="description">Obtient l'identité d'un utilisateur</param>
      <param name="name">user_module_get_identity_ctrl</param>
      <param name="fields">user_account_id : Identifiant de l'utilisateur</param>
      <param name="fields">
      </param>
      <param name="Role">Admin</param>
      <param name="UC">Get_Identity</param>
      <param name="Module">user</param>
      <param name="Output">"text/xml"</param>
      <param name="Champs">user_account_id : Identifiant de l'utilisateur</param>
    </object>
    <object filename="\identity.php" type="controler" position="1177" id="2436bc73a8124efca70721d7a3c09bba">
      <param name="description">Renseigne l'identité d'un utilisateur</param>
      <param name="name">user_module_identity_ctrl</param>
      <param name="fields">user_account_id : Identifiant de l'utilisateur</param>
      <param name="fields">last_name       : Nom</param>
      <param name="fields">first_name      : Prénom</param>
      <param name="fields">birth_day       : Date de naissance</param>
      <param name="fields">sex             : Genre</param>
      <param name="fields">
      </param>
      <param name="Role">Admin</param>
      <param name="UC">Set_Identity</param>
      <param name="Module">user</param>
      <param name="Output">"text/xml"</param>
      <param name="Champs">user_account_id : Identifiant de l'utilisateur</param>
      <param name="sex">Genre</param>
    </object>
    <object filename="\list.php" type="controler" position="1172" id="72d426a784324cdc9a71d6a8acd20a89">
      <param name="description">Liste les comptes utilisateur</param>
      <param name="name">user_module_list_ctrl</param>
      <param name="Role">Admin</param>
      <param name="UC">List</param>
      <param name="Module">user</param>
      <param name="Output">"text/xml"</param>
    </object>
    <object filename="\lost_pwd.php" type="controler" position="1172" id="7b0bf1d425c64101ab4bf8468fac935e">
      <param name="description">Récupérer un mot-de-passe</param>
      <param name="name">user_module_lost_pwd_ctrl</param>
      <param name="fields">user_mail       : Adresse éléctronique du compte</param>
      <param name="fields">
      </param>
      <param name="Role">Tous</param>
      <param name="UC">Lost_Pwd</param>
      <param name="Module">user</param>
      <param name="Output">"text/xml"</param>
      <param name="Champs">user_mail       : Adresse éléctronique du compte</param>
    </object>
    <object filename="\register.php" type="controler" position="1177" id="b113dbf649f44a6ea26b816f1ff55f07">
      <param name="description">Inscrit un nouveau compte utilisateur</param>
      <param name="name">user_module_register_ctrl</param>
      <param name="fields">user_account_id : Identifiant du compte utilisateur</param>
      <param name="fields">user_mail       : Adresse éléctronique du compte</param>
      <param name="fields">Remarques:</param>
      <param name="fields">Une fois enregistré le compte doit être activé avec le controleur 'activate'</param>
      <param name="fields">
      </param>
      <param name="remark">Une fois enregistré le compte doit être activé avec le controleur 'activate'</param>
      <param name="remark">
      </param>
      <param name="Role">Tous</param>
      <param name="UC">Register</param>
      <param name="Module">user</param>
      <param name="Output">"text/xml"</param>
      <param name="Champs">user_account_id : Identifiant du compte utilisateur</param>
      <param name="Remarques">Une fois enregistré le compte doit être activé avec le controleur 'activate'</param>
    </object>
    <object filename="\send_token.php" type="controler" position="1177" id="c11d1da5da624d19a438e17ef481be7a">
      <param name="description">Envoi une clé de controle pour l'activation d'un compte utilisateur</param>
      <param name="name">user_module_send_token_ctrl</param>
      <param name="fields">user_mail : Mail du compte utilisateur</param>
      <param name="fields">Remarques:</param>
      <param name="fields">Le message est envoyé par mail.</param>
      <param name="fields">La clé de configuration 'send_token_mail' définit le tempalte utilisé pour créer le mail. Si non définit un  message générique au format "text/plain" est envoyé.</param>
      <param name="fields">
      </param>
      <param name="remark">Le message est envoyé par mail.</param>
      <param name="remark">La clé de configuration 'send_token_mail' définit le tempalte utilisé pour créer le mail. Si non définit un  message générique au format "text/plain" est envoyé.</param>
      <param name="remark">
      </param>
      <param name="Role">Tous</param>
      <param name="UC">Send_Token</param>
      <param name="Module">user</param>
      <param name="Output">"text/xml"</param>
      <param name="Champs">user_mail : Mail du compte utilisateur</param>
      <param name="Remarques">Le message est envoyé par mail.</param>
    </object>
    <object filename="\set_identity.php" type="controler" position="1177" id="60f59fdb38104289b673bd81112a6160">
      <param name="description">Renseigne l'identité d'un utilisateur</param>
      <param name="name">user_module_set_identity_ctrl</param>
      <param name="fields">user_account_id : Identifiant de l'utilisateur</param>
      <param name="fields">last_name       : Nom</param>
      <param name="fields">first_name      : Prénom</param>
      <param name="fields">birth_day       : Date de naissance</param>
      <param name="fields">sex             : Genre</param>
      <param name="fields">
      </param>
      <param name="Role">Admin</param>
      <param name="UC">Set_Identity</param>
      <param name="Module">user</param>
      <param name="Output">"text/xml"</param>
      <param name="Champs">user_account_id : Identifiant de l'utilisateur</param>
      <param name="sex">Genre</param>
    </object>
    <object filename="\set_password.php" type="controler" position="1177" id="57839bbd2bef4d4aa93d7dec00283c86">
      <param name="description">Renseigne le mot-de-passe d'un utilisateur</param>
      <param name="name">user_module_set_password_ctrl</param>
      <param name="fields">user_account_id : Identifiant de l'utilisateur</param>
      <param name="fields">user_pwd        : Nouveau Mot-de-passe</param>
      <param name="fields">
      </param>
      <param name="Role">Admin</param>
      <param name="UC">Set_Password</param>
      <param name="Module">user</param>
      <param name="Output">"text/xml"</param>
      <param name="Champs">user_account_id : Identifiant de l'utilisateur</param>
    </object>
    <object filename="\func.sql" type="procedure" position="105" id="6e0fa3aae57d4f8e94ddee9be7ffd71a">
      <param name="name">io_create_upload</param>
      <param name="params">
        p_file_size io_upload.file_size%type,
        p_filename io_upload.filename%type,
        p_client_ip io_upload.upload_client_ip%type,
        p_content_type io_upload.content_type%type
</param>
      <param name="returntype">RESULT</param>
      <param name="param">p_file_size    : Taille du fichier en bytes</param>
      <param name="param">p_filename     : Nom du fichier</param>
      <param name="param">p_client_ip    : Adresse IP du client</param>
      <param name="param">p_content_type : Type MIME du contenu</param>
    </object>
    <object filename="\func.sql" type="procedure" position="1867" id="042e3c0af4c34b0f9cb017b714433cc4">
      <param name="name">io_set_packet</param>
      <param name="params">
        p_io_upload_id io_upload.io_upload_id%type,
        p_packet_num io_packet.packet_num%type,
        p_packet_status io_packet.packet_status%type,
        p_base64_data io_packet.base64_data%type
</param>
      <param name="returntype">RESULT</param>
      <param name="param">p_io_upload_id  : Identifiant de l'upload</param>
      <param name="param">p_packet_num    : Numéro du paquet</param>
      <param name="param">p_packet_status : ...</param>
      <param name="param">p_base64_data   : Données du paquet (encodé en base64)</param>
    </object>
    <object filename="\func.sql" type="procedure" position="4042" id="4f84b4aa3c83406f81ae4212320d5ba6">
      <param name="name">io_delete_upload</param>
      <param name="params">
        p_io_upload_id io_upload.io_upload_id%type
</param>
      <param name="returntype">RESULT</param>
      <param name="param">p_io_upload_id  : Identifiant de l'upload</param>
    </object>
    <object filename="\func.sql" type="procedure" position="4525" id="e22620aaf92b4bd683287045fa145745">
      <param name="name">io_create_repository</param>
      <param name="params">
        p_io_repository_id io_repository.io_repository_id%type,
        p_remote_ip io_repository.remote_ip%type
</param>
      <param name="returntype">RESULT</param>
      <param name="param">p_io_repository_id  : Identifiant du dépot</param>
      <param name="param">p_remote_ip         : IP du client</param>
    </object>
    <object filename="\func.sql" type="procedure" position="5487" id="793b9c569ddf4b8eb9d572a3039ca5d6">
      <param name="name">io_set_repository_entry</param>
      <param name="params">
        p_io_repository_id io_repository.io_repository_id%type,
        p_name io_repository_entry.name%type,
        p_value io_repository_entry.value%type
</param>
      <param name="returntype">RESULT</param>
      <param name="param">p_io_repository_id  : Identifiant du dépot</param>
      <param name="param">p_name              : Nom de l'entrée</param>
      <param name="param">p_value             : Valeur de l'entrée</param>
    </object>
    <object filename="\func.sql" type="procedure" position="6985" id="407fc405fa0e4874979d0b206bab48e0">
      <param name="name">io_delete_repository</param>
      <param name="params">
        p_io_repository_id io_repository.io_repository_id%type
</param>
      <param name="returntype">RESULT</param>
      <param name="param">p_io_repository_id  : Identifiant du dépot</param>
    </object>
    <object filename="\IO.php" type="class" position="1293" id="8a5442e4fa834b4b92721c8e88bbb793">
      <param name="name">IOModule</param>
    </object>
    <object filename="\IO.php" type="function" position="3796" id="08f0a3b51b13498299e85cb73f9bc63f">
      <param name="name">makeUpload</param>
      <param name="params">$filename, $file_size, $content_type, $output_dir, $upload_dir, $ip</param>
      <param name="brief">Obtient les données décodées d'un fichier uploadé</param>
      <param name="param">$upload Instance ou identifiant de l'objet Upload (IoUpload)</param>
      <param name="param">$data Pointeur recevant les données</param>
      <param name="return">Résultat de procédures</param>
    </object>
    <object filename="\IO.php" type="method" position="2156" id="53cc9dad3f364164b83013f77346cf3c">
      <param name="name">load</param>
      <param name="params">$local_path</param>
      <param name="brief">Initialise le module</param>
      <param name="param">$local_path Chemin d'accès local vers ce dossier</param>
    </object>
    <object filename="\IO.php" type="method" position="3078" id="f11502962c2b4b71873a42621ed5ec1e">
      <param name="name">getData</param>
      <param name="params">$upload,&amp;$data</param>
      <param name="brief">Obtient les données décodées d'un fichier uploadé</param>
      <param name="param">$upload Instance ou identifiant de l'objet Upload (IoUpload)</param>
      <param name="param">$data Pointeur recevant les données</param>
      <param name="return">Résultat de procédures</param>
    </object>
    <object filename="\IO.php" type="method" position="6197" id="b73b98dffc7e45688fc5bebea13ea56f">
      <param name="name">getRepository</param>
      <param name="params">$repository_id, &amp;$doc, &amp;$infos</param>
      <param name="brief">Fabrique un dossier de dêpot</param>
      <param name="param">$upload Instance ou identifiant de l'objet Upload (IoUpload)</param>
      <param name="param">$data Pointeur recevant les données</param>
      <param name="return">Résultat de procédures</param>
    </object>
    <object filename="\IO.php" type="method" position="6701" id="a9ccad2473d54d8395a9d3aad4bae3ce">
      <param name="name">removeRepository</param>
      <param name="params">$repository_id</param>
      <param name="brief">Supprime un dêpot</param>
      <param name="param">$repository_id Identifiant du dêpot à supprimé</param>
      <param name="return">Résultat de procédures</param>
    </object>
    <object filename="\IO.php" type="method" position="7361" id="c5ce31529cf64410b2a90a82ee170aef">
      <param name="name">getRepositoryFieldsDoc</param>
      <param name="params">$repository_id, &amp;$doc</param>
      <param name="brief">Fabrique un dossier de dêpot</param>
      <param name="param">$upload Instance ou identifiant de l'objet Upload (IoUpload)</param>
      <param name="param">$data Pointeur recevant les données</param>
      <param name="return">Résultat de procédures</param>
    </object>
    <object filename="\IO.php" type="method" position="7946" id="1026ecb003474e0dbbe4ed56bca81c54">
      <param name="name">getRepositoryFields</param>
      <param name="params">$repository_id, &amp;$array</param>
      <param name="brief">Fabrique un dossier de dêpot</param>
      <param name="param">$upload Instance ou identifiant de l'objet Upload (IoUpload)</param>
      <param name="param">$data Pointeur recevant les données</param>
      <param name="return">Résultat de procédures</param>
    </object>
    <object filename="\IO.php" type="method" position="8429" id="dde7dffdea084c76b99947212c12afc4">
      <param name="name">getRepositoryInfos</param>
      <param name="params">$repository_id,&amp;$infos</param>
      <param name="brief">Obtient les informations sur un dêpot</param>
      <param name="param">$upload Identifiant du dêpot</param>
      <param name="param">$infos Pointeur recevant les données</param>
      <param name="return">Résultat de procédures</param>
    </object>
    <object filename="\IO.php" type="method" position="9148" id="e325ad59bcfd4e5c9bc1ba36f3de82eb">
      <param name="name">truncateImageThumb</param>
      <param name="params">$image,$size,$src_w,$src_h,$src_x,$src_y</param>
      <param name="brief">Tronque une image en miniature</param>
      <param name="param">type $image    Image source</param>
      <param name="param">type $size     Hauteur/Largeur désirée de la destination</param>
      <param name="param">type $src_w    Largeur utilisé dans l'image source</param>
      <param name="param">type $src_h    Hauteur utilisé dans l'image source</param>
      <param name="param">type $src_x    Offset X utilisé dans l'image source</param>
      <param name="param">type $src_y    Offset Y utilisé dans l'image source</param>
      <param name="return">Résultat de procédure</param>
      <param name="retval">resource Identifiant de ressource de la nouvelle image</param>
    </object>
    <object filename="\IO.php" type="method" position="10809" id="57415de542de41ba870702e5b6db62ed">
      <param name="name">truncateImage</param>
      <param name="params">$image,$size</param>
      <param name="brief">Tronque la taille d'une image </param>
      <param name="param">type $image    Image source</param>
      <param name="param">type $size     Hauteur/Largeur maximale désirée pour la destination</param>
      <param name="return">Résultat de procédure</param>
      <param name="retval">resource Identifiant de ressource de la nouvelle image</param>
    </object>
    <object filename="\IO.php" type="section" position="1399" id="0cb37a3bfcd34bb89ce69bf35f0a3831">
      <param name="description">Constantes des erreurs</param>
      <param name="class">IOModule</param>
    </object>
    <object filename="\IO.php" type="section" position="1986" id="c7de891a17d241cba2da5c4f57eb2785">
      <param name="description">Méthodes</param>
      <param name="class">IOModule</param>
    </object>
    <object filename="\IoPacket.php" type="class" position="1243" id="c55805a43bd14252a76b3b6e202d74c8">
      <param name="name">IoPacket</param>
      <param name="author">developpement</param>
    </object>
    <object filename="\IoPacket.php" type="method" position="1852" id="db3f3ebb39d940b0b6d0345f473fdde6">
      <param name="name">toXML</param>
      <param name="params">&amp;$inst,$doc</param>
      <param name="brief">Convert existing instance to XML element</param>
      <param name="param">$inst Entity instance (IoPacket)</param>
      <param name="param">$doc Parent document</param>
      <param name="return">New element node</param>
    </object>
    <object filename="\IoPacket.php" type="method" position="8366" id="1b036ea38b84471990ad4b60cb12d74a">
      <param name="name">nameToCode</param>
      <param name="params">$name</param>
      <param name="brief">Convert name to code </param>
    </object>
    <object filename="\IoPacket.php" type="method" position="8738" id="9b03246abe2d4ad898fcd3b1887e2010">
      <param name="name">getByRelation</param>
      <param name="params">&amp;$inst,$obj,$db=null</param>
      <param name="brief">Get entry by id's relation table</param>
      <param name="param">$inst IoPacket instance pointer to initialize</param>
      <param name="param">$obj An another entry class object instance</param>
      <param name="param">$db iDataBase derived instance</param>
    </object>
    <object filename="\IoUpload.php" type="class" position="1243" id="44458734fb05479bb1f294081c55600a">
      <param name="name">IoUpload</param>
      <param name="author">developpement</param>
    </object>
    <object filename="\IoUpload.php" type="method" position="2251" id="27edc3bdba294882b4c240eb5fe11689">
      <param name="name">toXML</param>
      <param name="params">&amp;$inst,$doc</param>
      <param name="brief">Convert existing instance to XML element</param>
      <param name="param">$inst Entity instance (IoUpload)</param>
      <param name="param">$doc Parent document</param>
      <param name="return">New element node</param>
    </object>
    <object filename="\IoUpload.php" type="method" position="10679" id="6b493cb02ab2419c943cfecfaf8518fa">
      <param name="name">nameToCode</param>
      <param name="params">$name</param>
      <param name="brief">Convert name to code </param>
    </object>
    <object filename="\IoUpload.php" type="method" position="11051" id="83e458e6ada24ef7b45a98ca3628e551">
      <param name="name">getByRelation</param>
      <param name="params">&amp;$inst,$obj,$db=null</param>
      <param name="brief">Get entry by id's relation table</param>
      <param name="param">$inst IoUpload instance pointer to initialize</param>
      <param name="param">$obj An another entry class object instance</param>
      <param name="param">$db iDataBase derived instance</param>
    </object>
    <object filename="\begin_upload.php" type="controler" position="1182" id="ccf93303c19b4e9fb2252b871dffb78d">
      <param name="description">Prépare l'upload d'un fichier</param>
      <param name="name">io_module_begin_upload_ctrl</param>
      <param name="UC">begin_upload</param>
    </object>
    <object filename="\check_upload.php" type="controler" position="1177" id="c4b4e5b1ec06460385336ba59bae06be">
      <param name="description">Détermine le statut d'un envoi</param>
      <param name="name">io_module_check_upload_ctrl</param>
      <param name="UC">check_upload</param>
    </object>
    <object filename="\delete_upload.php" type="controler" position="1182" id="912be19b5c744983b3023d8b8ee92fab">
      <param name="description">Supprime le téléchargement d'un fichier</param>
      <param name="name">io_module_delete_upload_ctrl</param>
      <param name="UC">delete_upload</param>
    </object>
    <object filename="\finalize_image_upload.php" type="controler" position="1154" id="58a02e31ffc74ae794786c94fa7e19d6">
      <param name="description">Finalise l'upload d'une image</param>
      <param name="name">io_module_finalize_image_upload_ctrl</param>
      <param name="UC">finalize_image_upload</param>
    </object>
    <object filename="\finalize_upload.php" type="controler" position="1182" id="c4372c5f8fc8451da9b22d2e106f02c5">
      <param name="description">Finalise un upload</param>
      <param name="name">io_module_finalize_upload_ctrl</param>
      <param name="UC">finalize_upload</param>
    </object>
    <object filename="\get_data.php" type="controler" position="1172" id="98e8a192bffb45c9868f6778382b1079">
      <param name="description">Affiche les données d'un fichier uploadé dans la sortie</param>
      <param name="name">io_module_get_data_ctrl</param>
      <param name="UC">get_data</param>
    </object>
    <object filename="\packet_upload.php" type="controler" position="1182" id="14bfe276f4884b7088077d639cdb776e">
      <param name="description">Envoi les données d'un paquet</param>
      <param name="name">io_module_packet_upload_ctrl</param>
      <param name="UC">packet_upload</param>
    </object>
    <object filename="\repository_create.php" type="controler" position="1182" id="0635cd068e334b83bcd4d75787ce6203">
      <param name="description">Crée un nouveau dossier de données</param>
      <param name="name">io_module_repository_create_ctrl</param>
      <param name="UC">repository_create</param>
    </object>
    <object filename="\repository_set.php" type="controler" position="1182" id="1f3bf99e1c2e4ce79bd0f26d49aca995">
      <param name="description">Actualise un dossier de données</param>
      <param name="name">io_module_repository_set_ctrl</param>
      <param name="UC">repository_set</param>
    </object>
    <object filename="\repository_view.php" type="controler" position="1182" id="e56cabb147224562b7b1e3e456b3cc05">
      <param name="description">Affiche les champs d'un dêpot</param>
      <param name="name">io_module_repository_view_ctrl</param>
      <param name="UC">repository_view</param>
    </object>
    <object filename="\func.sql" type="procedure" position="118" id="37768eff0f244f3997fee499f03c4858">
      <param name="name">writer_create_document</param>
      <param name="params">
       p_title writer_document.doc_title%type,
       p_content_type writer_document.content_type%type
</param>
      <param name="returntype">RESULT</param>
      <param name="return">[RESULT] Un des résultats suivant:</param>
      <param name="return">'ERR_OK, WRITER_DOCUMENT_CREATED (WRITER_DOCUMENT_ID)'   -&gt; Document créé</param>
    </object>
    <object filename="\func.sql" type="procedure" position="948" id="ac32f2bbbc10487781d4cb605b5beea6">
      <param name="name">writer_document_publish</param>
      <param name="params">
       p_doc_id writer_document.writer_document_id%type,
       p_page_id varchar,
       p_parent_page_id writer_published.parent_page_id%type,
       p_set_in_default writer_published.set_in_default%type,
       p_set_in_cache writer_published.set_in_cache%type
</param>
      <param name="returntype">RESULT</param>
      <param name="return">[RESULT] Un des résultats suivant:</param>
      <param name="return">'ERR_OK, WRITER_DOCUMENT_CREATED (WRITER_DOCUMENT_ID)'   -&gt; Document créé</param>
    </object>
    <object filename="\Writer.php" type="class" position="1294" id="3c35a77caaa748a4a9f9860187380241">
      <param name="name">WriterModule</param>
    </object>
    <object filename="\Writer.php" type="method" position="2049" id="86e11874468a489d904dfc39f04b9274">
      <param name="name">createDocument</param>
      <param name="params">$title,$content_type</param>
      <param name="brief">Cree un nouveau document</param>
      <param name="param">type $title</param>
      <param name="param">type $content_type</param>
    </object>
    <object filename="\Writer.php" type="method" position="2719" id="17af09c1a6e4431a8f82a62ccf7cc50b">
      <param name="name">publishDocument</param>
      <param name="params">$doc_id,$page_id,$parent_page_id,$set_in_default,$set_in_cache</param>
      <param name="brief">Publie un document</param>
      <param name="param">type $name</param>
      <param name="param">type $attributes</param>
      <param name="param">type $template_file</param>
    </object>
    <object filename="\Writer.php" type="method" position="3458" id="dd4339cd293249e7bbf6d777450ed4ba">
      <param name="name">docToXML</param>
      <param name="params">WriterDocument $doc</param>
      <param name="brief">Fabrique un document HTML</param>
      <param name="param">WriterDocument $doc Document a convertir</param>
      <param name="return">XMLDocument Instance du document XML</param>
      <param name="retval">false Une erreur est survenue (voir cResult::getLast())</param>
    </object>
    <object filename="\Writer.php" type="section" position="1404" id="53e05e1a79714a6fa4556bc88de0f7d6">
      <param name="description">Constantes des erreurs</param>
      <param name="class">WriterModule</param>
    </object>
    <object filename="\Writer.php" type="section" position="1792" id="b93d828268b04424a3993b6dfc307ff5">
      <param name="description">Méthodes</param>
      <param name="class">WriterModule</param>
    </object>
    <object filename="\WriterDocument.php" type="class" position="1243" id="26e8eb025fec4b95835f29b3ca16889a">
      <param name="name">WriterDocument</param>
      <param name="author">AceTeaM</param>
    </object>
    <object filename="\WriterDocument.php" type="method" position="1882" id="37bb5e1fbee941d9bcc506a6e5ab499d">
      <param name="name">toArray</param>
      <param name="params">&amp;$inst</param>
      <param name="brief">Convert existing instance to an associative array</param>
      <param name="param">$inst Entity instance (WriterDocument)</param>
      <param name="return">New associative array</param>
    </object>
    <object filename="\WriterDocument.php" type="method" position="2377" id="8623771c564b44b38e5bae5ad1fe13e0">
      <param name="name">toXML</param>
      <param name="params">&amp;$inst,$doc</param>
      <param name="brief">Convert existing instance to XML element</param>
      <param name="param">$inst Entity instance (WriterDocument)</param>
      <param name="param">$doc Parent document</param>
      <param name="return">New element node</param>
    </object>
    <object filename="\WriterDocument.php" type="method" position="8771" id="e3177b972f51470894bf0f01d92398d9">
      <param name="name">nameToCode</param>
      <param name="params">$name</param>
      <param name="brief">Convert name to code </param>
    </object>
    <object filename="\WriterDocument.php" type="method" position="9143" id="cfc01d3085684c16a024d667f524f036">
      <param name="name">getByRelation</param>
      <param name="params">&amp;$inst,$obj,$db=null</param>
      <param name="brief">Get entry by id's relation table</param>
      <param name="param">$inst WriterDocument instance pointer to initialize</param>
      <param name="param">$obj An another entry class object instance</param>
      <param name="param">$db iDataBase derived instance</param>
    </object>
    <object filename="\WriterPublished.php" type="class" position="1243" id="a1ae846d248b4d78ae996c6b0dc83b58">
      <param name="name">WriterPublished</param>
      <param name="author">AceTeaM</param>
    </object>
    <object filename="\WriterPublished.php" type="method" position="1958" id="3469aa66874b4c15a66400696fe69faf">
      <param name="name">toArray</param>
      <param name="params">&amp;$inst</param>
      <param name="brief">Convert existing instance to an associative array</param>
      <param name="param">$inst Entity instance (WriterPublished)</param>
      <param name="return">New associative array</param>
    </object>
    <object filename="\WriterPublished.php" type="method" position="2509" id="66f6b37e4c7044ff967a4fa092ec0c4c">
      <param name="name">toXML</param>
      <param name="params">&amp;$inst,$doc</param>
      <param name="brief">Convert existing instance to XML element</param>
      <param name="param">$inst Entity instance (WriterPublished)</param>
      <param name="param">$doc Parent document</param>
      <param name="return">New element node</param>
    </object>
    <object filename="\WriterPublished.php" type="method" position="9268" id="66bc4c5bdc28444f909f8d9d8700732d">
      <param name="name">nameToCode</param>
      <param name="params">$name</param>
      <param name="brief">Convert name to code </param>
    </object>
    <object filename="\WriterPublished.php" type="method" position="9640" id="05085c81b1c3435590ff0536aa081f74">
      <param name="name">getByRelation</param>
      <param name="params">&amp;$inst,$obj,$db=null</param>
      <param name="brief">Get entry by id's relation table</param>
      <param name="param">$inst WriterPublished instance pointer to initialize</param>
      <param name="param">$obj An another entry class object instance</param>
      <param name="param">$db iDataBase derived instance</param>
    </object>
    <object filename="\create.php" type="controler" position="1177" id="c5c45d82ced74def81416f74d9ef10ed">
      <param name="description">Crée un nouveau document</param>
      <param name="name">writer_module_create_ctrl</param>
      <param name="fields">doc_title    : Titre du document</param>
      <param name="fields">content_type : Type Mime du document</param>
      <param name="fields">
      </param>
      <param name="Role">Tous</param>
      <param name="UC">Publish</param>
      <param name="Module">writer</param>
      <param name="Champs">doc_title    : Titre du document</param>
    </object>
    <object filename="\get_publish.php" type="controler" position="1177" id="200e50fcc8474e14bf92e8f5026ba0af">
      <param name="description">Obtient les informations de publication d'un document</param>
      <param name="name">writer_module_get_publish_ctrl</param>
      <param name="fields">writer_document_id : Identifiant du document</param>
      <param name="fields">
      </param>
      <param name="Role">Tous</param>
      <param name="UC">Get_Publish</param>
      <param name="Module">writer</param>
      <param name="Champs">writer_document_id : Identifiant du document</param>
    </object>
    <object filename="\list.php" type="controler" position="1177" id="b54447f9a2df4f04939604a988eea911">
      <param name="description">Liste les documents existants</param>
      <param name="name">writer_module_list_ctrl</param>
      <param name="exemple">&lt;data&gt;
        &lt;writerdocument&gt;
            &lt;writer_document_id&gt;542&lt;/writer_document_id&gt;
            &lt;doc_title&gt;Document Title&lt;/doc_title&gt;
            &lt;content_type&gt;text/plain&lt;/content_type&gt;
            &lt;doc_content/&gt;
        &lt;/writerdocument&gt;</param>
      <param name="exemple">
      </param>
      <param name="remark">Retourne les objets WriterDocument et le résultat de la procédure dans un document XML.</param>
      <param name="remark">Le contenu du document n'est pas retourné (l'élément *doc_content* est toujours vide).</param>
      <param name="Role">Tous</param>
      <param name="UC">List</param>
      <param name="Module">writer</param>
      <param name="Remarque">Retourne les objets WriterDocument et le résultat de la procédure dans un document XML.</param>
      <param name="Exemple">&lt;data&gt;</param>
    </object>
    <object filename="\publish.php" type="controler" position="1177" id="65d3f686028d420fbc5290dad83c460f">
      <param name="description">Publie le contenu d'un document sur le serveur Web</param>
      <param name="name">writer_module_publish_ctrl</param>
      <param name="fields">writer_document_id : Identifiant du document</param>
      <param name="fields">parent_page_id     : Identifiant du document parent</param>
      <param name="fields">Champs complémentaires:</param>
      <param name="fields">page_id : ...</param>
      <param name="fields">set_in_default : ...</param>
      <param name="fields">set_in_cache : ...</param>
      <param name="fields">
      </param>
      <param name="Role">Tous</param>
      <param name="UC">Publish</param>
      <param name="Module">writer</param>
      <param name="Champs">writer_document_id : Identifiant du document</param>
    </object>
    <object filename="\read.php" type="controler" position="1177" id="7dab893b6e9442d2992135eb03111e91">
      <param name="description">Affiche le contenu d'un document</param>
      <param name="name">writer_module_read_ctrl</param>
      <param name="fields">writer_document_id : Identifiant du document</param>
      <param name="fields">
      </param>
      <param name="Role">Tous</param>
      <param name="UC">Read</param>
      <param name="Module">writer</param>
      <param name="Champs">writer_document_id : Identifiant du document</param>
    </object>
    <object filename="\view.php" type="controler" position="1177" id="ffdb9df13267482fbcd56db2cdb15f19">
      <param name="description">Affiche le contenu d'un document</param>
      <param name="name">writer_module_view_ctrl</param>
      <param name="fields">writer_document_id : Identifiant du document</param>
      <param name="fields">Champs complémentaires:</param>
      <param name="fields">templatize : Si définit le document est ajouter au template par défaut de l'application</param>
      <param name="fields">
      </param>
      <param name="Role">Tous</param>
      <param name="UC">View</param>
      <param name="Module">writer</param>
      <param name="Champs">writer_document_id : Identifiant du document</param>
      <param name="templatize">Si définit le document est ajouter au template par défaut de l'application</param>
    </object>
    <object filename="\write.php" type="controler" position="1177" id="526cffb4f32a4d9682c74028986c700b">
      <param name="description">Modifie le contenu d'un document</param>
      <param name="name">writer_module_write_ctrl</param>
      <param name="fields">doc_content        : Contenu du document</param>
      <param name="fields">writer_document_id : Identifiant du document</param>
      <param name="fields">
      </param>
      <param name="Role">Tous</param>
      <param name="UC">Write</param>
      <param name="Module">writer</param>
      <param name="Champs">doc_content        : Contenu du document</param>
    </object>
    <object filename="\Mail.php" type="class" position="1293" id="0684002ffe3c44fa89d1d37e6fd85560">
      <param name="name">MailModule</param>
    </object>
    <object filename="\Mail.php" type="method" position="1867" id="d9abc59f988941c0b24347e426524e49">
      <param name="name">load</param>
      <param name="params">$local_path</param>
      <param name="brief">Initialise le module</param>
      <param name="param">$local_path Chemin d'accès local vers ce dossier</param>
    </object>
    <object filename="\Mail.php" type="method" position="2795" id="49cd1d5b556a48789111c03fb272568e">
      <param name="name">sendMessage</param>
      <param name="params">MailMessage $msg,MailServer $server = NULL</param>
      <param name="brief">Envoi un message</param>
      <param name="param">MailMessage $msg Instance du message</param>
      <param name="param">MailServer $server Optionnel, instance du serveur</param>
      <param name="return">bool Résultat de la procédure</param>
    </object>
    <object filename="\Mail.php" type="section" position="1384" id="ede37575365644c7a4cc1011a2960532">
      <param name="description">Constantes des erreurs</param>
      <param name="class">MailModule</param>
    </object>
    <object filename="\Mail.php" type="section" position="1695" id="8424fd0b260449dca8d716c6ec2aedef">
      <param name="description">Méthodes</param>
      <param name="class">MailModule</param>
    </object>
    <object filename="\Mail.php" type="section" position="4029" id="85ace15a25a94df7ae837150d4669696">
      <param name="description">fabrique le corps du message</param>
    </object>
    <object filename="\Mail.php" type="section" position="5085" id="e0f4efba318f401e8a939353f6e6226b">
      <param name="description">puts</param>
    </object>
    <object filename="\MailContact.php" type="class" position="1243" id="3cfc5d451aa74255809d63583ad9b69f">
      <param name="name">MailContact</param>
      <param name="author">developpement</param>
    </object>
    <object filename="\MailContact.php" type="method" position="1869" id="3172c450c73549e4bf178a6e0e478b16">
      <param name="name">toXML</param>
      <param name="params">&amp;$inst,$doc</param>
      <param name="brief">Convert existing instance to XML element</param>
      <param name="param">$inst Entity instance (MailContact)</param>
      <param name="param">$doc Parent document</param>
      <param name="return">New element node</param>
    </object>
    <object filename="\MailContact.php" type="method" position="8441" id="727a1f561b164032a2fc13c5ac6177c8">
      <param name="name">nameToCode</param>
      <param name="params">$name</param>
      <param name="brief">Convert name to code </param>
    </object>
    <object filename="\MailContact.php" type="method" position="8813" id="97d67319cc2e41298ebf45e3cae2a44b">
      <param name="name">getByRelation</param>
      <param name="params">&amp;$inst,$obj,$db=null</param>
      <param name="brief">Get entry by id's relation table</param>
      <param name="param">$inst MailContact instance pointer to initialize</param>
      <param name="param">$obj An another entry class object instance</param>
      <param name="param">$db iDataBase derived instance</param>
    </object>
    <object filename="\MailMessage.php" type="class" position="1243" id="f6d0a2cc10cf46bbbf5d43b31e5a6666">
      <param name="name">MailMessage</param>
      <param name="author">developpement</param>
    </object>
    <object filename="\MailMessage.php" type="method" position="2043" id="c6cdaca5ae3d490b8a6ea5ddf3fe4487">
      <param name="name">toXML</param>
      <param name="params">&amp;$inst,$doc</param>
      <param name="brief">Convert existing instance to XML element</param>
      <param name="param">$inst Entity instance (MailMessage)</param>
      <param name="param">$doc Parent document</param>
      <param name="return">New element node</param>
    </object>
    <object filename="\MailMessage.php" type="method" position="9304" id="70e607e6c3474911a2bb302b6dca4464">
      <param name="name">nameToCode</param>
      <param name="params">$name</param>
      <param name="brief">Convert name to code </param>
    </object>
    <object filename="\MailMessage.php" type="method" position="9676" id="871c16b21dec4f58b4f24e45f9f06379">
      <param name="name">getByRelation</param>
      <param name="params">&amp;$inst,$obj,$db=null</param>
      <param name="brief">Get entry by id's relation table</param>
      <param name="param">$inst MailMessage instance pointer to initialize</param>
      <param name="param">$obj An another entry class object instance</param>
      <param name="param">$db iDataBase derived instance</param>
    </object>
    <object filename="\MailServer.php" type="class" position="1243" id="3d19a4b83a2949ae8490a48c024cdcee">
      <param name="name">MailServer</param>
      <param name="author">developpement</param>
    </object>
    <object filename="\MailServer.php" type="method" position="1791" id="5a4b5c4769a245108a02d37ee3d8f9da">
      <param name="name">toXML</param>
      <param name="params">&amp;$inst,$doc</param>
      <param name="brief">Convert existing instance to XML element</param>
      <param name="param">$inst Entity instance (MailServer)</param>
      <param name="param">$doc Parent document</param>
      <param name="return">New element node</param>
    </object>
    <object filename="\MailServer.php" type="method" position="8008" id="0e482773abaf46c7b447b8d22d8729ed">
      <param name="name">nameToCode</param>
      <param name="params">$name</param>
      <param name="brief">Convert name to code </param>
    </object>
    <object filename="\MailServer.php" type="method" position="8380" id="3f60d21d731c41448b800c359a6a6a73">
      <param name="name">getByRelation</param>
      <param name="params">&amp;$inst,$obj,$db=null</param>
      <param name="brief">Get entry by id's relation table</param>
      <param name="param">$inst MailServer instance pointer to initialize</param>
      <param name="param">$obj An another entry class object instance</param>
      <param name="param">$db iDataBase derived instance</param>
    </object>
    <object filename="\send_message.php" type="controler" position="1177" id="8253469d77214e1f8ad5a9936ba2ead0">
      <param name="description">Envoie un message</param>
      <param name="name">mail_module_send_message_ctrl</param>
      <param name="fields">to      : Adresse du destinataire</param>
      <param name="fields">subject : Sujet du message (Objet)</param>
      <param name="fields">msg     : Corps du message</param>
      <param name="Role">Tous</param>
      <param name="UC">Send_Message</param>
      <param name="Module">mail</param>
      <param name="Champs">to      : Adresse du destinataire</param>
      <param name="subject">Sujet du message (Objet)</param>
      <param name="msg">Corps du message</param>
      <param name="from">Adresse de l'expéditeur</param>
      <param name="notify">Demander une notification de réception</param>
    </object>
    <object filename="\func.sql" type="procedure" position="121" id="7c847836f1964ff2867662334ec8ce94">
      <param name="name">catalog_search_items</param>
      <param name="params"> 
	p_text varchar,
	p_catalog catalog_entry.catalog_entry_id%type,
	p_category catalog_category.catalog_category_id%type,
	p_type catalog_category.item_type%type,
	p_sort varchar
</param>
      <param name="returntype">SETOF</param>
    </object>
    <object filename="\func.sql" type="procedure" position="2281" id="48bfee3b89e240948d94e3a18e31f8c9">
      <param name="name">catalog_items_types</param>
      <param name="params"> 
	p_item_id catalog_item.catalog_item_id%type
</param>
      <param name="returntype">SETOF</param>
    </object>
    <object filename="\func.sql" type="procedure" position="3266" id="2fbe54c1a9d1474688b32859f835ed9f">
      <param name="name">catalog_search_entry</param>
      <param name="params"> 
	p_type catalog_entry.catalog_type%type,
	p_sort varchar
</param>
      <param name="returntype">SETOF</param>
    </object>
    <object filename="\Catalog.php" type="method" position="1427" id="f0cbf353a52841a1b293a660eeafdf2c">
      <param name="name">load</param>
      <param name="params">$local_path</param>
      <param name="brief">Initialise le module</param>
      <param name="param">$local_path Chemin d'accès local vers ce dossier</param>
    </object>
    <object filename="\Catalog.php" type="method" position="2040" id="db3469f00cdf4382a78dcdd8b720526b">
      <param name="name">createCatalog</param>
      <param name="params">&amp;$inst, $type, $typeInst</param>
      <param name="brief">Crée un catalogue</param>
      <param name="param">$inst Pointeur recevant l'instance du catalogue (CatalogEntry)</param>
      <param name="param">$type Type de catalogue à initialiser (nom d'une table héritant de CATALOG_ENTRY)</param>
      <param name="param">$typeInst Instance de la classe correspondant au type 'Type'</param>
      <param name="return">Résultat de procédure</param>
      <param name="retval">true La recherche à réussi, l'argument $list est initialisé</param>
      <param name="retval">false Impossible d'obtenir la liste, voir cResult::getLast pour plus d'informations</param>
      <param name="remarks">getItemsFields retourne tous les champs d'un item y compris les champs des tables étendus</param>
    </object>
    <object filename="\Catalog.php" type="method" position="3670" id="10198f45aa0247d3ac4a0dcaecb5aaf3">
      <param name="name">createItem</param>
      <param name="params">$catalog, &amp;$inst, $title, $desc, $category, $fields</param>
      <param name="brief">Crée un item</param>
      <param name="param">$catalog Instance ou identifiant du catalogue recevant le nouvel item (CatalogEntry)</param>
      <param name="param">$item Pointeur recevant l'instance du nouvel item (CatalogItem)</param>
      <param name="param">$title Titre de l'item</param>
      <param name="param">$desc Description de l'item</param>
      <param name="param">$category Tableau des catégories à associés</param>
      <param name="param">$fields Tableau associatif des champs à initialiser</param>
      <param name="return">Résultat de procédure</param>
      <param name="retval">true La recherche à réussi, l'argument $list est initialisé</param>
      <param name="retval">false Impossible d'obtenir la liste, voir cResult::getLast pour plus d'informations</param>
      <param name="remarks">'createItem' utilise la methode 'setItemsFields' pour initialiser les champs</param>
    </object>
    <object filename="\Catalog.php" type="method" position="5968" id="b7471b5891a44c548fdf578cd27ff2e8">
      <param name="name">setItemFields</param>
      <param name="params">$item, $fields</param>
      <param name="brief">Initialise les champs d'un item</param>
      <param name="param">$item Instance ou identifiant de l'item à modifier</param>
      <param name="param">$fields Tableau associatif des champs à initialiser</param>
      <param name="return">Résultat de procédure</param>
      <param name="retval">true La recherche à réussi, l'argument $list est initialisé</param>
      <param name="retval">false Impossible d'obtenir la liste, voir cResult::getLast pour plus d'informations</param>
      <param name="remarks">setItemFields initialise automatiquement les diverses tables associé à l'item. Si aucune entrée existe setItemFields réalise une opération INSERT sinon une opération UPDATE.</param>
      <param name="remarks">Si une opération INSERT est nécessaire, veillez à renseigner tous les champs obligatoires. Dans le cas contraire la fonction échouera.</param>
    </object>
    <object filename="\Catalog.php" type="method" position="9616" id="f961138c11fd4010837bed1e9ce87b49">
      <param name="name">toXML</param>
      <param name="params">$catalog,$items</param>
      <param name="brief">Crée un catalogue au format XML</param>
      <param name="param">$items Tableaux des instances d'items (CatalogItem)</param>
      <param name="return">Document XML</param>
      <param name="retval">XMLDocument Instance du document XML</param>
    </object>
    <object filename="\Catalog.php" type="method" position="13357" id="299340d540784464966dd43b224b1e83">
      <param name="name">searchItems</param>
      <param name="params">&amp;$list, $catalog_id=NULL, $category=NULL, $text=NULL, $type=NULL, $sort=NULL, $offset=0, $limit=-1, &amp;$count=NULL</param>
      <param name="brief">Recherche des items</param>
      <param name="param">$list Tableau des instances d'items trouvés (CatalogItem)</param>
      <param name="param">$category Catégorie désiré. Si NULL, toutes les catégories sont admises</param>
      <param name="param">$text Texte à rechercher dans le titre ou la description</param>
      <param name="param">$type Type d'item admis. Si NULL, tous les types sont admis</param>
      <param name="param">$sort Colonne à trier. Si NULL, aucun tri</param>
      <param name="param">$offset Offset de départ</param>
      <param name="param">$limit Limite de recherche. Si -1, aucune</param>
      <param name="return">Résultat de procédure</param>
      <param name="retval">true La recherche à réussi, l'argument $list est initialisé</param>
      <param name="retval">false Impossible d'obtenir la liste, voir cResult::getLast pour plus d'informations</param>
      <param name="remarks">Les accents ne sont pas prit en compte dans la recherche.</param>
    </object>
    <object filename="\Catalog.php" type="method" position="15088" id="713cef7b508145db9fb817631207b0fd">
      <param name="name">getItemFields</param>
      <param name="params">$item, &amp;$fields</param>
      <param name="brief">Retourne tous les champs d'un item</param>
      <param name="param">$item Instance ou identifiant de l'item</param>
      <param name="param">$fields Tableau associatif recevant les champs</param>
      <param name="return">Résultat de procédure</param>
      <param name="retval">true La recherche à réussi, l'argument $list est initialisé</param>
      <param name="retval">false Impossible d'obtenir la liste, voir cResult::getLast pour plus d'informations</param>
      <param name="remarks">getItemsFields retourne tous les champs d'un item y compris les champs des tables étendus</param>
    </object>
    <object filename="\Catalog.php" type="method" position="16778" id="ad3b1883f9824b6cb972a5bfb863145d">
      <param name="name">getItemsFields</param>
      <param name="params">$item, &amp;$fields</param>
      <param name="deprecated">Utiliser getItemFields </param>
    </object>
    <object filename="\Catalog.php" type="method" position="16946" id="a0e636b8d828455d8153704dbc1905e0">
      <param name="name">getItemTypes</param>
      <param name="params">$item,&amp;$list</param>
      <param name="brief">Liste les tables associées à un item</param>
      <param name="param">$item Instance ou identifiant de l'item (CatalogItem)</param>
      <param name="param">$list Identifiants des catégories trouvées (string[])</param>
      <param name="return">Résultat de procédures</param>
    </object>
    <object filename="\Catalog.php" type="method" position="17961" id="1949349210af47c39bb067da084a125c">
      <param name="name">getItemsTypes</param>
      <param name="params">$item, &amp;$fields</param>
      <param name="deprecated">Utiliser getItemTypes </param>
    </object>
    <object filename="\Catalog.php" type="method" position="18126" id="ceee4d2f3c54401684196a634f1c183c">
      <param name="name">hasItemType</param>
      <param name="params">$item,$type</param>
      <param name="brief">Vérifie si un item appartient à un type donné</param>
      <param name="param">$item Instance ou identifiant de l'item (CatalogItem)</param>
      <param name="param">$type Type d'item</param>
      <param name="return">Résultat de procédures ou test</param>
      <param name="retval">false L'item n'est pas associé à ce type</param>
      <param name="retval">true L'item est associé à ce type</param>
    </object>
    <object filename="\Catalog.php" type="method" position="19312" id="40c45f7eeaf64914bbfc295f9cbe9a76">
      <param name="name">setItemCategory</param>
      <param name="params">$item,$category</param>
      <param name="brief">Associe un item à une catégorie</param>
      <param name="param">$item Instance ou identifiant de l'item (CatalogItem)</param>
      <param name="param">$category Instance ou identifiant Catègorie (CatalogCategory)</param>
      <param name="return">Résultat de la procédure</param>
    </object>
    <object filename="\Catalog.php" type="method" position="20695" id="2fa7d13c7fed49d0bc0eb28e43495834">
      <param name="name">getItemCategory</param>
      <param name="params">$item,&amp;$list</param>
      <param name="brief">Liste les catégories associées à un item</param>
      <param name="param">$item Instance ou identifiant de l'item (CatalogItem)</param>
      <param name="param">$list Instances des catégories trouvées (CatalogCategory[])</param>
      <param name="return">Résultat de procédures</param>
    </object>
    <object filename="\Catalog.php" type="method" position="21825" id="489d1f31681342879ebb9ef952280f97">
      <param name="name">getItemsCategory</param>
      <param name="params">$item, &amp;$fields</param>
      <param name="deprecated">Utiliser getItemCategory </param>
    </object>
    <object filename="\Catalog.php" type="method" position="21999" id="70b61f884e6c481c93be6506a0cb8801">
      <param name="name">getCategoryByType</param>
      <param name="params">$type,&amp;$list</param>
      <param name="brief">Liste les catégories triées par type d'item</param>
      <param name="param">$type Type d'item</param>
      <param name="param">$list Instances des catégories trouvées (CatalogCategory[])</param>
      <param name="return">Résultat de procédures</param>
    </object>
    <object filename="\Catalog.php" type="method" position="23078" id="a060b36c97ca4d7999ce3269da3c956b">
      <param name="name">getCatalogFields</param>
      <param name="params">$entry, &amp;$fields</param>
      <param name="brief">Retourne tous les champs d'un catalogue</param>
      <param name="param">$entry Instance ou identifiant du catalogue</param>
      <param name="param">$fields Tableau associatif recevant les champs</param>
      <param name="return">Résultat de procédure</param>
      <param name="retval">true La recherche à réussi, l'argument $list est initialisé</param>
      <param name="retval">false Impossible d'obtenir la liste, voir cResult::getLast pour plus d'informations</param>
      <param name="remarks">getCatalogFields retourne tous les champs d'un catalogue y compris les champs étendus</param>
    </object>
    <object filename="\Catalog.php" type="method" position="24772" id="2d66a052b8a3490cad4321559673bec8">
      <param name="name">searchCatalogs</param>
      <param name="params">&amp;$list, $type=NULL, $sort=NULL, $offset=0, $limit=-1, &amp;$count=NULL</param>
      <param name="brief">Recherche des catalogues</param>
      <param name="param">$list Tableau des instances trouvés (CatalogEntry)</param>
      <param name="param">$type Type de catalogue admis. Si NULL, tous les types</param>
      <param name="param">$sort Colonne à trier. Si NULL, aucun tri</param>
      <param name="param">$offset Offset de départ</param>
      <param name="param">$limit Limite en nombre de résultats. Si NULL ou -1, aucune limite</param>
      <param name="return">Résultat de procédure</param>
      <param name="retval">true La recherche à réussi, l'argument $list est initialisé</param>
      <param name="retval">false Impossible d'obtenir la liste, voir cResult::getLast pour plus d'informations</param>
      <param name="remarks">Les accents ne sont pas prit en compte dans la recherche.</param>
    </object>
    <object filename="\Catalog.php" type="section" position="9933" id="85d0322891c342689ae9a46cdbcee86b">
      <param name="description">exporte les données au format XML (catalog)</param>
    </object>
    <object filename="\Catalog.php" type="section" position="11155" id="71d0808460e7489689c4263b99a820fc">
      <param name="description">ajoute les items</param>
    </object>
    <object filename="\CatalogCategory.php" type="class" position="1243" id="7c341a9093284021a7aa6b201374c32e">
      <param name="name">CatalogCategory</param>
      <param name="author">AceTeaM</param>
    </object>
    <object filename="\CatalogCategory.php" type="method" position="1825" id="c8ca51ad2d8044bda8d7bb79092c237c">
      <param name="name">toXML</param>
      <param name="params">&amp;$inst,$doc</param>
      <param name="brief">Convert existing instance to XML element</param>
      <param name="param">$inst Entity instance (CatalogCategory)</param>
      <param name="param">$doc Parent document</param>
      <param name="return">New element node</param>
    </object>
    <object filename="\CatalogCategory.php" type="method" position="8224" id="93fe372899bf40e9b42c11f031b6715b">
      <param name="name">nameToCode</param>
      <param name="params">$name</param>
      <param name="brief">Convert name to code </param>
    </object>
    <object filename="\CatalogCategory.php" type="method" position="8596" id="29bd67e78786460693c36eec6aea1ddf">
      <param name="name">getByRelation</param>
      <param name="params">&amp;$inst,$obj,$db=null</param>
      <param name="brief">Get entry by id's relation table</param>
      <param name="param">$inst CatalogCategory instance pointer to initialize</param>
      <param name="param">$obj An another entry class object instance</param>
      <param name="param">$db iDataBase derived instance</param>
    </object>
    <object filename="\CatalogEntry.php" type="class" position="1243" id="baf8924413f94349ac47ecefc2f63b75">
      <param name="name">CatalogEntry</param>
      <param name="author">AceTeaM</param>
    </object>
    <object filename="\CatalogEntry.php" type="method" position="1738" id="d51f33fcc32d4b758e15ea80a7d65847">
      <param name="name">toXML</param>
      <param name="params">&amp;$inst,$doc</param>
      <param name="brief">Convert existing instance to XML element</param>
      <param name="param">$inst Entity instance (CatalogEntry)</param>
      <param name="param">$doc Parent document</param>
      <param name="return">New element node</param>
    </object>
    <object filename="\CatalogEntry.php" type="method" position="7738" id="d5fb2d9738054ce692dd395c7ca5714b">
      <param name="name">nameToCode</param>
      <param name="params">$name</param>
      <param name="brief">Convert name to code </param>
    </object>
    <object filename="\CatalogEntry.php" type="method" position="8110" id="2c8d45c5e88d408bb609951588f8e222">
      <param name="name">getByRelation</param>
      <param name="params">&amp;$inst,$obj,$db=null</param>
      <param name="brief">Get entry by id's relation table</param>
      <param name="param">$inst CatalogEntry instance pointer to initialize</param>
      <param name="param">$obj An another entry class object instance</param>
      <param name="param">$db iDataBase derived instance</param>
    </object>
    <object filename="\CatalogItem.php" type="class" position="1243" id="900c23e278ba48468d3fd0687a776f7b">
      <param name="name">CatalogItem</param>
      <param name="author">AceTeaM</param>
    </object>
    <object filename="\CatalogItem.php" type="method" position="1862" id="867fd19d91af42caaed7fc5ecd042daf">
      <param name="name">toXML</param>
      <param name="params">&amp;$inst,$doc</param>
      <param name="brief">Convert existing instance to XML element</param>
      <param name="param">$inst Entity instance (CatalogItem)</param>
      <param name="param">$doc Parent document</param>
      <param name="return">New element node</param>
    </object>
    <object filename="\CatalogItem.php" type="method" position="8450" id="cee465d12d5c4a47864cb1bc1b13b0c7">
      <param name="name">nameToCode</param>
      <param name="params">$name</param>
      <param name="brief">Convert name to code </param>
    </object>
    <object filename="\CatalogItem.php" type="method" position="8822" id="de952acde4404bde96e5e171e637b8e7">
      <param name="name">getByRelation</param>
      <param name="params">&amp;$inst,$obj,$db=null</param>
      <param name="brief">Get entry by id's relation table</param>
      <param name="param">$inst CatalogItem instance pointer to initialize</param>
      <param name="param">$obj An another entry class object instance</param>
      <param name="param">$db iDataBase derived instance</param>
    </object>
    <object filename="\Product.php" type="class" position="1243" id="7862c64629094d5e9047862fd781adf3">
      <param name="name">Product</param>
      <param name="author">AceTeaM</param>
    </object>
    <object filename="\Product.php" type="method" position="1885" id="3816ad277c11412585e559c4bc736061">
      <param name="name">toXML</param>
      <param name="params">&amp;$inst,$doc</param>
      <param name="brief">Convert existing instance to XML element</param>
      <param name="param">$inst Entity instance (Product)</param>
      <param name="param">$doc Parent document</param>
      <param name="return">New element node</param>
    </object>
    <object filename="\Product.php" type="method" position="8506" id="77805f646f5c4e299a226fba17ba6cc8">
      <param name="name">nameToCode</param>
      <param name="params">$name</param>
      <param name="brief">Convert name to code </param>
    </object>
    <object filename="\Product.php" type="method" position="8878" id="338b1397ee264a78b39c6dcec83ddb3a">
      <param name="name">getByRelation</param>
      <param name="params">&amp;$inst,$obj,$db=null</param>
      <param name="brief">Get entry by id's relation table</param>
      <param name="param">$inst Product instance pointer to initialize</param>
      <param name="param">$obj An another entry class object instance</param>
      <param name="param">$db iDataBase derived instance</param>
    </object>
    <object filename="\Vegetable.php" type="class" position="1243" id="2d7c31fed89b4d3e9a821cf21ee3f6b4">
      <param name="name">Vegetable</param>
      <param name="author">AceTeaM</param>
    </object>
    <object filename="\Vegetable.php" type="method" position="1715" id="f5a2be53faa3460da8c9692be5f90c15">
      <param name="name">toXML</param>
      <param name="params">&amp;$inst,$doc</param>
      <param name="brief">Convert existing instance to XML element</param>
      <param name="param">$inst Entity instance (Vegetable)</param>
      <param name="param">$doc Parent document</param>
      <param name="return">New element node</param>
    </object>
    <object filename="\Vegetable.php" type="method" position="7577" id="d6aa6e42889f40099188286522d4be3e">
      <param name="name">nameToCode</param>
      <param name="params">$name</param>
      <param name="brief">Convert name to code </param>
    </object>
    <object filename="\Vegetable.php" type="method" position="7949" id="c4145cddb9604af4b3051869471bac0d">
      <param name="name">getByRelation</param>
      <param name="params">&amp;$inst,$obj,$db=null</param>
      <param name="brief">Get entry by id's relation table</param>
      <param name="param">$inst Vegetable instance pointer to initialize</param>
      <param name="param">$obj An another entry class object instance</param>
      <param name="param">$db iDataBase derived instance</param>
    </object>
    <object filename="\Vehicle.php" type="class" position="1243" id="77d1b582be9e4421b128c756ca813f79">
      <param name="name">Vehicle</param>
      <param name="author">AceTeaM</param>
    </object>
    <object filename="\Vehicle.php" type="method" position="1888" id="417a015a159b42099f287e8642b428d8">
      <param name="name">toXML</param>
      <param name="params">&amp;$inst,$doc</param>
      <param name="brief">Convert existing instance to XML element</param>
      <param name="param">$inst Entity instance (Vehicle)</param>
      <param name="param">$doc Parent document</param>
      <param name="return">New element node</param>
    </object>
    <object filename="\Vehicle.php" type="method" position="8565" id="c8769bcdcb2c4bdb8b1a1f318c372f92">
      <param name="name">nameToCode</param>
      <param name="params">$name</param>
      <param name="brief">Convert name to code </param>
    </object>
    <object filename="\Vehicle.php" type="method" position="8937" id="80a0cacc7c22487ca42a9c407a678c08">
      <param name="name">getByRelation</param>
      <param name="params">&amp;$inst,$obj,$db=null</param>
      <param name="brief">Get entry by id's relation table</param>
      <param name="param">$inst Vehicle instance pointer to initialize</param>
      <param name="param">$obj An another entry class object instance</param>
      <param name="param">$db iDataBase derived instance</param>
    </object>
    <object filename="\catalogs.php" type="controler" position="1144" id="2c9f40c9772747fd8fb1092baaddf4d9">
      <param name="description">Liste les catalogues</param>
      <param name="name">catalog_module_catalogs_ctrl</param>
      <param name="Role">Tous</param>
      <param name="UC">Catalogs</param>
      <param name="Module">catalog</param>
    </object>
    <object filename="\search.php" type="controler" position="1177" id="3ee00888f32b42bda138f8d04072b571">
      <param name="description">Recherche des items</param>
      <param name="name">catalog_module_search_ctrl</param>
      <param name="fields">search_string : Texte de la recherche</param>
      <param name="fields">Champs complémentaires:</param>
      <param name="fields">catalog_category_id : Identifiant du catalogue</param>
      <param name="fields">item_type           : Type d'item à rechercher </param>
      <param name="fields">sort                : Nom du champ utilisé pour le tri</param>
      <param name="fields"> </param>
      <param name="Role">Tous</param>
      <param name="UC">Catalogs</param>
      <param name="Module">catalog</param>
      <param name="Champs">search_string : Texte de la recherche</param>
      <param name="sort">Nom du champ utilisé pour le tri</param>
    </object>
  </lib>
</root>